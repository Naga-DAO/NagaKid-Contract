{
	"id": "ebb78f6ca175099dc58da2f45cded674",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC721A/NagaKidsERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\nimport \"erc721a/contracts/ERC721A.sol\";\r\nimport \"erc721a/contracts/extensions/ERC721ABurnable.sol\";\r\nimport \"erc721a/contracts/extensions/ERC721AQueryable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract NagaKids is ERC721A, ERC721ABurnable, Ownable {\r\n\r\n    using Strings for *;\r\n\r\n    mapping(address => bool) private _allowMinter;\r\n\r\n    string private baseURI;\r\n    string public baseExtension = \".json\";\r\n    uint256 public constant maxSupply = 1111;\r\n\r\n    event SetAllowMinter(address indexed caller, address indexed minter, bool allowed);\r\n\r\n    modifier Minter(address _minter) {\r\n        require(isMinter(_minter),\"You are not a minter\");\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        string memory _initBaseURI,\r\n        address _preMintAddress\r\n    ) ERC721A(\"NAGA KIDS\", \"NAGK\") {\r\n\r\n        setBaseURI(_initBaseURI);\r\n\r\n        // set Owner is minter //\r\n        setAllowMinter(msg.sender,true);\r\n\r\n        // preMint 111 => ~ 10% of maxSuplly //\r\n        safeMint(_preMintAddress,111);\r\n    }\r\n\r\n    function setAllowMinter(address minter, bool allowed) public onlyOwner {\r\n        _allowMinter[minter] = allowed;\r\n        emit SetAllowMinter(msg.sender, minter, allowed);\r\n    }\r\n\r\n    function _baseURI() internal view override returns (string memory) {\r\n        return baseURI;\r\n    }\r\n\r\n    function setBaseURI(string memory newBaseURI) public onlyOwner {\r\n        baseURI = newBaseURI;\r\n    }\r\n\r\n    function tokenURI(uint256 tokenId) public view virtual override(ERC721A,IERC721A) returns (string memory){\r\n        require(\r\n            _exists(tokenId),\r\n            \"ERC721Metadata: URI query for nonexistent token\"\r\n        );\r\n\r\n        string memory currentBaseURI = _baseURI();\r\n        return bytes(currentBaseURI).length > 0 \r\n        ? string(abi.encodePacked(currentBaseURI, tokenId.toString(), baseExtension)) \r\n        : \"\";\r\n    }\r\n \r\n    function safeMint(address to,uint amount) public Minter(msg.sender) {\r\n        uint256 totalSupply = totalSupply();\r\n        require(totalSupply + amount <= maxSupply, \"Over max supply\");\r\n        _safeMint(to, amount);\r\n    }\r\n\r\n    function isMinter(address minter) public view returns(bool) {\r\n        return _allowMinter[minter];\r\n    }\r\n\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal override {\r\n        super._beforeTokenTransfers(from, to, startTokenId,quantity);\r\n    }\r\n\r\n    // The following functions are overrides required by Solidity.\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        override(ERC721A,IERC721A)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    function _startTokenId() internal view virtual override returns (uint256) {\r\n        return 1;\r\n    }\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"erc721a/contracts/extensions/ERC721AQueryable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721AQueryable.sol';\nimport '../ERC721A.sol';\n\n/**\n * @title ERC721A Queryable\n * @dev ERC721A subclass with convenience query functions.\n */\nabstract contract ERC721AQueryable is ERC721A, IERC721AQueryable {\n    /**\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n     *\n     * If the `tokenId` is out of bounds:\n     *   - `addr` = `address(0)`\n     *   - `startTimestamp` = `0`\n     *   - `burned` = `false`\n     *   - `extraData` = `0`\n     *\n     * If the `tokenId` is burned:\n     *   - `addr` = `<Address of owner before token was burned>`\n     *   - `startTimestamp` = `<Timestamp when token was burned>`\n     *   - `burned = `true`\n     *   - `extraData` = `<Extra data when token was burned>`\n     *\n     * Otherwise:\n     *   - `addr` = `<Address of owner>`\n     *   - `startTimestamp` = `<Timestamp of start of ownership>`\n     *   - `burned = `false`\n     *   - `extraData` = `<Extra data at start of ownership>`\n     */\n    function explicitOwnershipOf(uint256 tokenId) public view override returns (TokenOwnership memory) {\n        TokenOwnership memory ownership;\n        if (tokenId < _startTokenId() || tokenId >= _nextTokenId()) {\n            return ownership;\n        }\n        ownership = _ownershipAt(tokenId);\n        if (ownership.burned) {\n            return ownership;\n        }\n        return _ownershipOf(tokenId);\n    }\n\n    /**\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n     * See {ERC721AQueryable-explicitOwnershipOf}\n     */\n    function explicitOwnershipsOf(uint256[] memory tokenIds) external view override returns (TokenOwnership[] memory) {\n        unchecked {\n            uint256 tokenIdsLength = tokenIds.length;\n            TokenOwnership[] memory ownerships = new TokenOwnership[](tokenIdsLength);\n            for (uint256 i; i != tokenIdsLength; ++i) {\n                ownerships[i] = explicitOwnershipOf(tokenIds[i]);\n            }\n            return ownerships;\n        }\n    }\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`,\n     * in the range [`start`, `stop`)\n     * (i.e. `start <= tokenId < stop`).\n     *\n     * This function allows for tokens to be queried if the collection\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n     *\n     * Requirements:\n     *\n     * - `start` < `stop`\n     */\n    function tokensOfOwnerIn(\n        address owner,\n        uint256 start,\n        uint256 stop\n    ) external view override returns (uint256[] memory) {\n        unchecked {\n            if (start >= stop) revert InvalidQueryRange();\n            uint256 tokenIdsIdx;\n            uint256 stopLimit = _nextTokenId();\n            // Set `start = max(start, _startTokenId())`.\n            if (start < _startTokenId()) {\n                start = _startTokenId();\n            }\n            // Set `stop = min(stop, stopLimit)`.\n            if (stop > stopLimit) {\n                stop = stopLimit;\n            }\n            uint256 tokenIdsMaxLength = balanceOf(owner);\n            // Set `tokenIdsMaxLength = min(balanceOf(owner), stop - start)`,\n            // to cater for cases where `balanceOf(owner)` is too big.\n            if (start < stop) {\n                uint256 rangeLength = stop - start;\n                if (rangeLength < tokenIdsMaxLength) {\n                    tokenIdsMaxLength = rangeLength;\n                }\n            } else {\n                tokenIdsMaxLength = 0;\n            }\n            uint256[] memory tokenIds = new uint256[](tokenIdsMaxLength);\n            if (tokenIdsMaxLength == 0) {\n                return tokenIds;\n            }\n            // We need to call `explicitOwnershipOf(start)`,\n            // because the slot at `start` may not be initialized.\n            TokenOwnership memory ownership = explicitOwnershipOf(start);\n            address currOwnershipAddr;\n            // If the starting slot exists (i.e. not burned), initialize `currOwnershipAddr`.\n            // `ownership.address` will not be zero, as `start` is clamped to the valid token ID range.\n            if (!ownership.burned) {\n                currOwnershipAddr = ownership.addr;\n            }\n            for (uint256 i = start; i != stop && tokenIdsIdx != tokenIdsMaxLength; ++i) {\n                ownership = _ownershipAt(i);\n                if (ownership.burned) {\n                    continue;\n                }\n                if (ownership.addr != address(0)) {\n                    currOwnershipAddr = ownership.addr;\n                }\n                if (currOwnershipAddr == owner) {\n                    tokenIds[tokenIdsIdx++] = i;\n                }\n            }\n            // Downsize the array to fit.\n            assembly {\n                mstore(tokenIds, tokenIdsIdx)\n            }\n            return tokenIds;\n        }\n    }\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`.\n     *\n     * This function scans the ownership mapping and is O(totalSupply) in complexity.\n     * It is meant to be called off-chain.\n     *\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n     * multiple smaller scans if the collection is large enough to cause\n     * an out-of-gas error (10K pfp collections should be fine).\n     */\n    function tokensOfOwner(address owner) external view override returns (uint256[] memory) {\n        unchecked {\n            uint256 tokenIdsIdx;\n            address currOwnershipAddr;\n            uint256 tokenIdsLength = balanceOf(owner);\n            uint256[] memory tokenIds = new uint256[](tokenIdsLength);\n            TokenOwnership memory ownership;\n            for (uint256 i = _startTokenId(); tokenIdsIdx != tokenIdsLength; ++i) {\n                ownership = _ownershipAt(i);\n                if (ownership.burned) {\n                    continue;\n                }\n                if (ownership.addr != address(0)) {\n                    currOwnershipAddr = ownership.addr;\n                }\n                if (currOwnershipAddr == owner) {\n                    tokenIds[tokenIdsIdx++] = i;\n                }\n            }\n            return tokenIds;\n        }\n    }\n}\n"
			},
			"erc721a/contracts/extensions/ERC721ABurnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721ABurnable.sol';\nimport '../ERC721A.sol';\n\n/**\n * @title ERC721A Burnable Token\n * @dev ERC721A Token that can be irreversibly burned (destroyed).\n */\nabstract contract ERC721ABurnable is ERC721A, IERC721ABurnable {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual override {\n        _burn(tokenId, true);\n    }\n}\n"
			},
			"erc721a/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev ERC721 token receiver interface.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard,\n * including the Metadata extension. Built to optimize for lower gas during batch mints.\n *\n * Assumes serials are sequentially minted starting at `_startTokenId()`\n * (defaults to 0, e.g. 0, 1, 2, 3..).\n *\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n *\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Mask of an entry in packed address data.\n    uint256 private constant BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with `_mintERC2309`.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to `_mintERC2309`\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The tokenId of the next token to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See `_packedOwnershipOf` implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see `_totalMinted`.\n     */\n    function totalSupply() public view override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view returns (uint256) {\n        // Counter underflow is impossible as _currentIndex does not decrement,\n        // and it is initialized to `_startTokenId()`\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view returns (uint256) {\n        return _burnCounter;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes of the XOR of\n        // all function selectors in the interface. See: https://eips.ethereum.org/EIPS/eip-165\n        // e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> BITPOS_NUMBER_MINTED) & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> BITPOS_NUMBER_BURNED) & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & BITMASK_AUX_COMPLEMENT) | (auxCasted << BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr)\n                if (curr < _currentIndex) {\n                    uint256 packed = _packedOwnerships[curr];\n                    // If not burned.\n                    if (packed & BITMASK_BURNED == 0) {\n                        // Invariant:\n                        // There will always be an ownership that has an address and is not burned\n                        // before an ownership that does not have an address and is not burned.\n                        // Hence, curr will not underflow.\n                        //\n                        // We can directly compare the packed value.\n                        // If the address is zero, packed is zero.\n                        while (packed == 0) {\n                            packed = _packedOwnerships[--curr];\n                        }\n                        return packed;\n                    }\n                }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, BITMASK_ADDRESS)\n            // `owner | (block.timestamp << BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << BITPOS_NEXT_INITIALIZED`.\n            result := shl(BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public override {\n        address owner = ownerOf(tokenId);\n\n        if (_msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                revert ApprovalCallerNotOwnerNorApproved();\n            }\n\n        _tokenApprovals[tokenId] = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        if (operator == _msgSenderERC721A()) revert ApproveToCaller();\n\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                revert TransferToNonERC721ReceiverImplementer();\n            }\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return\n            _startTokenId() <= tokenId &&\n            tokenId < _currentIndex && // If within bounds,\n            _packedOwnerships[tokenId] & BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     *   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            uint256 tokenId = startTokenId;\n            uint256 end = startTokenId + quantity;\n            do {\n                emit Transfer(address(0), to, tokenId++);\n            } while (tokenId < end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n        if (quantity > MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        mapping(uint256 => address) storage tokenApprovalsPtr = _tokenApprovals;\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId]`.\n        assembly {\n            // Compute the slot.\n            mstore(0x00, tokenId)\n            mstore(0x20, tokenApprovalsPtr.slot)\n            approvedAddressSlot := keccak256(0x00, 0x40)\n            // Load the slot's value from storage.\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    /**\n     * @dev Returns whether the `approvedAddress` is equals to `from` or `msgSender`.\n     */\n    function _isOwnerOrApproved(\n        address approvedAddress,\n        address from,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            from := and(from, BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, BITMASK_ADDRESS)\n            // `msgSender == from || msgSender == approvedAddress`.\n            result := or(eq(msgSender, from), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (BITMASK_BURNED | BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred.\n     * This includes minting.\n     * And also called before burning one token.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred.\n     * This includes minting.\n     * And also called after one token has been burned.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function _toString(uint256 value) internal pure returns (string memory ptr) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit),\n            // but we allocate 128 bytes to keep the free memory pointer 32-byte word aliged.\n            // We will need 1 32-byte word to store the length,\n            // and 3 32-byte words to store a maximum of 78 digits. Total: 32 + 3 * 32 = 128.\n            ptr := add(mload(0x40), 128)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, ptr)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := ptr\n\n            // We write the string from the rightmost digit to the leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // Costs a bit more than early returning for the zero case,\n            // but cheaper in terms of deployment and overall runtime costs.\n            for {\n                // Initialize and perform the first pass without check.\n                let temp := value\n                // Move the pointer 1 byte leftwards to point to an empty character slot.\n                ptr := sub(ptr, 1)\n                // Write the character to the pointer. 48 is the ASCII index of '0'.\n                mstore8(ptr, add(48, mod(temp, 10)))\n                temp := div(temp, 10)\n            } temp {\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n            } {\n                // Body of the for loop.\n                ptr := sub(ptr, 1)\n                mstore8(ptr, add(48, mod(temp, 10)))\n            }\n\n            let length := sub(end, ptr)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            ptr := sub(ptr, 32)\n            // Store the length.\n            mstore(ptr, length)\n        }\n    }\n}\n"
			},
			"erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of an ERC721AQueryable compliant contract.\n */\ninterface IERC721AQueryable is IERC721A {\n    /**\n     * Invalid query range (`start` >= `stop`).\n     */\n    error InvalidQueryRange();\n\n    /**\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n     *\n     * If the `tokenId` is out of bounds:\n     *   - `addr` = `address(0)`\n     *   - `startTimestamp` = `0`\n     *   - `burned` = `false`\n     *\n     * If the `tokenId` is burned:\n     *   - `addr` = `<Address of owner before token was burned>`\n     *   - `startTimestamp` = `<Timestamp when token was burned>`\n     *   - `burned = `true`\n     *\n     * Otherwise:\n     *   - `addr` = `<Address of owner>`\n     *   - `startTimestamp` = `<Timestamp of start of ownership>`\n     *   - `burned = `false`\n     */\n    function explicitOwnershipOf(uint256 tokenId) external view returns (TokenOwnership memory);\n\n    /**\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n     * See {ERC721AQueryable-explicitOwnershipOf}\n     */\n    function explicitOwnershipsOf(uint256[] memory tokenIds) external view returns (TokenOwnership[] memory);\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`,\n     * in the range [`start`, `stop`)\n     * (i.e. `start <= tokenId < stop`).\n     *\n     * This function allows for tokens to be queried if the collection\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n     *\n     * Requirements:\n     *\n     * - `start` < `stop`\n     */\n    function tokensOfOwnerIn(\n        address owner,\n        uint256 start,\n        uint256 stop\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`.\n     *\n     * This function scans the ownership mapping and is O(totalSupply) in complexity.\n     * It is meant to be called off-chain.\n     *\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n     * multiple smaller scans if the collection is large enough to cause\n     * an out-of-gas error (10K pfp collections should be fine).\n     */\n    function tokensOfOwner(address owner) external view returns (uint256[] memory);\n}\n"
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of an ERC721ABurnable compliant contract.\n */\ninterface IERC721ABurnable is IERC721A {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) external;\n}\n"
			},
			"erc721a/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of an ERC721A compliant contract.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * The caller cannot approve to their own address.\n     */\n    error ApproveToCaller();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set through `_extraData`.\n        uint24 extraData;\n    }\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     *\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // ==============================\n    //            IERC165\n    // ==============================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // ==============================\n    //            IERC721\n    // ==============================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // ==============================\n    //        IERC721Metadata\n    // ==============================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // ==============================\n    //            IERC2309\n    // ==============================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n     * as defined in the ERC2309 standard. See `_mintERC2309` for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x24 PUSH22 0xA97023F85002D88B36969440A2F71B0286AD4E8B8954 SWAP7 MLOAD CREATE2 RETURN 0xD8 0xD2 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "146:1885:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x24 PUSH22 0xA97023F85002D88B36969440A2F71B0286AD4E8B8954 SWAP7 MLOAD CREATE2 RETURN 0xD8 0xD2 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "146:1885:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"ERC721A/NagaKidsERC721A.sol",
								"erc721a/contracts/ERC721A.sol",
								"erc721a/contracts/IERC721A.sol",
								"erc721a/contracts/extensions/ERC721ABurnable.sol",
								"erc721a/contracts/extensions/ERC721AQueryable.sol",
								"erc721a/contracts/extensions/IERC721ABurnable.sol",
								"erc721a/contracts/extensions/IERC721AQueryable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC721A/NagaKidsERC721A.sol": {
				"NagaKids": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_initBaseURI",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_preMintAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								}
							],
							"name": "SetAllowMinter",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseExtension",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"name": "isMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								}
							],
							"name": "setAllowMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newBaseURI",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC721A/NagaKidsERC721A.sol\":507:544  string public baseExtension = \".json\" */\n  0xc0\n    /* \"ERC721A/NagaKidsERC721A.sol\":332:2991  contract NagaKids is ERC721A, ERC721ABurnable, Ownable {... */\n  0x40\n    /* \"ERC721A/NagaKidsERC721A.sol\":507:544  string public baseExtension = \".json\" */\n  mstore\n  0x05\n    /* \"ERC721A/NagaKidsERC721A.sol\":332:2991  contract NagaKids is ERC721A, ERC721ABurnable, Ownable {... */\n  0x80\n    /* \"ERC721A/NagaKidsERC721A.sol\":507:544  string public baseExtension = \".json\" */\n  swap1\n  dup2\n  mstore\n  mstore(0xa0, shl(0xd9, 0x173539b7b7))\n  0x0b\n  swap1\n  tag_1\n  swap1\n  dup3\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"ERC721A/NagaKidsERC721A.sol\":812:1146  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_4\n  swap2\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"erc721a/contracts/ERC721A.sol\":3986:4140  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb8, 0x4e414741204b494453)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x4e41474b)\n  dup2\n  mstore\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4060:4065  name_ */\n  dup2\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4057  _name */\n  0x02\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4065  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_10:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4082  _symbol */\n  0x03\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4092  _symbol = symbol_ */\n  tag_11\n    /* \"erc721a/contracts/ERC721A.sol\":4085:4092  symbol_ */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4082  _symbol */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4092  _symbol = symbol_ */\n  tag_2\n  jump\t// in\ntag_11:\n  pop\n  pop\n    /* \"ERC721A/NagaKidsERC721A.sol\":2977:2978  1 */\n  0x01\n    /* \"erc721a/contracts/ERC721A.sol\":4102:4115  _currentIndex */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":4102:4133  _currentIndex = _startTokenId() */\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_15\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_18\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_15:\n    /* \"ERC721A/NagaKidsERC721A.sol\":944:968  setBaseURI(_initBaseURI) */\n  tag_20\n    /* \"ERC721A/NagaKidsERC721A.sol\":955:967  _initBaseURI */\n  dup3\n    /* \"ERC721A/NagaKidsERC721A.sol\":944:954  setBaseURI */\n  tag_21\n    /* \"ERC721A/NagaKidsERC721A.sol\":944:968  setBaseURI(_initBaseURI) */\n  jump\t// in\ntag_20:\n    /* \"ERC721A/NagaKidsERC721A.sol\":1016:1047  setAllowMinter(msg.sender,true) */\n  tag_22\n    /* \"ERC721A/NagaKidsERC721A.sol\":1031:1041  msg.sender */\n  caller\n    /* \"ERC721A/NagaKidsERC721A.sol\":1042:1046  true */\n  0x01\n    /* \"ERC721A/NagaKidsERC721A.sol\":1016:1030  setAllowMinter */\n  tag_23\n    /* \"ERC721A/NagaKidsERC721A.sol\":1016:1047  setAllowMinter(msg.sender,true) */\n  jump\t// in\ntag_22:\n    /* \"ERC721A/NagaKidsERC721A.sol\":1109:1138  safeMint(_preMintAddress,111) */\n  tag_24\n    /* \"ERC721A/NagaKidsERC721A.sol\":1118:1133  _preMintAddress */\n  dup2\n    /* \"ERC721A/NagaKidsERC721A.sol\":1134:1137  111 */\n  0x6f\n    /* \"ERC721A/NagaKidsERC721A.sol\":1109:1117  safeMint */\n  tag_25\n    /* \"ERC721A/NagaKidsERC721A.sol\":1109:1138  safeMint(_preMintAddress,111) */\n  jump\t// in\ntag_24:\n    /* \"ERC721A/NagaKidsERC721A.sol\":812:1146  constructor(... */\n  pop\n  pop\n    /* \"ERC721A/NagaKidsERC721A.sol\":332:2991  contract NagaKids is ERC721A, ERC721ABurnable, Ownable {... */\n  jump(tag_133)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  0x08\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"ERC721A/NagaKidsERC721A.sol\":1449:1551  function setBaseURI(string memory newBaseURI) public onlyOwner {... */\ntag_21:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_34\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4364:4366   */\n  0x20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4346:4367   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":4383:4401   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4376:4406   */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"#utility.yul\":4422:4440   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4415:4477   */\n  mstore\n    /* \"#utility.yul\":4494:4512   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_34:\n    /* \"ERC721A/NagaKidsERC721A.sol\":1523:1530  baseURI */\n  0x0a\n    /* \"ERC721A/NagaKidsERC721A.sol\":1523:1543  baseURI = newBaseURI */\n  tag_38\n    /* \"ERC721A/NagaKidsERC721A.sol\":1533:1543  newBaseURI */\n  dup3\n    /* \"ERC721A/NagaKidsERC721A.sol\":1523:1530  baseURI */\n  dup3\n    /* \"ERC721A/NagaKidsERC721A.sol\":1523:1543  baseURI = newBaseURI */\n  tag_2\n  jump\t// in\ntag_38:\n  pop\n    /* \"ERC721A/NagaKidsERC721A.sol\":1449:1551  function setBaseURI(string memory newBaseURI) public onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"ERC721A/NagaKidsERC721A.sol\":1154:1333  function setAllowMinter(address minter, bool allowed) public onlyOwner {... */\ntag_23:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_42\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4364:4366   */\n  0x20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4346:4367   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":4383:4401   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4376:4406   */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"#utility.yul\":4422:4440   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4415:4477   */\n  mstore\n    /* \"#utility.yul\":4494:4512   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_35\n    /* \"#utility.yul\":4162:4518   */\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\ntag_42:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC721A/NagaKidsERC721A.sol\":1236:1256  _allowMinter[minter] */\n  dup3\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"ERC721A/NagaKidsERC721A.sol\":1236:1248  _allowMinter */\n  0x09\n    /* \"ERC721A/NagaKidsERC721A.sol\":1236:1256  _allowMinter[minter] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  swap2\n  dup3\n  swap1\n  keccak256\n    /* \"ERC721A/NagaKidsERC721A.sol\":1236:1266  _allowMinter[minter] = allowed */\n  dup1\n  sload\n  not(0xff)\n  and\n  dup6\n  iszero\n  iszero\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ERC721A/NagaKidsERC721A.sol\":1282:1325  SetAllowMinter(msg.sender, minter, allowed) */\n  swap2\n  mload\n    /* \"#utility.yul\":4663:4704   */\n  swap2\n  dup3\n  mstore\n    /* \"ERC721A/NagaKidsERC721A.sol\":1297:1307  msg.sender */\n  caller\n  swap2\n    /* \"ERC721A/NagaKidsERC721A.sol\":1282:1325  SetAllowMinter(msg.sender, minter, allowed) */\n  0x3c49a0d2dcd603245c20eb1985825d770748295cd570de6d24861080451bbd41\n  swap2\n    /* \"#utility.yul\":4636:4654   */\n  add\n    /* \"ERC721A/NagaKidsERC721A.sol\":1282:1325  SetAllowMinter(msg.sender, minter, allowed) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ERC721A/NagaKidsERC721A.sol\":1154:1333  function setAllowMinter(address minter, bool allowed) public onlyOwner {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC721A/NagaKidsERC721A.sol\":2012:2238  function safeMint(address to,uint amount) public Minter(msg.sender) {... */\ntag_25:\n    /* \"ERC721A/NagaKidsERC721A.sol\":2068:2078  msg.sender */\n  caller\n    /* \"ERC721A/NagaKidsERC721A.sol\":2300:2304  bool */\n  0x00\n    /* \"ERC721A/NagaKidsERC721A.sol\":2324:2344  _allowMinter[minter] */\n  dup2\n  dup2\n  mstore\n    /* \"ERC721A/NagaKidsERC721A.sol\":2324:2336  _allowMinter */\n  0x09\n    /* \"ERC721A/NagaKidsERC721A.sol\":2324:2344  _allowMinter[minter] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"ERC721A/NagaKidsERC721A.sol\":735:784  require(isMinter(_minter),\"You are not a minter\") */\n  tag_50\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4917:4919   */\n  0x20\n    /* \"ERC721A/NagaKidsERC721A.sol\":735:784  require(isMinter(_minter),\"You are not a minter\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4899:4920   */\n  mstore\n    /* \"#utility.yul\":4956:4958   */\n  0x14\n    /* \"#utility.yul\":4936:4954   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4929:4959   */\n  mstore\n    /* \"#utility.yul\":4995:5017   */\n  0x596f7520617265206e6f742061206d696e746572000000000000000000000000\n    /* \"#utility.yul\":4975:4993   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4968:5018   */\n  mstore\n    /* \"#utility.yul\":5035:5053   */\n  0x64\n  add\n    /* \"ERC721A/NagaKidsERC721A.sol\":735:784  require(isMinter(_minter),\"You are not a minter\") */\n  tag_35\n    /* \"#utility.yul\":4715:5059   */\n  jump\n    /* \"ERC721A/NagaKidsERC721A.sol\":735:784  require(isMinter(_minter),\"You are not a minter\") */\ntag_50:\n    /* \"ERC721A/NagaKidsERC721A.sol\":2091:2110  uint256 totalSupply */\n  0x00\n    /* \"ERC721A/NagaKidsERC721A.sol\":2113:2126  totalSupply() */\n  tag_54\n    /* \"ERC721A/NagaKidsERC721A.sol\":2977:2978  1 */\n  0x01\n    /* \"erc721a/contracts/ERC721A.sol\":4998:5010  _burnCounter */\n  sload\n    /* \"erc721a/contracts/ERC721A.sol\":4789:4796  uint256 */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":4982:4995  _currentIndex */\n  sload\n  not(0x00)\n    /* \"erc721a/contracts/ERC721A.sol\":4982:5010  _currentIndex - _burnCounter */\n  swap2\n  swap1\n  sub\n    /* \"erc721a/contracts/ERC721A.sol\":4982:5028  _currentIndex - _burnCounter - _startTokenId() */\n  add\n  swap1\n    /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n  jump\n    /* \"ERC721A/NagaKidsERC721A.sol\":2113:2126  totalSupply() */\ntag_54:\n    /* \"ERC721A/NagaKidsERC721A.sol\":2091:2126  uint256 totalSupply = totalSupply() */\n  swap1\n  pop\n    /* \"ERC721A/NagaKidsERC721A.sol\":587:591  1111 */\n  0x0457\n    /* \"ERC721A/NagaKidsERC721A.sol\":2145:2165  totalSupply + amount */\n  tag_56\n    /* \"ERC721A/NagaKidsERC721A.sol\":2159:2165  amount */\n  dup5\n    /* \"ERC721A/NagaKidsERC721A.sol\":2091:2126  uint256 totalSupply = totalSupply() */\n  dup4\n    /* \"ERC721A/NagaKidsERC721A.sol\":2145:2165  totalSupply + amount */\n  tag_57\n  jump\t// in\ntag_56:\n    /* \"ERC721A/NagaKidsERC721A.sol\":2145:2178  totalSupply + amount <= maxSupply */\n  gt\n  iszero\n    /* \"ERC721A/NagaKidsERC721A.sol\":2137:2198  require(totalSupply + amount <= maxSupply, \"Over max supply\") */\n  tag_58\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5496:5498   */\n  0x20\n    /* \"ERC721A/NagaKidsERC721A.sol\":2137:2198  require(totalSupply + amount <= maxSupply, \"Over max supply\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5478:5499   */\n  mstore\n    /* \"#utility.yul\":5535:5537   */\n  0x0f\n    /* \"#utility.yul\":5515:5533   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5508:5538   */\n  mstore\n  shl(0x88, 0x4f766572206d617820737570706c79)\n    /* \"#utility.yul\":5554:5572   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5547:5592   */\n  mstore\n    /* \"#utility.yul\":5609:5627   */\n  0x64\n  add\n    /* \"ERC721A/NagaKidsERC721A.sol\":2137:2198  require(totalSupply + amount <= maxSupply, \"Over max supply\") */\n  tag_35\n    /* \"#utility.yul\":5294:5633   */\n  jump\n    /* \"ERC721A/NagaKidsERC721A.sol\":2137:2198  require(totalSupply + amount <= maxSupply, \"Over max supply\") */\ntag_58:\n    /* \"ERC721A/NagaKidsERC721A.sol\":2209:2230  _safeMint(to, amount) */\n  tag_61\n    /* \"ERC721A/NagaKidsERC721A.sol\":2219:2221  to */\n  dup5\n    /* \"ERC721A/NagaKidsERC721A.sol\":2223:2229  amount */\n  dup5\n    /* \"ERC721A/NagaKidsERC721A.sol\":2209:2218  _safeMint */\n  tag_62\n    /* \"ERC721A/NagaKidsERC721A.sol\":2209:2230  _safeMint(to, amount) */\n  jump\t// in\ntag_61:\n    /* \"ERC721A/NagaKidsERC721A.sol\":2080:2238  {... */\n  pop\n    /* \"ERC721A/NagaKidsERC721A.sol\":2012:2238  function safeMint(address to,uint amount) public Minter(msg.sender) {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"erc721a/contracts/ERC721A.sol\":15138:15240  function _safeMint(address to, uint256 quantity) internal {... */\ntag_62:\n    /* \"erc721a/contracts/ERC721A.sol\":15206:15233  _safeMint(to, quantity, '') */\n  tag_38\n    /* \"erc721a/contracts/ERC721A.sol\":15216:15218  to */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":15220:15228  quantity */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":15206:15233  _safeMint(to, quantity, '') */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":15206:15215  _safeMint */\n  shl(0x20, tag_69)\n    /* \"erc721a/contracts/ERC721A.sol\":15206:15233  _safeMint(to, quantity, '') */\n  0x20\n  shr\n  jump\t// in\n    /* \"erc721a/contracts/ERC721A.sol\":15641:16302  function _safeMint(... */\ntag_69:\n    /* \"erc721a/contracts/ERC721A.sol\":15759:15778  _mint(to, quantity) */\n  tag_71\n    /* \"erc721a/contracts/ERC721A.sol\":15765:15767  to */\n  dup4\n    /* \"erc721a/contracts/ERC721A.sol\":15769:15777  quantity */\n  dup4\n    /* \"erc721a/contracts/ERC721A.sol\":15759:15764  _mint */\n  tag_72\n    /* \"erc721a/contracts/ERC721A.sol\":15759:15778  _mint(to, quantity) */\n  jump\t// in\ntag_71:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"erc721a/contracts/ERC721A.sol\":15817:15831  to.code.length */\n  dup4\n  and\n  extcodesize\n    /* \"erc721a/contracts/ERC721A.sol\":15817:15836  to.code.length != 0 */\n  iszero\n    /* \"erc721a/contracts/ERC721A.sol\":15813:16286  if (to.code.length != 0) {... */\n  tag_73\n  jumpi\n    /* \"erc721a/contracts/ERC721A.sol\":15856:15867  uint256 end */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":15870:15883  _currentIndex */\n  sload\n    /* \"erc721a/contracts/ERC721A.sol\":15917:15931  end - quantity */\n  dup3\n  dup2\n  sub\n    /* \"erc721a/contracts/ERC721A.sol\":15949:16178  do {... */\ntag_74:\n    /* \"erc721a/contracts/ERC721A.sol\":16026:16033  index++ */\n  0x01\n  dup2\n  add\n  swap1\n    /* \"erc721a/contracts/ERC721A.sol\":15979:16041  _checkContractOnERC721Received(address(0), to, index++, _data) */\n  tag_77\n  swap1\n    /* \"erc721a/contracts/ERC721A.sol\":16018:16019  0 */\n  0x00\n  swap1\n    /* \"erc721a/contracts/ERC721A.sol\":16022:16024  to */\n  dup8\n  swap1\n    /* \"erc721a/contracts/ERC721A.sol\":16035:16040  _data */\n  dup7\n    /* \"erc721a/contracts/ERC721A.sol\":15979:16009  _checkContractOnERC721Received */\n  tag_78\n    /* \"erc721a/contracts/ERC721A.sol\":15979:16041  _checkContractOnERC721Received(address(0), to, index++, _data) */\n  jump\t// in\ntag_77:\n    /* \"erc721a/contracts/ERC721A.sol\":15974:16139  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n  tag_79\n  jumpi\n    /* \"erc721a/contracts/ERC721A.sol\":16076:16116  TransferToNonERC721ReceiverImplementer() */\n  mload(0x40)\n  shl(0xe1, 0x68d2bf6b)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"erc721a/contracts/ERC721A.sol\":15974:16139  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\ntag_79:\n    /* \"erc721a/contracts/ERC721A.sol\":16173:16176  end */\n  dup2\n    /* \"erc721a/contracts/ERC721A.sol\":16165:16170  index */\n  dup2\n    /* \"erc721a/contracts/ERC721A.sol\":16165:16176  index < end */\n  lt\n    /* \"erc721a/contracts/ERC721A.sol\":15949:16178  do {... */\n  tag_74\n  jumpi\n    /* \"erc721a/contracts/ERC721A.sol\":16258:16261  end */\n  dup2\n    /* \"erc721a/contracts/ERC721A.sol\":16241:16254  _currentIndex */\n  sload(0x00)\n    /* \"erc721a/contracts/ERC721A.sol\":16241:16261  _currentIndex != end */\n  eq\n    /* \"erc721a/contracts/ERC721A.sol\":16237:16271  if (_currentIndex != end) revert() */\n  tag_80\n  jumpi\n    /* \"erc721a/contracts/ERC721A.sol\":16263:16271  revert() */\n  0x00\n  dup1\n  revert\n    /* \"erc721a/contracts/ERC721A.sol\":16237:16271  if (_currentIndex != end) revert() */\ntag_80:\n    /* \"erc721a/contracts/ERC721A.sol\":15838:16286  {... */\n  pop\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":15813:16286  if (to.code.length != 0) {... */\ntag_73:\n    /* \"erc721a/contracts/ERC721A.sol\":15641:16302  function _safeMint(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"erc721a/contracts/ERC721A.sol\":16563:18055  function _mint(address to, uint256 quantity) internal {... */\ntag_72:\n    /* \"erc721a/contracts/ERC721A.sol\":16627:16647  uint256 startTokenId */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":16650:16663  _currentIndex */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"erc721a/contracts/ERC721A.sol\":16677:16693  to == address(0) */\n  dup4\n  and\n    /* \"erc721a/contracts/ERC721A.sol\":16673:16721  if (to == address(0)) revert MintToZeroAddress() */\n  tag_82\n  jumpi\n    /* \"erc721a/contracts/ERC721A.sol\":16702:16721  MintToZeroAddress() */\n  mload(0x40)\n  shl(0xe8, 0x2e0763)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"erc721a/contracts/ERC721A.sol\":16673:16721  if (to == address(0)) revert MintToZeroAddress() */\ntag_82:\n    /* \"erc721a/contracts/ERC721A.sol\":16735:16743  quantity */\n  dup2\n    /* \"erc721a/contracts/ERC721A.sol\":16747:16748  0 */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":16735:16748  quantity == 0 */\n  sub\n    /* \"erc721a/contracts/ERC721A.sol\":16731:16775  if (quantity == 0) revert MintZeroQuantity() */\n  tag_83\n  jumpi\n    /* \"erc721a/contracts/ERC721A.sol\":16757:16775  MintZeroQuantity() */\n  mload(0x40)\n  shl(0xe0, 0xb562e8dd)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"erc721a/contracts/ERC721A.sol\":16731:16775  if (quantity == 0) revert MintZeroQuantity() */\ntag_83:\n    /* \"erc721a/contracts/ERC721A.sol\":16786:16847  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n  tag_84\n    /* \"erc721a/contracts/ERC721A.sol\":16816:16817  0 */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":16820:16822  to */\n  dup5\n    /* \"erc721a/contracts/ERC721A.sol\":16824:16836  startTokenId */\n  dup4\n    /* \"erc721a/contracts/ERC721A.sol\":16838:16846  quantity */\n  dup6\n    /* \"erc721a/contracts/ERC721A.sol\":16786:16807  _beforeTokenTransfers */\n  tag_85\n    /* \"erc721a/contracts/ERC721A.sol\":16786:16847  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n  jump\t// in\ntag_84:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"erc721a/contracts/ERC721A.sol\":17250:17272  _packedAddressData[to] */\n  dup4\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"erc721a/contracts/ERC721A.sol\":17250:17268  _packedAddressData */\n  0x05\n    /* \"erc721a/contracts/ERC721A.sol\":17250:17272  _packedAddressData[to] */\n  0x20\n  mstore\n    /* \"erc721a/contracts/ERC721A.sol\":1156:1158  64 */\n  0x40\n    /* \"erc721a/contracts/ERC721A.sol\":17250:17272  _packedAddressData[to] */\n  swap1\n  keccak256\n    /* \"erc721a/contracts/ERC721A.sol\":17250:17320  _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1) */\n  dup1\n  sload\n    /* \"erc721a/contracts/ERC721A.sol\":17288:17319  (1 << BITPOS_NUMBER_MINTED) | 1 */\n  0x010000000000000001\n    /* \"erc721a/contracts/ERC721A.sol\":17276:17320  quantity * ((1 << BITPOS_NUMBER_MINTED) | 1) */\n  dup6\n  mul\n    /* \"erc721a/contracts/ERC721A.sol\":17250:17320  _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1) */\n  add\n  swap1\n  sstore\n    /* \"erc721a/contracts/ERC721A.sol\":10863:10874  timestamp() */\n  timestamp\n    /* \"erc721a/contracts/ERC721A.sol\":10839:10861  BITPOS_START_TIMESTAMP */\n  0xa0\n    /* \"erc721a/contracts/ERC721A.sol\":10835:10875  shl(BITPOS_START_TIMESTAMP, timestamp()) */\n  shl\n  0x01\n    /* \"erc721a/contracts/ERC721A.sol\":12522:12537  eq(quantity, 1) */\n  dup5\n  eq\n    /* \"erc721a/contracts/ERC721A.sol\":12497:12520  BITPOS_NEXT_INITIALIZED */\n  0xe1\n    /* \"erc721a/contracts/ERC721A.sol\":12493:12538  shl(BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n  shl\n    /* \"erc721a/contracts/ERC721A.sol\":10832:10883  or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags) */\n  or\n    /* \"erc721a/contracts/ERC721A.sol\":10822:10884  or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n  or\n    /* \"erc721a/contracts/ERC721A.sol\":17556:17587  _packedOwnerships[startTokenId] */\n  0x00\n  dup3\n  dup2\n  mstore\n    /* \"erc721a/contracts/ERC721A.sol\":17556:17573  _packedOwnerships */\n  0x04\n    /* \"erc721a/contracts/ERC721A.sol\":17556:17587  _packedOwnerships[startTokenId] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"erc721a/contracts/ERC721A.sol\":17556:17726  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n  sstore\n    /* \"erc721a/contracts/ERC721A.sol\":17574:17586  startTokenId */\n  dup1\n    /* \"erc721a/contracts/ERC721A.sol\":17799:17822  startTokenId + quantity */\n  dup3\n  dup2\n  add\n    /* \"erc721a/contracts/ERC721A.sol\":17836:17935  do {... */\ntag_92:\n    /* \"erc721a/contracts/ERC721A.sol\":17862:17897  Transfer(address(0), to, tokenId++) */\n  mload(0x40)\n    /* \"erc721a/contracts/ERC721A.sol\":17887:17896  tokenId++ */\n  0x01\n  dup4\n  add\n  swap3\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"erc721a/contracts/ERC721A.sol\":17862:17897  Transfer(address(0), to, tokenId++) */\n  dup8\n  and\n  swap1\n    /* \"erc721a/contracts/ERC721A.sol\":17879:17880  0 */\n  0x00\n  swap1\n    /* \"erc721a/contracts/ERC721A.sol\":17862:17897  Transfer(address(0), to, tokenId++) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"erc721a/contracts/ERC721A.sol\":17879:17880  0 */\n  dup3\n  swap1\n    /* \"erc721a/contracts/ERC721A.sol\":17862:17897  Transfer(address(0), to, tokenId++) */\n  log4\n    /* \"erc721a/contracts/ERC721A.sol\":17930:17933  end */\n  dup1\n    /* \"erc721a/contracts/ERC721A.sol\":17920:17927  tokenId */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":17920:17933  tokenId < end */\n  lt\n    /* \"erc721a/contracts/ERC721A.sol\":17836:17935  do {... */\n  tag_92\n  jumpi\n    /* \"erc721a/contracts/ERC721A.sol\":17949:17962  _currentIndex */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":17949:17968  _currentIndex = end */\n  sstore\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":15641:16302  function _safeMint(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\ntag_78:\n    /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n  mload(0x40)\n  shl(0xe1, 0x0a85bd01)\n  dup2\n  mstore\n    /* \"erc721a/contracts/ERC721A.sol\":28807:28811  bool */\n  0x00\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"erc721a/contracts/ERC721A.sol\":28827:28872  ERC721A__IERC721Receiver(to).onERC721Received */\n  dup6\n  and\n  swap1\n  0x150b7a02\n  swap1\n    /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n  tag_100\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"erc721a/contracts/ERC721A.sol\":28894:28898  from */\n  dup10\n  swap1\n    /* \"erc721a/contracts/ERC721A.sol\":28900:28907  tokenId */\n  dup9\n  swap1\n    /* \"erc721a/contracts/ERC721A.sol\":28909:28914  _data */\n  dup9\n  swap1\n    /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n  0x04\n  add\n  tag_101\n  jump\t// in\ntag_100:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_102\n  jumpi\n  pop\n  0x40\n  dup1\n  mload\n  0x1f\n  returndatasize\n  swap1\n  dup2\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  swap1\n  swap3\n  mstore\n  tag_103\n  swap2\n  dup2\n  add\n  swap1\n  tag_104\n  jump\t// in\ntag_103:\n  0x01\ntag_102:\n    /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n  tag_105\n  jumpi\n  returndatasize\n  dup1\n  dup1\n  iszero\n  tag_110\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_109)\ntag_110:\n  0x60\n  swap2\n  pop\ntag_109:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":29105:29111  reason */\n  dup1\n    /* \"erc721a/contracts/ERC721A.sol\":29105:29118  reason.length */\n  mload\n    /* \"erc721a/contracts/ERC721A.sol\":29122:29123  0 */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":29105:29123  reason.length == 0 */\n  sub\n    /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n  tag_111\n  jumpi\n    /* \"erc721a/contracts/ERC721A.sol\":29150:29190  TransferToNonERC721ReceiverImplementer() */\n  mload(0x40)\n  shl(0xe1, 0x68d2bf6b)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\ntag_111:\n    /* \"erc721a/contracts/ERC721A.sol\":29290:29296  reason */\n  dup1\n    /* \"erc721a/contracts/ERC721A.sol\":29284:29297  mload(reason) */\n  mload\n    /* \"erc721a/contracts/ERC721A.sol\":29275:29281  reason */\n  dup2\n    /* \"erc721a/contracts/ERC721A.sol\":29271:29273  32 */\n  0x20\n    /* \"erc721a/contracts/ERC721A.sol\":29267:29282  add(32, reason) */\n  add\n    /* \"erc721a/contracts/ERC721A.sol\":29260:29298  revert(add(32, reason), mload(reason)) */\n  revert\n    /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\ntag_105:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"erc721a/contracts/ERC721A.sol\":28983:29047  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n  and\n  shl(0xe1, 0x0a85bd01)\n  eq\n  swap1\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"ERC721A/NagaKidsERC721A.sol\":2360:2597  function _beforeTokenTransfers(... */\ntag_85:\n    /* \"ERC721A/NagaKidsERC721A.sol\":2529:2589  super._beforeTokenTransfers(from, to, startTokenId,quantity) */\n  tag_61\n    /* \"ERC721A/NagaKidsERC721A.sol\":2557:2561  from */\n  dup5\n    /* \"ERC721A/NagaKidsERC721A.sol\":2563:2565  to */\n  dup5\n    /* \"ERC721A/NagaKidsERC721A.sol\":2567:2579  startTokenId */\n  dup5\n    /* \"ERC721A/NagaKidsERC721A.sol\":2580:2588  quantity */\n  dup5\n    /* \"ERC721A/NagaKidsERC721A.sol\":2529:2556  super._beforeTokenTransfers */\n  or(tag_0_226, shl(0x20, tag_61))\n    /* \"ERC721A/NagaKidsERC721A.sol\":2529:2589  super._beforeTokenTransfers(from, to, startTokenId,quantity) */\n  0x20\n  shr\n  jump\t// in\n    /* \"#utility.yul\":14:141   */\ntag_126:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_127:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_136:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_137\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_137:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_129:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_141\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_141:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_142:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_142)\ntag_144:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_2:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_148\n  tag_126\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":1582:1679   */\n  tag_149\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_150\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_127\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_129\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_152\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_153\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_153:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_144)\n    /* \"#utility.yul\":1810:2473   */\ntag_152:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_156:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_156)\ntag_158:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_159:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:2993   */\ntag_131:\n    /* \"#utility.yul\":2807:2808   */\n  0x00\n    /* \"#utility.yul\":2817:2930   */\ntag_161:\n    /* \"#utility.yul\":2831:2837   */\n  dup4\n    /* \"#utility.yul\":2828:2829   */\n  dup2\n    /* \"#utility.yul\":2825:2838   */\n  lt\n    /* \"#utility.yul\":2817:2930   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":2907:2918   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":2901:2919   */\n  mload\n    /* \"#utility.yul\":2888:2899   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":2881:2920   */\n  mstore\n    /* \"#utility.yul\":2853:2855   */\n  0x20\n    /* \"#utility.yul\":2846:2856   */\n  add\n    /* \"#utility.yul\":2817:2930   */\n  jump(tag_161)\ntag_163:\n    /* \"#utility.yul\":2948:2954   */\n  dup4\n    /* \"#utility.yul\":2945:2946   */\n  dup2\n    /* \"#utility.yul\":2942:2955   */\n  gt\n    /* \"#utility.yul\":2939:2987   */\n  iszero\n  tag_61\n  jumpi\n  pop\n  pop\n    /* \"#utility.yul\":2983:2984   */\n  0x00\n    /* \"#utility.yul\":2965:2981   */\n  swap2\n  add\n    /* \"#utility.yul\":2958:2985   */\n  mstore\n    /* \"#utility.yul\":2735:2993   */\n  jump\t// out\n    /* \"#utility.yul\":2998:3175   */\ntag_132:\n    /* \"#utility.yul\":3077:3090   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3119:3150   */\n  dup2\n  and\n    /* \"#utility.yul\":3109:3151   */\n  dup2\n  eq\n    /* \"#utility.yul\":3099:3169   */\n  tag_166\n  jumpi\n    /* \"#utility.yul\":3165:3166   */\n  0x00\n    /* \"#utility.yul\":3162:3163   */\n  dup1\n    /* \"#utility.yul\":3155:3167   */\n  revert\n    /* \"#utility.yul\":3099:3169   */\ntag_166:\n    /* \"#utility.yul\":2998:3175   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3180:4157   */\ntag_5:\n    /* \"#utility.yul\":3269:3275   */\n  0x00\n    /* \"#utility.yul\":3277:3283   */\n  dup1\n    /* \"#utility.yul\":3330:3332   */\n  0x40\n    /* \"#utility.yul\":3318:3327   */\n  dup4\n    /* \"#utility.yul\":3309:3316   */\n  dup6\n    /* \"#utility.yul\":3305:3328   */\n  sub\n    /* \"#utility.yul\":3301:3333   */\n  slt\n    /* \"#utility.yul\":3298:3350   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":3346:3347   */\n  0x00\n    /* \"#utility.yul\":3343:3344   */\n  dup1\n    /* \"#utility.yul\":3336:3348   */\n  revert\n    /* \"#utility.yul\":3298:3350   */\ntag_168:\n    /* \"#utility.yul\":3373:3389   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3438:3452   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3435:3469   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":3465:3466   */\n  0x00\n    /* \"#utility.yul\":3462:3463   */\n  dup1\n    /* \"#utility.yul\":3455:3467   */\n  revert\n    /* \"#utility.yul\":3435:3469   */\ntag_169:\n    /* \"#utility.yul\":3503:3509   */\n  dup2\n    /* \"#utility.yul\":3492:3501   */\n  dup6\n    /* \"#utility.yul\":3488:3510   */\n  add\n    /* \"#utility.yul\":3478:3510   */\n  swap2\n  pop\n    /* \"#utility.yul\":3548:3555   */\n  dup6\n    /* \"#utility.yul\":3541:3545   */\n  0x1f\n    /* \"#utility.yul\":3537:3539   */\n  dup4\n    /* \"#utility.yul\":3533:3546   */\n  add\n    /* \"#utility.yul\":3529:3556   */\n  slt\n    /* \"#utility.yul\":3519:3574   */\n  tag_170\n  jumpi\n    /* \"#utility.yul\":3570:3571   */\n  0x00\n    /* \"#utility.yul\":3567:3568   */\n  dup1\n    /* \"#utility.yul\":3560:3572   */\n  revert\n    /* \"#utility.yul\":3519:3574   */\ntag_170:\n    /* \"#utility.yul\":3599:3601   */\n  dup2\n    /* \"#utility.yul\":3593:3602   */\n  mload\n    /* \"#utility.yul\":3621:3623   */\n  dup2\n    /* \"#utility.yul\":3617:3619   */\n  dup2\n    /* \"#utility.yul\":3614:3624   */\n  gt\n    /* \"#utility.yul\":3611:3647   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":3627:3645   */\n  tag_172\n  tag_126\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":3702:3704   */\n  0x40\n    /* \"#utility.yul\":3696:3705   */\n  mload\n    /* \"#utility.yul\":3670:3672   */\n  0x1f\n    /* \"#utility.yul\":3756:3769   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":3752:3774   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":3776:3778   */\n  0x3f\n    /* \"#utility.yul\":3748:3779   */\n  add\n    /* \"#utility.yul\":3744:3784   */\n  and\n    /* \"#utility.yul\":3732:3785   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":3800:3818   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":3820:3842   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":3797:3843   */\n  or\n    /* \"#utility.yul\":3794:3866   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":3846:3864   */\n  tag_174\n  tag_126\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":3886:3896   */\n  dup2\n    /* \"#utility.yul\":3882:3884   */\n  0x40\n    /* \"#utility.yul\":3875:3897   */\n  mstore\n    /* \"#utility.yul\":3921:3923   */\n  dup3\n    /* \"#utility.yul\":3913:3919   */\n  dup2\n    /* \"#utility.yul\":3906:3924   */\n  mstore\n    /* \"#utility.yul\":3963:3970   */\n  dup9\n    /* \"#utility.yul\":3956:3960   */\n  0x20\n    /* \"#utility.yul\":3951:3953   */\n  dup5\n    /* \"#utility.yul\":3947:3949   */\n  dup8\n    /* \"#utility.yul\":3943:3954   */\n  add\n    /* \"#utility.yul\":3939:3961   */\n  add\n    /* \"#utility.yul\":3936:3971   */\n  gt\n    /* \"#utility.yul\":3933:3988   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":3984:3985   */\n  0x00\n    /* \"#utility.yul\":3981:3982   */\n  dup1\n    /* \"#utility.yul\":3974:3986   */\n  revert\n    /* \"#utility.yul\":3933:3988   */\ntag_175:\n    /* \"#utility.yul\":3997:4056   */\n  tag_176\n    /* \"#utility.yul\":4053:4055   */\n  dup4\n    /* \"#utility.yul\":4046:4050   */\n  0x20\n    /* \"#utility.yul\":4038:4044   */\n  dup4\n    /* \"#utility.yul\":4034:4051   */\n  add\n    /* \"#utility.yul\":4027:4031   */\n  0x20\n    /* \"#utility.yul\":4023:4025   */\n  dup9\n    /* \"#utility.yul\":4019:4032   */\n  add\n    /* \"#utility.yul\":3997:4056   */\n  tag_131\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":4075:4081   */\n  dup1\n    /* \"#utility.yul\":4065:4081   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4100:4151   */\n  tag_177\n    /* \"#utility.yul\":4145:4149   */\n  0x20\n    /* \"#utility.yul\":4134:4143   */\n  dup5\n    /* \"#utility.yul\":4130:4150   */\n  add\n    /* \"#utility.yul\":4100:4151   */\n  tag_132\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":4090:4151   */\n  swap1\n  pop\n    /* \"#utility.yul\":3180:4157   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5064:5289   */\ntag_57:\n    /* \"#utility.yul\":5104:5107   */\n  0x00\n    /* \"#utility.yul\":5135:5136   */\n  dup3\n    /* \"#utility.yul\":5131:5137   */\n  not\n    /* \"#utility.yul\":5128:5129   */\n  dup3\n    /* \"#utility.yul\":5125:5138   */\n  gt\n    /* \"#utility.yul\":5122:5258   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":5180:5190   */\n  0x4e487b71\n    /* \"#utility.yul\":5175:5178   */\n  0xe0\n    /* \"#utility.yul\":5171:5191   */\n  shl\n    /* \"#utility.yul\":5168:5169   */\n  0x00\n    /* \"#utility.yul\":5161:5192   */\n  mstore\n    /* \"#utility.yul\":5215:5219   */\n  0x11\n    /* \"#utility.yul\":5212:5213   */\n  0x04\n    /* \"#utility.yul\":5205:5220   */\n  mstore\n    /* \"#utility.yul\":5243:5247   */\n  0x24\n    /* \"#utility.yul\":5240:5241   */\n  0x00\n    /* \"#utility.yul\":5233:5248   */\n  revert\n    /* \"#utility.yul\":5122:5258   */\ntag_182:\n  pop\n    /* \"#utility.yul\":5274:5283   */\n  add\n  swap1\n    /* \"#utility.yul\":5064:5289   */\n  jump\t// out\n    /* \"#utility.yul\":5638:6292   */\ntag_101:\n    /* \"#utility.yul\":5832:5836   */\n  0x00\n    /* \"#utility.yul\":5878:5879   */\n  0x01\n    /* \"#utility.yul\":5874:5875   */\n  dup1\n    /* \"#utility.yul\":5869:5872   */\n  0xa0\n    /* \"#utility.yul\":5865:5876   */\n  shl\n    /* \"#utility.yul\":5861:5880   */\n  sub\n    /* \"#utility.yul\":5919:5921   */\n  dup1\n    /* \"#utility.yul\":5911:5917   */\n  dup8\n    /* \"#utility.yul\":5907:5922   */\n  and\n    /* \"#utility.yul\":5896:5905   */\n  dup4\n    /* \"#utility.yul\":5889:5923   */\n  mstore\n    /* \"#utility.yul\":5971:5973   */\n  dup1\n    /* \"#utility.yul\":5963:5969   */\n  dup7\n    /* \"#utility.yul\":5959:5974   */\n  and\n    /* \"#utility.yul\":5954:5956   */\n  0x20\n    /* \"#utility.yul\":5943:5952   */\n  dup5\n    /* \"#utility.yul\":5939:5957   */\n  add\n    /* \"#utility.yul\":5932:5975   */\n  mstore\n  pop\n    /* \"#utility.yul\":6011:6017   */\n  dup4\n    /* \"#utility.yul\":6006:6008   */\n  0x40\n    /* \"#utility.yul\":5995:6004   */\n  dup4\n    /* \"#utility.yul\":5991:6009   */\n  add\n    /* \"#utility.yul\":5984:6018   */\n  mstore\n    /* \"#utility.yul\":6054:6057   */\n  0x80\n    /* \"#utility.yul\":6049:6051   */\n  0x60\n    /* \"#utility.yul\":6038:6047   */\n  dup4\n    /* \"#utility.yul\":6034:6052   */\n  add\n    /* \"#utility.yul\":6027:6058   */\n  mstore\n    /* \"#utility.yul\":6087:6093   */\n  dup3\n    /* \"#utility.yul\":6081:6094   */\n  mload\n    /* \"#utility.yul\":6131:6137   */\n  dup1\n    /* \"#utility.yul\":6125:6128   */\n  0x80\n    /* \"#utility.yul\":6114:6123   */\n  dup5\n    /* \"#utility.yul\":6110:6129   */\n  add\n    /* \"#utility.yul\":6103:6138   */\n  mstore\n    /* \"#utility.yul\":6147:6214   */\n  tag_185\n    /* \"#utility.yul\":6207:6213   */\n  dup2\n    /* \"#utility.yul\":6201:6204   */\n  0xa0\n    /* \"#utility.yul\":6190:6199   */\n  dup6\n    /* \"#utility.yul\":6186:6205   */\n  add\n    /* \"#utility.yul\":6181:6183   */\n  0x20\n    /* \"#utility.yul\":6173:6179   */\n  dup8\n    /* \"#utility.yul\":6169:6184   */\n  add\n    /* \"#utility.yul\":6147:6214   */\n  tag_131\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":6275:6277   */\n  0x1f\n    /* \"#utility.yul\":6254:6269   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":6250:6279   */\n  and\n    /* \"#utility.yul\":6235:6280   */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":6282:6285   */\n  0xa0\n    /* \"#utility.yul\":6231:6286   */\n  add\n  swap6\n    /* \"#utility.yul\":5638:6292   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6297:6587   */\ntag_104:\n    /* \"#utility.yul\":6366:6372   */\n  0x00\n    /* \"#utility.yul\":6419:6421   */\n  0x20\n    /* \"#utility.yul\":6407:6416   */\n  dup3\n    /* \"#utility.yul\":6398:6405   */\n  dup5\n    /* \"#utility.yul\":6394:6417   */\n  sub\n    /* \"#utility.yul\":6390:6422   */\n  slt\n    /* \"#utility.yul\":6387:6439   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":6435:6436   */\n  0x00\n    /* \"#utility.yul\":6432:6433   */\n  dup1\n    /* \"#utility.yul\":6425:6437   */\n  revert\n    /* \"#utility.yul\":6387:6439   */\ntag_187:\n    /* \"#utility.yul\":6461:6477   */\n  dup2\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"#utility.yul\":6506:6538   */\n  dup2\n  and\n    /* \"#utility.yul\":6496:6539   */\n  dup2\n  eq\n    /* \"#utility.yul\":6486:6557   */\n  tag_188\n  jumpi\n    /* \"#utility.yul\":6553:6554   */\n  0x00\n    /* \"#utility.yul\":6550:6551   */\n  dup1\n    /* \"#utility.yul\":6543:6555   */\n  revert\n    /* \"#utility.yul\":6486:6557   */\ntag_188:\n    /* \"#utility.yul\":6576:6581   */\n  swap4\n    /* \"#utility.yul\":6297:6587   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_133:\n    /* \"ERC721A/NagaKidsERC721A.sol\":332:2991  contract NagaKids is ERC721A, ERC721ABurnable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\nsub_0: assembly {\n        /* \"ERC721A/NagaKidsERC721A.sol\":332:2991  contract NagaKids is ERC721A, ERC721ABurnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc6682862\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa1448194\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xaa271e1a\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x3c713026\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x3c713026\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x55f804b3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC721A/NagaKidsERC721A.sol\":2673:2877  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"ERC721A/NagaKidsERC721A.sol\":2673:2877  function supportsInterface(bytes4 interfaceId)... */\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1692:1724   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1674:1725   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1647:1665   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      tag_34\n        /* \"#utility.yul\":1528:1731   */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n        /* \"ERC721A/NagaKidsERC721A.sol\":2977:2978  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":4998:5010  _burnCounter */\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":4789:4796  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":4982:4995  _currentIndex */\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5010  _currentIndex - _burnCounter */\n      sub\n      not(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5028  _currentIndex - _burnCounter - _startTokenId() */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":2319:2344   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2307:2309   */\n      0x20\n        /* \"#utility.yul\":2292:2310   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n      tag_34\n        /* \"#utility.yul\":2173:2350   */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_8:\n      tag_46\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"ERC721A/NagaKidsERC721A.sol\":1154:1333  function setAllowMinter(address minter, bool allowed) public onlyOwner {... */\n    tag_9:\n      tag_46\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_10:\n      tag_46\n      tag_63\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n        /* \"erc721a/contracts/extensions/ERC721ABurnable.sol\":513:605  function burn(uint256 tokenId) public virtual override {... */\n    tag_11:\n      tag_46\n      tag_66\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"ERC721A/NagaKidsERC721A.sol\":1449:1551  function setBaseURI(string memory newBaseURI) public onlyOwner {... */\n    tag_12:\n      tag_46\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_13:\n      tag_40\n      tag_73\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_14:\n      tag_50\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_46\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_40)\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_36\n      tag_87\n      jump\t// in\n        /* \"ERC721A/NagaKidsERC721A.sol\":2012:2238  function safeMint(address to,uint amount) public Minter(msg.sender) {... */\n    tag_18:\n      tag_46\n      tag_90\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_19:\n      tag_46\n      tag_93\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"ERC721A/NagaKidsERC721A.sol\":2246:2352  function isMinter(address minter) public view returns(bool) {... */\n    tag_20:\n      tag_30\n      tag_96\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/NagaKidsERC721A.sol\":2324:2344  _allowMinter[minter] */\n      and\n        /* \"ERC721A/NagaKidsERC721A.sol\":2300:2304  bool */\n      0x00\n        /* \"ERC721A/NagaKidsERC721A.sol\":2324:2344  _allowMinter[minter] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC721A/NagaKidsERC721A.sol\":2324:2336  _allowMinter */\n      0x09\n        /* \"ERC721A/NagaKidsERC721A.sol\":2324:2344  _allowMinter[minter] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"ERC721A/NagaKidsERC721A.sol\":2246:2352  function isMinter(address minter) public view returns(bool) {... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_21:\n      tag_46\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n        /* \"ERC721A/NagaKidsERC721A.sol\":507:544  string public baseExtension = \".json\" */\n    tag_22:\n      tag_36\n      tag_104\n      jump\t// in\n        /* \"ERC721A/NagaKidsERC721A.sol\":1559:2003  function tokenURI(uint256 tokenId) public view virtual override(ERC721A,IERC721A) returns (string memory){... */\n    tag_23:\n      tag_36\n      tag_107\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"ERC721A/NagaKidsERC721A.sol\":551:591  uint256 public constant maxSupply = 1111 */\n    tag_24:\n      tag_50\n        /* \"ERC721A/NagaKidsERC721A.sol\":587:591  1111 */\n      0x0457\n        /* \"ERC721A/NagaKidsERC721A.sol\":551:591  uint256 public constant maxSupply = 1111 */\n      dup2\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_25:\n      tag_30\n      tag_114\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13781:13785  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13822  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13839  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_46\n      tag_119\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"ERC721A/NagaKidsERC721A.sol\":2673:2877  function supportsInterface(bytes4 interfaceId)... */\n    tag_33:\n        /* \"ERC721A/NagaKidsERC721A.sol\":2804:2808  bool */\n      0x00\n        /* \"ERC721A/NagaKidsERC721A.sol\":2833:2869  super.supportsInterface(interfaceId) */\n      tag_123\n        /* \"ERC721A/NagaKidsERC721A.sol\":2857:2868  interfaceId */\n      dup3\n        /* \"ERC721A/NagaKidsERC721A.sol\":2833:2856  super.supportsInterface */\n      tag_124\n        /* \"ERC721A/NagaKidsERC721A.sol\":2833:2869  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_123:\n        /* \"ERC721A/NagaKidsERC721A.sol\":2826:2869  return super.supportsInterface(interfaceId) */\n      swap3\n        /* \"ERC721A/NagaKidsERC721A.sol\":2673:2877  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_37:\n        /* \"erc721a/contracts/ERC721A.sol\":11215:11228  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11247:11252  _name */\n      0x02\n        /* \"erc721a/contracts/ERC721A.sol\":11240:11252  return _name */\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_127\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_43:\n        /* \"erc721a/contracts/ERC721A.sol\":13116:13123  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      tag_133\n        /* \"erc721a/contracts/ERC721A.sol\":13148:13155  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13147  _exists */\n      tag_134\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      jump\t// in\n    tag_133:\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_135\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13165:13199  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_135:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13232  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_49:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12696  address owner */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      tag_137\n        /* \"erc721a/contracts/ERC721A.sol\":12707:12714  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12706  ownerOf */\n      tag_74\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12715  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12758  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":12726:12898  if (_msgSenderERC721A() != owner)... */\n      tag_143\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_141\n        /* \"erc721a/contracts/ERC721A.sol\":12794:12799  owner */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_114\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_141:\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_143\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12848:12883  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_143:\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12923  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12937  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":12673:12987  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_57:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22211  uint256 prevOwnershipPacked */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      tag_148\n        /* \"erc721a/contracts/ERC721A.sol\":22233:22240  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22232  _packedOwnershipOf */\n      tag_149\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_148:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22241  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22297:22301  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22272:22291  prevOwnershipPacked */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_150\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22310:22338  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_150:\n        /* \"erc721a/contracts/ERC721A.sol\":22350:22377  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20821:20842  mstore(0x00, tokenId) */\n      dup3\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20652:20667  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":20862:20866  0x20 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":20855:20891  mstore(0x20, tokenApprovalsPtr.slot) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20943:20947  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":20927:20948  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":21031:21057  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":22531:22593  _isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()) */\n      tag_153\n        /* \"erc721a/contracts/ERC721A.sol\":21031:21057  sload(approvedAddressSlot) */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":22567:22571  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":22573:22592  _msgSenderERC721A() */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":21620:21651  and(msgSender, BITMASK_ADDRESS) */\n      swap1\n      dup2\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21468:21494  and(from, BITMASK_ADDRESS) */\n      swap2\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21745:21764  eq(msgSender, from) */\n      dup2\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":21766:21796  eq(msgSender, approvedAddress) */\n      swap2\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":21742:21797  or(eq(msgSender, from), eq(msgSender, approvedAddress)) */\n      or\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":21181:21813  function _isOwnerOrApproved(... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":22531:22593  _isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()) */\n    tag_153:\n        /* \"erc721a/contracts/ERC721A.sol\":22526:22699  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_159\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_157\n        /* \"erc721a/contracts/ERC721A.sol\":22629:22633  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_114\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_157:\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_159\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22664:22699  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22730  to == address(0) */\n      dup6\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_160\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22739:22762  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_160:\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22816  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_161\n        /* \"erc721a/contracts/ERC721A.sol\":22795:22799  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22801:22803  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22805:22812  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22814:22815  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22794  _beforeTokenTransfers */\n      tag_162\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22816  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_161:\n        /* \"erc721a/contracts/ERC721A.sol\":22905:22920  approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n      iszero\n      tag_163\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":23043:23044  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23022:23041  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":23015:23045  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23447  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23427:23453  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23519  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23495:23519  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":10863:10874  timestamp() */\n      timestamp\n        /* \"erc721a/contracts/ERC721A.sol\":10839:10861  BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":10835:10875  shl(BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":10822:10884  or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23800  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23954  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24117  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24122  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_168\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24174:24175  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":24164:24175  tokenId + 1 */\n      dup5\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":24142:24161  uint256 nextTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24312  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24330  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":24291:24669  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_170\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24431:24444  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24427  nextTokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24444  nextTokenId != _currentIndex */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n      tag_170\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24593  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24628  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n    tag_170:\n        /* \"erc721a/contracts/ERC721A.sol\":24124:24683  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_168:\n        /* \"erc721a/contracts/ERC721A.sol\":24727:24734  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24723:24725  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24717:24721  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":24745:24787  _afterTokenTransfers(from, to, tokenId, 1) */\n    tag_171:\n        /* \"erc721a/contracts/ERC721A.sol\":22174:24794  {... */\n      pop\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A/NagaKidsERC721A.sol\":1154:1333  function setAllowMinter(address minter, bool allowed) public onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/NagaKidsERC721A.sol\":1236:1256  _allowMinter[minter] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC721A/NagaKidsERC721A.sol\":1236:1248  _allowMinter */\n      0x09\n        /* \"ERC721A/NagaKidsERC721A.sol\":1236:1256  _allowMinter[minter] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC721A/NagaKidsERC721A.sol\":1236:1266  _allowMinter[minter] = allowed */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup6\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC721A/NagaKidsERC721A.sol\":1282:1325  SetAllowMinter(msg.sender, minter, allowed) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"ERC721A/NagaKidsERC721A.sol\":1297:1307  msg.sender */\n      caller\n      swap2\n        /* \"ERC721A/NagaKidsERC721A.sol\":1282:1325  SetAllowMinter(msg.sender, minter, allowed) */\n      0x3c49a0d2dcd603245c20eb1985825d770748295cd570de6d24861080451bbd41\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"ERC721A/NagaKidsERC721A.sol\":1282:1325  SetAllowMinter(msg.sender, minter, allowed) */\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC721A/NagaKidsERC721A.sol\":1154:1333  function setAllowMinter(address minter, bool allowed) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_64:\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      tag_183\n        /* \"erc721a/contracts/ERC721A.sol\":14062:14066  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14068:14070  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14072:14079  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14061  safeTransferFrom */\n      tag_102\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_183:\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/extensions/ERC721ABurnable.sol\":513:605  function burn(uint256 tokenId) public virtual override {... */\n    tag_67:\n        /* \"erc721a/contracts/extensions/ERC721ABurnable.sol\":578:598  _burn(tokenId, true) */\n      tag_185\n        /* \"erc721a/contracts/extensions/ERC721ABurnable.sol\":584:591  tokenId */\n      dup2\n        /* \"erc721a/contracts/extensions/ERC721ABurnable.sol\":593:597  true */\n      0x01\n        /* \"erc721a/contracts/extensions/ERC721ABurnable.sol\":578:583  _burn */\n      tag_186\n        /* \"erc721a/contracts/extensions/ERC721ABurnable.sol\":578:598  _burn(tokenId, true) */\n      jump\t// in\n    tag_185:\n        /* \"erc721a/contracts/extensions/ERC721ABurnable.sol\":513:605  function burn(uint256 tokenId) public virtual override {... */\n      pop\n      jump\t// out\n        /* \"ERC721A/NagaKidsERC721A.sol\":1449:1551  function setBaseURI(string memory newBaseURI) public onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_190:\n        /* \"ERC721A/NagaKidsERC721A.sol\":1523:1530  baseURI */\n      0x0a\n        /* \"ERC721A/NagaKidsERC721A.sol\":1523:1543  baseURI = newBaseURI */\n      tag_193\n        /* \"ERC721A/NagaKidsERC721A.sol\":1533:1543  newBaseURI */\n      dup3\n        /* \"ERC721A/NagaKidsERC721A.sol\":1523:1530  baseURI */\n      dup3\n        /* \"ERC721A/NagaKidsERC721A.sol\":1523:1543  baseURI = newBaseURI */\n      tag_194\n      jump\t// in\n    tag_193:\n      pop\n        /* \"ERC721A/NagaKidsERC721A.sol\":1449:1551  function setBaseURI(string memory newBaseURI) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_74:\n        /* \"erc721a/contracts/ERC721A.sol\":11021:11028  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      tag_123\n        /* \"erc721a/contracts/ERC721A.sol\":11082:11089  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11081  _packedOwnershipOf */\n      tag_149\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_79:\n        /* \"erc721a/contracts/ERC721A.sol\":6383:6390  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6425  owner == address(0) */\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_198\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":6434:6462  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_198:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6497  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":1022:1035  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6533  _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_87:\n        /* \"erc721a/contracts/ERC721A.sol\":11379:11392  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11411:11418  _symbol */\n      0x03\n        /* \"erc721a/contracts/ERC721A.sol\":11404:11418  return _symbol */\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n        /* \"ERC721A/NagaKidsERC721A.sol\":2012:2238  function safeMint(address to,uint amount) public Minter(msg.sender) {... */\n    tag_91:\n        /* \"ERC721A/NagaKidsERC721A.sol\":2068:2078  msg.sender */\n      caller\n        /* \"ERC721A/NagaKidsERC721A.sol\":2300:2304  bool */\n      0x00\n        /* \"ERC721A/NagaKidsERC721A.sol\":2324:2344  _allowMinter[minter] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC721A/NagaKidsERC721A.sol\":2324:2336  _allowMinter */\n      0x09\n        /* \"ERC721A/NagaKidsERC721A.sol\":2324:2344  _allowMinter[minter] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ERC721A/NagaKidsERC721A.sol\":735:784  require(isMinter(_minter),\"You are not a minter\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8545:8547   */\n      0x20\n        /* \"ERC721A/NagaKidsERC721A.sol\":735:784  require(isMinter(_minter),\"You are not a minter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8527:8548   */\n      mstore\n        /* \"#utility.yul\":8584:8586   */\n      0x14\n        /* \"#utility.yul\":8564:8582   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8557:8587   */\n      mstore\n      shl(0x61, 0x2cb7ba9030b932903737ba10309036b4b73a32b9)\n        /* \"#utility.yul\":8603:8621   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8596:8646   */\n      mstore\n        /* \"#utility.yul\":8663:8681   */\n      0x64\n      add\n        /* \"ERC721A/NagaKidsERC721A.sol\":735:784  require(isMinter(_minter),\"You are not a minter\") */\n      tag_178\n        /* \"#utility.yul\":8343:8687   */\n      jump\n        /* \"ERC721A/NagaKidsERC721A.sol\":735:784  require(isMinter(_minter),\"You are not a minter\") */\n    tag_216:\n        /* \"ERC721A/NagaKidsERC721A.sol\":2091:2110  uint256 totalSupply */\n      0x00\n        /* \"ERC721A/NagaKidsERC721A.sol\":2113:2126  totalSupply() */\n      tag_220\n        /* \"ERC721A/NagaKidsERC721A.sol\":2977:2978  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":4998:5010  _burnCounter */\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":4789:4796  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":4982:4995  _currentIndex */\n      sload\n      not(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5010  _currentIndex - _burnCounter */\n      swap2\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5028  _currentIndex - _burnCounter - _startTokenId() */\n      add\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n      jump\n        /* \"ERC721A/NagaKidsERC721A.sol\":2113:2126  totalSupply() */\n    tag_220:\n        /* \"ERC721A/NagaKidsERC721A.sol\":2091:2126  uint256 totalSupply = totalSupply() */\n      swap1\n      pop\n        /* \"ERC721A/NagaKidsERC721A.sol\":587:591  1111 */\n      0x0457\n        /* \"ERC721A/NagaKidsERC721A.sol\":2145:2165  totalSupply + amount */\n      tag_221\n        /* \"ERC721A/NagaKidsERC721A.sol\":2159:2165  amount */\n      dup5\n        /* \"ERC721A/NagaKidsERC721A.sol\":2091:2126  uint256 totalSupply = totalSupply() */\n      dup4\n        /* \"ERC721A/NagaKidsERC721A.sol\":2145:2165  totalSupply + amount */\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"ERC721A/NagaKidsERC721A.sol\":2145:2178  totalSupply + amount <= maxSupply */\n      gt\n      iszero\n        /* \"ERC721A/NagaKidsERC721A.sol\":2137:2198  require(totalSupply + amount <= maxSupply, \"Over max supply\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9159:9161   */\n      0x20\n        /* \"ERC721A/NagaKidsERC721A.sol\":2137:2198  require(totalSupply + amount <= maxSupply, \"Over max supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9141:9162   */\n      mstore\n        /* \"#utility.yul\":9198:9200   */\n      0x0f\n        /* \"#utility.yul\":9178:9196   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9171:9201   */\n      mstore\n      shl(0x88, 0x4f766572206d617820737570706c79)\n        /* \"#utility.yul\":9217:9235   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9210:9255   */\n      mstore\n        /* \"#utility.yul\":9272:9290   */\n      0x64\n      add\n        /* \"ERC721A/NagaKidsERC721A.sol\":2137:2198  require(totalSupply + amount <= maxSupply, \"Over max supply\") */\n      tag_178\n        /* \"#utility.yul\":8957:9296   */\n      jump\n        /* \"ERC721A/NagaKidsERC721A.sol\":2137:2198  require(totalSupply + amount <= maxSupply, \"Over max supply\") */\n    tag_223:\n        /* \"ERC721A/NagaKidsERC721A.sol\":2209:2230  _safeMint(to, amount) */\n      tag_226\n        /* \"ERC721A/NagaKidsERC721A.sol\":2219:2221  to */\n      dup5\n        /* \"ERC721A/NagaKidsERC721A.sol\":2223:2229  amount */\n      dup5\n        /* \"ERC721A/NagaKidsERC721A.sol\":2209:2218  _safeMint */\n      tag_227\n        /* \"ERC721A/NagaKidsERC721A.sol\":2209:2230  _safeMint(to, amount) */\n      jump\t// in\n    tag_226:\n        /* \"ERC721A/NagaKidsERC721A.sol\":2080:2238  {... */\n      pop\n        /* \"ERC721A/NagaKidsERC721A.sol\":2012:2238  function safeMint(address to,uint amount) public Minter(msg.sender) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_94:\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13444  operator == _msgSenderERC721A() */\n      dup4\n      and\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n      tag_230\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13453:13470  ApproveToCaller() */\n      mload(0x40)\n      shl(0xe0, 0xb06307db)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n    tag_230:\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13499  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13541  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      swap2\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      tag_181\n        /* \"#utility.yul\":400:587   */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_102:\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      tag_236\n        /* \"erc721a/contracts/ERC721A.sol\":14331:14335  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14337:14339  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14341:14348  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14330  transferFrom */\n      tag_57\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14377  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14382  to.code.length != 0 */\n      iszero\n        /* \"erc721a/contracts/ERC721A.sol\":14359:14539  if (to.code.length != 0)... */\n      tag_226\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_238\n        /* \"erc721a/contracts/ERC721A.sol\":14432:14436  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14438:14440  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14442:14449  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14451:14456  _data */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14431  _checkContractOnERC721Received */\n      tag_239\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_238:\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_226\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14484:14524  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A/NagaKidsERC721A.sol\":507:544  string public baseExtension = \".json\" */\n    tag_104:\n      0x0b\n      dup1\n      sload\n      tag_241\n      swap1\n      tag_127\n      jump\t// in\n    tag_241:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_242\n      swap1\n      tag_127\n      jump\t// in\n    tag_242:\n      dup1\n      iszero\n      tag_243\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_244\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_243)\n    tag_244:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_245:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_245\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_243:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"ERC721A/NagaKidsERC721A.sol\":1559:2003  function tokenURI(uint256 tokenId) public view virtual override(ERC721A,IERC721A) returns (string memory){... */\n    tag_108:\n        /* \"ERC721A/NagaKidsERC721A.sol\":1650:1663  string memory */\n      0x60\n        /* \"ERC721A/NagaKidsERC721A.sol\":1697:1713  _exists(tokenId) */\n      tag_247\n        /* \"ERC721A/NagaKidsERC721A.sol\":1705:1712  tokenId */\n      dup3\n        /* \"ERC721A/NagaKidsERC721A.sol\":1697:1704  _exists */\n      tag_134\n        /* \"ERC721A/NagaKidsERC721A.sol\":1697:1713  _exists(tokenId) */\n      jump\t// in\n    tag_247:\n        /* \"ERC721A/NagaKidsERC721A.sol\":1675:1788  require(... */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9503:9505   */\n      0x20\n        /* \"ERC721A/NagaKidsERC721A.sol\":1675:1788  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9485:9506   */\n      mstore\n        /* \"#utility.yul\":9542:9544   */\n      0x2f\n        /* \"#utility.yul\":9522:9540   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9515:9545   */\n      mstore\n        /* \"#utility.yul\":9581:9615   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":9561:9579   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9554:9616   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":9632:9650   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9625:9670   */\n      mstore\n        /* \"#utility.yul\":9687:9706   */\n      0x84\n      add\n        /* \"ERC721A/NagaKidsERC721A.sol\":1675:1788  require(... */\n      tag_178\n        /* \"#utility.yul\":9301:9712   */\n      jump\n        /* \"ERC721A/NagaKidsERC721A.sol\":1675:1788  require(... */\n    tag_248:\n        /* \"ERC721A/NagaKidsERC721A.sol\":1801:1829  string memory currentBaseURI */\n      0x00\n        /* \"ERC721A/NagaKidsERC721A.sol\":1832:1842  _baseURI() */\n      tag_251\n        /* \"ERC721A/NagaKidsERC721A.sol\":1832:1840  _baseURI */\n      tag_252\n        /* \"ERC721A/NagaKidsERC721A.sol\":1832:1842  _baseURI() */\n      jump\t// in\n    tag_251:\n        /* \"ERC721A/NagaKidsERC721A.sol\":1801:1842  string memory currentBaseURI = _baseURI() */\n      swap1\n      pop\n        /* \"ERC721A/NagaKidsERC721A.sol\":1891:1892  0 */\n      0x00\n        /* \"ERC721A/NagaKidsERC721A.sol\":1866:1880  currentBaseURI */\n      dup2\n        /* \"ERC721A/NagaKidsERC721A.sol\":1860:1888  bytes(currentBaseURI).length */\n      mload\n        /* \"ERC721A/NagaKidsERC721A.sol\":1860:1892  bytes(currentBaseURI).length > 0 */\n      gt\n        /* \"ERC721A/NagaKidsERC721A.sol\":1860:1995  bytes(currentBaseURI).length > 0 ... */\n      tag_253\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_254)\n    tag_253:\n        /* \"ERC721A/NagaKidsERC721A.sol\":1929:1943  currentBaseURI */\n      dup1\n        /* \"ERC721A/NagaKidsERC721A.sol\":1945:1963  tokenId.toString() */\n      tag_255\n        /* \"ERC721A/NagaKidsERC721A.sol\":1945:1952  tokenId */\n      dup5\n        /* \"ERC721A/NagaKidsERC721A.sol\":1945:1961  tokenId.toString */\n      tag_256\n        /* \"ERC721A/NagaKidsERC721A.sol\":1945:1963  tokenId.toString() */\n      jump\t// in\n    tag_255:\n        /* \"ERC721A/NagaKidsERC721A.sol\":1965:1978  baseExtension */\n      0x0b\n        /* \"ERC721A/NagaKidsERC721A.sol\":1912:1979  abi.encodePacked(currentBaseURI, tokenId.toString(), baseExtension) */\n      add(0x20, mload(0x40))\n      tag_257\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ERC721A/NagaKidsERC721A.sol\":1860:1995  bytes(currentBaseURI).length > 0 ... */\n    tag_254:\n        /* \"ERC721A/NagaKidsERC721A.sol\":1853:1995  return bytes(currentBaseURI).length > 0 ... */\n      swap4\n        /* \"ERC721A/NagaKidsERC721A.sol\":1559:2003  function tokenURI(uint256 tokenId) public view virtual override(ERC721A,IERC721A) returns (string memory){... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_263:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11154:11156   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11136:11157   */\n      mstore\n        /* \"#utility.yul\":11193:11195   */\n      0x26\n        /* \"#utility.yul\":11173:11191   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11166:11196   */\n      mstore\n        /* \"#utility.yul\":11232:11266   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11212:11230   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11205:11267   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":11283:11301   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11276:11312   */\n      mstore\n        /* \"#utility.yul\":11329:11348   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_178\n        /* \"#utility.yul\":10952:11354   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_124:\n        /* \"erc721a/contracts/ERC721A.sol\":5738:5742  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6058  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_272\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6134  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_272:\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_123\n      jumpi\n      pop\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6210  interfaceId == 0x5b5e139f */\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_134:\n        /* \"erc721a/contracts/ERC721A.sol\":14848:14852  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":14902:14909  tokenId */\n      dup2\n        /* \"ERC721A/NagaKidsERC721A.sol\":2977:2978  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14909  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14948  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_276\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14935:14948  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14932  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14948  tokenId < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14948  _startTokenId() <= tokenId &&... */\n    tag_276:\n        /* \"erc721a/contracts/ERC721A.sol\":14883:15033  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_123\n      jumpi\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15002  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15028  _packedOwnerships[tokenId] & BITMASK_BURNED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15033  _packedOwnerships[tokenId] & BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":7949:9054  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_149:\n        /* \"erc721a/contracts/ERC721A.sol\":8016:8023  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8050:8057  tokenId */\n      dup2\n      dup1\n        /* \"ERC721A/NagaKidsERC721A.sol\":2977:2978  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8119  _startTokenId() <= curr */\n      gt\n        /* \"erc721a/contracts/ERC721A.sol\":8092:8990  if (_startTokenId() <= curr)... */\n      tag_283\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8148:8161  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8145  curr */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8161  curr < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8185:8199  uint256 packed */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8219  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n      shl(0xe0, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8312  packed & BITMASK_BURNED */\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8317  packed & BITMASK_BURNED == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n      tag_284\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n    tag_285:\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8813  packed */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8817:8818  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8818  packed == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      tag_254\n      jumpi\n      pop\n      not(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":8877:8883  --curr */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8876  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      jump(tag_285)\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n    tag_284:\n        /* \"erc721a/contracts/ERC721A.sol\":8163:8990  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n    tag_283:\n        /* \"erc721a/contracts/ERC721A.sol\":9016:9047  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A/NagaKidsERC721A.sol\":2360:2597  function _beforeTokenTransfers(... */\n    tag_162:\n        /* \"ERC721A/NagaKidsERC721A.sol\":2529:2589  super._beforeTokenTransfers(from, to, startTokenId,quantity) */\n      tag_226\n        /* \"ERC721A/NagaKidsERC721A.sol\":2012:2238  function safeMint(address to,uint amount) public Minter(msg.sender) {... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":25171:28168  function _burn(uint256 tokenId, bool approvalCheck) internal virtual {... */\n    tag_186:\n        /* \"erc721a/contracts/ERC721A.sol\":25250:25277  uint256 prevOwnershipPacked */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":25280:25307  _packedOwnershipOf(tokenId) */\n      tag_298\n        /* \"erc721a/contracts/ERC721A.sol\":25299:25306  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":25280:25298  _packedOwnershipOf */\n      tag_149\n        /* \"erc721a/contracts/ERC721A.sol\":25280:25307  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_298:\n        /* \"erc721a/contracts/ERC721A.sol\":25250:25307  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":25318:25330  address from */\n      0x00\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":25438:25466  _getApprovedAddress(tokenId) */\n      tag_299\n        /* \"erc721a/contracts/ERC721A.sol\":25458:25465  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":20528:20555  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20821:20842  mstore(0x00, tokenId) */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20652:20667  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":20862:20866  0x20 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":20855:20891  mstore(0x20, tokenApprovalsPtr.slot) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20943:20947  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":20927:20948  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":21031:21057  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":20927:20948  keccak256(0x00, 0x40) */\n      swap1\n      swap2\n        /* \"erc721a/contracts/ERC721A.sol\":20436:21073  function _getApprovedAddress(uint256 tokenId)... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":25438:25466  _getApprovedAddress(tokenId) */\n    tag_299:\n        /* \"erc721a/contracts/ERC721A.sol\":25381:25466  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":25481:25494  approvalCheck */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":25477:25783  if (approvalCheck) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":25600:25662  _isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()) */\n      tag_301\n        /* \"erc721a/contracts/ERC721A.sol\":25619:25634  approvedAddress */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":25636:25640  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":25642:25661  _msgSenderERC721A() */\n      tag_154\n        /* \"erc721a/contracts/ERC721A.sol\":32874:32977  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":25600:25662  _isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()) */\n    tag_301:\n        /* \"erc721a/contracts/ERC721A.sol\":25595:25772  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_306\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":25685:25728  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_304\n        /* \"erc721a/contracts/ERC721A.sol\":25702:25706  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_114\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":25685:25728  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_304:\n        /* \"erc721a/contracts/ERC721A.sol\":25680:25772  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_306\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":25737:25772  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":25680:25772  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_306:\n        /* \"erc721a/contracts/ERC721A.sol\":25793:25844  _beforeTokenTransfers(from, address(0), tokenId, 1) */\n      tag_307\n        /* \"erc721a/contracts/ERC721A.sol\":25815:25819  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":25829:25830  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":25833:25840  tokenId */\n      dup9\n        /* \"erc721a/contracts/ERC721A.sol\":25842:25843  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":25793:25814  _beforeTokenTransfers */\n      tag_162\n        /* \"erc721a/contracts/ERC721A.sol\":25793:25844  _beforeTokenTransfers(from, address(0), tokenId, 1) */\n      jump\t// in\n    tag_307:\n        /* \"erc721a/contracts/ERC721A.sol\":25933:25948  approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":25930:26087  if approvedAddress {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":26071:26072  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":26050:26069  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":26043:26073  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":25930:26087  if approvedAddress {... */\n    tag_308:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":26675:26699  _packedAddressData[from] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":26675:26693  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":26675:26699  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":26675:26734  _packedAddressData[from] += (1 << BITPOS_NUMBER_BURNED) - 1 */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":26703:26734  (1 << BITPOS_NUMBER_BURNED) - 1 */\n      0xffffffffffffffffffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":26675:26734  _packedAddressData[from] += (1 << BITPOS_NUMBER_BURNED) - 1 */\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":10863:10874  timestamp() */\n      timestamp\n        /* \"erc721a/contracts/ERC721A.sol\":10839:10861  BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":10835:10875  shl(BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":10822:10884  or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe0, 0x03)\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":26965:26991  _packedOwnerships[tokenId] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":26965:26982  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":26965:26991  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":26965:27165  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":27282:27328  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED */\n      dup6\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":27282:27333  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":27278:27894  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_311\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":27385:27386  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":27375:27386  tokenId + 1 */\n      dup7\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":27353:27372  uint256 nextTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":27506:27536  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":27506:27523  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":27506:27536  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":27506:27541  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":27502:27880  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_313\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":27642:27655  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":27627:27638  nextTokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":27627:27655  nextTokenId != _currentIndex */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":27623:27862  if (nextTokenId != _currentIndex) {... */\n      tag_313\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":27787:27817  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":27787:27804  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":27787:27817  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":27787:27839  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup6\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":27623:27862  if (nextTokenId != _currentIndex) {... */\n    tag_313:\n        /* \"erc721a/contracts/ERC721A.sol\":27335:27894  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":27278:27894  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_311:\n        /* \"erc721a/contracts/ERC721A.sol\":27919:27954  Transfer(from, address(0), tokenId) */\n      mload(0x40)\n        /* \"erc721a/contracts/ERC721A.sol\":27946:27953  tokenId */\n      dup7\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":27942:27943  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":27919:27954  Transfer(from, address(0), tokenId) */\n      dup7\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":27942:27943  0 */\n      dup4\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":27919:27954  Transfer(from, address(0), tokenId) */\n      log4\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":28137:28149  _burnCounter */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":28137:28151  _burnCounter++ */\n      dup1\n      sload\n      dup2\n      add\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":25171:28168  function _burn(uint256 tokenId, bool approvalCheck) internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      0x08\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":15138:15240  function _safeMint(address to, uint256 quantity) internal {... */\n    tag_227:\n        /* \"erc721a/contracts/ERC721A.sol\":15206:15233  _safeMint(to, quantity, '') */\n      tag_193\n        /* \"erc721a/contracts/ERC721A.sol\":15216:15218  to */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":15220:15228  quantity */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":15206:15233  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15206:15215  _safeMint */\n      tag_318\n        /* \"erc721a/contracts/ERC721A.sol\":15206:15233  _safeMint(to, quantity, '') */\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n    tag_239:\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":28807:28811  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28872  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_321\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28894:28898  from */\n      dup10\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28900:28907  tokenId */\n      dup9\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28909:28914  _data */\n      dup9\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_322\n      jump\t// in\n    tag_321:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_323\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_324\n      swap2\n      dup2\n      add\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      0x01\n    tag_323:\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_326\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_331\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_330)\n    tag_331:\n      0x60\n      swap2\n      pop\n    tag_330:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29111  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29118  reason.length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29122:29123  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29123  reason.length == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n      tag_332\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":29150:29190  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n    tag_332:\n        /* \"erc721a/contracts/ERC721A.sol\":29290:29296  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":29284:29297  mload(reason) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29275:29281  reason */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29271:29273  32 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":29267:29282  add(32, reason) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":29260:29298  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_326:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":28983:29047  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_334:\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A/NagaKidsERC721A.sol\":1341:1441  function _baseURI() internal view override returns (string memory) {... */\n    tag_252:\n        /* \"ERC721A/NagaKidsERC721A.sol\":1393:1406  string memory */\n      0x60\n        /* \"ERC721A/NagaKidsERC721A.sol\":1426:1433  baseURI */\n      0x0a\n        /* \"ERC721A/NagaKidsERC721A.sol\":1419:1433  return baseURI */\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":601:606  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":610:611  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":601:611  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n      tag_342\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:637  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":672:677  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":718:727  temp != 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":743:751  digits++ */\n      dup1\n      tag_345\n      dup2\n      tag_346\n      jump\t// in\n    tag_345:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      tag_347\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      dup4\n      tag_348\n      jump\t// in\n    tag_347:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_343)\n    tag_344:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":827:833  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_350\n      jumpi\n      tag_350\n      tag_351\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_352\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_352:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:861  value != 0 */\n      dup5\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      tag_334\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      tag_355\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":887:888  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      dup4\n      tag_356\n      jump\t// in\n    tag_355:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_357\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:950  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_359\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:934  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_222\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":909:915  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_361\n      jumpi\n      tag_361\n      tag_362\n      jump\t// in\n    tag_361:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      tag_363\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      dup7\n      tag_348\n      jump\t// in\n    tag_363:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_353)\n        /* \"erc721a/contracts/ERC721A.sol\":15641:16302  function _safeMint(... */\n    tag_318:\n        /* \"erc721a/contracts/ERC721A.sol\":15759:15778  _mint(to, quantity) */\n      tag_366\n        /* \"erc721a/contracts/ERC721A.sol\":15765:15767  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":15769:15777  quantity */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":15759:15764  _mint */\n      tag_367\n        /* \"erc721a/contracts/ERC721A.sol\":15759:15778  _mint(to, quantity) */\n      jump\t// in\n    tag_366:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":15817:15831  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"erc721a/contracts/ERC721A.sol\":15817:15836  to.code.length != 0 */\n      iszero\n        /* \"erc721a/contracts/ERC721A.sol\":15813:16286  if (to.code.length != 0) {... */\n      tag_183\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":15856:15867  uint256 end */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":15870:15883  _currentIndex */\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":15917:15931  end - quantity */\n      dup3\n      dup2\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":15949:16178  do {... */\n    tag_369:\n        /* \"erc721a/contracts/ERC721A.sol\":15979:16041  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      tag_372\n        /* \"erc721a/contracts/ERC721A.sol\":16018:16019  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16022:16024  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":16026:16033  index++ */\n      dup4\n      dup1\n      0x01\n      add\n      swap5\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":16035:16040  _data */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":15979:16009  _checkContractOnERC721Received */\n      tag_239\n        /* \"erc721a/contracts/ERC721A.sol\":15979:16041  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      jump\t// in\n    tag_372:\n        /* \"erc721a/contracts/ERC721A.sol\":15974:16139  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n      tag_373\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16076:16116  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":15974:16139  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n    tag_373:\n        /* \"erc721a/contracts/ERC721A.sol\":16173:16176  end */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":16165:16170  index */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":16165:16176  index < end */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":15949:16178  do {... */\n      tag_369\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16258:16261  end */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":16241:16254  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":16241:16261  _currentIndex != end */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":16237:16271  if (_currentIndex != end) revert() */\n      tag_374\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16263:16271  revert() */\n      0x00\n      dup1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":16237:16271  if (_currentIndex != end) revert() */\n    tag_374:\n        /* \"erc721a/contracts/ERC721A.sol\":15838:16286  {... */\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15641:16302  function _safeMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":16563:18055  function _mint(address to, uint256 quantity) internal {... */\n    tag_367:\n        /* \"erc721a/contracts/ERC721A.sol\":16627:16647  uint256 startTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16650:16663  _currentIndex */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":16677:16693  to == address(0) */\n      dup4\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":16673:16721  if (to == address(0)) revert MintToZeroAddress() */\n      tag_376\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16702:16721  MintToZeroAddress() */\n      mload(0x40)\n      shl(0xe8, 0x2e0763)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":16673:16721  if (to == address(0)) revert MintToZeroAddress() */\n    tag_376:\n        /* \"erc721a/contracts/ERC721A.sol\":16735:16743  quantity */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":16747:16748  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16735:16748  quantity == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":16731:16775  if (quantity == 0) revert MintZeroQuantity() */\n      tag_377\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16757:16775  MintZeroQuantity() */\n      mload(0x40)\n      shl(0xe0, 0xb562e8dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":16731:16775  if (quantity == 0) revert MintZeroQuantity() */\n    tag_377:\n        /* \"erc721a/contracts/ERC721A.sol\":16786:16847  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_378\n        /* \"erc721a/contracts/ERC721A.sol\":16816:16817  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16820:16822  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":16824:16836  startTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":16838:16846  quantity */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":16786:16807  _beforeTokenTransfers */\n      tag_162\n        /* \"erc721a/contracts/ERC721A.sol\":16786:16847  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_378:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":17250:17272  _packedAddressData[to] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":17250:17268  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":17250:17272  _packedAddressData[to] */\n      0x20\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":1156:1158  64 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":17250:17272  _packedAddressData[to] */\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":17250:17320  _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1) */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":17288:17319  (1 << BITPOS_NUMBER_MINTED) | 1 */\n      0x010000000000000001\n        /* \"erc721a/contracts/ERC721A.sol\":17276:17320  quantity * ((1 << BITPOS_NUMBER_MINTED) | 1) */\n      dup6\n      mul\n        /* \"erc721a/contracts/ERC721A.sol\":17250:17320  _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1) */\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":10863:10874  timestamp() */\n      timestamp\n        /* \"erc721a/contracts/ERC721A.sol\":10839:10861  BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":10835:10875  shl(BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":12522:12537  eq(quantity, 1) */\n      dup5\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":12497:12520  BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"erc721a/contracts/ERC721A.sol\":12493:12538  shl(BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":10832:10883  or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":10822:10884  or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":17556:17587  _packedOwnerships[startTokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":17556:17573  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":17556:17587  _packedOwnerships[startTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":17556:17726  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":17574:17586  startTokenId */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":17799:17822  startTokenId + quantity */\n      dup3\n      dup2\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":17836:17935  do {... */\n    tag_383:\n        /* \"erc721a/contracts/ERC721A.sol\":17862:17897  Transfer(address(0), to, tokenId++) */\n      mload(0x40)\n        /* \"erc721a/contracts/ERC721A.sol\":17887:17896  tokenId++ */\n      0x01\n      dup4\n      add\n      swap3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":17862:17897  Transfer(address(0), to, tokenId++) */\n      dup8\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":17879:17880  0 */\n      0x00\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":17862:17897  Transfer(address(0), to, tokenId++) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":17879:17880  0 */\n      dup3\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":17862:17897  Transfer(address(0), to, tokenId++) */\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":17930:17933  end */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":17920:17927  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":17920:17933  tokenId < end */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":17836:17935  do {... */\n      tag_383\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":17949:17962  _currentIndex */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17949:17968  _currentIndex = end */\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_388:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_32:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_402:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_254\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_388\n      jump\t// in\n        /* \"#utility.yul\":592:850   */\n    tag_389:\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":674:787   */\n    tag_406:\n        /* \"#utility.yul\":688:694   */\n      dup4\n        /* \"#utility.yul\":685:686   */\n      dup2\n        /* \"#utility.yul\":682:695   */\n      lt\n        /* \"#utility.yul\":674:787   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":764:775   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":758:776   */\n      mload\n        /* \"#utility.yul\":745:756   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":738:777   */\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x20\n        /* \"#utility.yul\":703:713   */\n      add\n        /* \"#utility.yul\":674:787   */\n      jump(tag_406)\n    tag_408:\n        /* \"#utility.yul\":805:811   */\n      dup4\n        /* \"#utility.yul\":802:803   */\n      dup2\n        /* \"#utility.yul\":799:812   */\n      gt\n        /* \"#utility.yul\":796:844   */\n      iszero\n      tag_226\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":822:838   */\n      swap2\n      add\n        /* \"#utility.yul\":815:842   */\n      mstore\n        /* \"#utility.yul\":592:850   */\n      jump\t// out\n        /* \"#utility.yul\":855:1113   */\n    tag_390:\n        /* \"#utility.yul\":897:900   */\n      0x00\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":929:941   */\n      mload\n        /* \"#utility.yul\":962:968   */\n      dup1\n        /* \"#utility.yul\":957:960   */\n      dup5\n        /* \"#utility.yul\":950:969   */\n      mstore\n        /* \"#utility.yul\":978:1041   */\n      tag_411\n        /* \"#utility.yul\":1034:1040   */\n      dup2\n        /* \"#utility.yul\":1027:1031   */\n      0x20\n        /* \"#utility.yul\":1022:1025   */\n      dup7\n        /* \"#utility.yul\":1018:1032   */\n      add\n        /* \"#utility.yul\":1011:1015   */\n      0x20\n        /* \"#utility.yul\":1004:1009   */\n      dup7\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":978:1041   */\n      tag_389\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1095:1097   */\n      0x1f\n        /* \"#utility.yul\":1074:1089   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1070:1099   */\n      and\n        /* \"#utility.yul\":1061:1100   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1102:1106   */\n      0x20\n        /* \"#utility.yul\":1057:1107   */\n      add\n      swap3\n        /* \"#utility.yul\":855:1113   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1338   */\n    tag_39:\n        /* \"#utility.yul\":1267:1269   */\n      0x20\n        /* \"#utility.yul\":1256:1265   */\n      dup2\n        /* \"#utility.yul\":1249:1270   */\n      mstore\n        /* \"#utility.yul\":1230:1234   */\n      0x00\n        /* \"#utility.yul\":1287:1332   */\n      tag_254\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1317:1326   */\n      dup4\n        /* \"#utility.yul\":1313:1331   */\n      add\n        /* \"#utility.yul\":1305:1311   */\n      dup5\n        /* \"#utility.yul\":1287:1332   */\n      tag_390\n      jump\t// in\n        /* \"#utility.yul\":1343:1523   */\n    tag_42:\n        /* \"#utility.yul\":1402:1408   */\n      0x00\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1443:1452   */\n      dup3\n        /* \"#utility.yul\":1434:1441   */\n      dup5\n        /* \"#utility.yul\":1430:1453   */\n      sub\n        /* \"#utility.yul\":1426:1458   */\n      slt\n        /* \"#utility.yul\":1423:1475   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1468:1469   */\n      dup1\n        /* \"#utility.yul\":1461:1473   */\n      revert\n        /* \"#utility.yul\":1423:1475   */\n    tag_415:\n      pop\n        /* \"#utility.yul\":1494:1517   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1343:1523   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:1909   */\n    tag_391:\n        /* \"#utility.yul\":1804:1824   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1853:1884   */\n      dup2\n      and\n        /* \"#utility.yul\":1843:1885   */\n      dup2\n      eq\n        /* \"#utility.yul\":1833:1903   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1896:1897   */\n      dup1\n        /* \"#utility.yul\":1889:1901   */\n      revert\n        /* \"#utility.yul\":1833:1903   */\n    tag_418:\n        /* \"#utility.yul\":1736:1909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1914:2168   */\n    tag_48:\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":1990:1996   */\n      dup1\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2022:2029   */\n      dup6\n        /* \"#utility.yul\":2018:2041   */\n      sub\n        /* \"#utility.yul\":2014:2046   */\n      slt\n        /* \"#utility.yul\":2011:2063   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2056:2057   */\n      dup1\n        /* \"#utility.yul\":2049:2061   */\n      revert\n        /* \"#utility.yul\":2011:2063   */\n    tag_420:\n        /* \"#utility.yul\":2082:2111   */\n      tag_421\n        /* \"#utility.yul\":2101:2110   */\n      dup4\n        /* \"#utility.yul\":2082:2111   */\n      tag_391\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2072:2111   */\n      swap5\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2143:2161   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2130:2162   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1914:2168   */\n      jump\t// out\n        /* \"#utility.yul\":2355:2683   */\n    tag_56:\n        /* \"#utility.yul\":2432:2438   */\n      0x00\n        /* \"#utility.yul\":2440:2446   */\n      dup1\n        /* \"#utility.yul\":2448:2454   */\n      0x00\n        /* \"#utility.yul\":2501:2503   */\n      0x60\n        /* \"#utility.yul\":2489:2498   */\n      dup5\n        /* \"#utility.yul\":2480:2487   */\n      dup7\n        /* \"#utility.yul\":2476:2499   */\n      sub\n        /* \"#utility.yul\":2472:2504   */\n      slt\n        /* \"#utility.yul\":2469:2521   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":2517:2518   */\n      0x00\n        /* \"#utility.yul\":2514:2515   */\n      dup1\n        /* \"#utility.yul\":2507:2519   */\n      revert\n        /* \"#utility.yul\":2469:2521   */\n    tag_424:\n        /* \"#utility.yul\":2540:2569   */\n      tag_425\n        /* \"#utility.yul\":2559:2568   */\n      dup5\n        /* \"#utility.yul\":2540:2569   */\n      tag_391\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2530:2569   */\n      swap3\n      pop\n        /* \"#utility.yul\":2588:2626   */\n      tag_426\n        /* \"#utility.yul\":2622:2624   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup6\n        /* \"#utility.yul\":2607:2625   */\n      add\n        /* \"#utility.yul\":2588:2626   */\n      tag_391\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":2578:2626   */\n      swap2\n      pop\n        /* \"#utility.yul\":2673:2675   */\n      0x40\n        /* \"#utility.yul\":2662:2671   */\n      dup5\n        /* \"#utility.yul\":2658:2676   */\n      add\n        /* \"#utility.yul\":2645:2677   */\n      calldataload\n        /* \"#utility.yul\":2635:2677   */\n      swap1\n      pop\n        /* \"#utility.yul\":2355:2683   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2688:3035   */\n    tag_60:\n        /* \"#utility.yul\":2753:2759   */\n      0x00\n        /* \"#utility.yul\":2761:2767   */\n      dup1\n        /* \"#utility.yul\":2814:2816   */\n      0x40\n        /* \"#utility.yul\":2802:2811   */\n      dup4\n        /* \"#utility.yul\":2793:2800   */\n      dup6\n        /* \"#utility.yul\":2789:2812   */\n      sub\n        /* \"#utility.yul\":2785:2817   */\n      slt\n        /* \"#utility.yul\":2782:2834   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":2830:2831   */\n      0x00\n        /* \"#utility.yul\":2827:2828   */\n      dup1\n        /* \"#utility.yul\":2820:2832   */\n      revert\n        /* \"#utility.yul\":2782:2834   */\n    tag_428:\n        /* \"#utility.yul\":2853:2882   */\n      tag_429\n        /* \"#utility.yul\":2872:2881   */\n      dup4\n        /* \"#utility.yul\":2853:2882   */\n      tag_391\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":2843:2882   */\n      swap2\n      pop\n        /* \"#utility.yul\":2932:2934   */\n      0x20\n        /* \"#utility.yul\":2921:2930   */\n      dup4\n        /* \"#utility.yul\":2917:2935   */\n      add\n        /* \"#utility.yul\":2904:2936   */\n      calldataload\n        /* \"#utility.yul\":2979:2984   */\n      dup1\n        /* \"#utility.yul\":2972:2985   */\n      iszero\n        /* \"#utility.yul\":2965:2986   */\n      iszero\n        /* \"#utility.yul\":2958:2963   */\n      dup2\n        /* \"#utility.yul\":2955:2987   */\n      eq\n        /* \"#utility.yul\":2945:3005   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":3001:3002   */\n      0x00\n        /* \"#utility.yul\":2998:2999   */\n      dup1\n        /* \"#utility.yul\":2991:3003   */\n      revert\n        /* \"#utility.yul\":2945:3005   */\n    tag_430:\n        /* \"#utility.yul\":3024:3029   */\n      dup1\n        /* \"#utility.yul\":3014:3029   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2688:3035   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3040:3167   */\n    tag_351:\n        /* \"#utility.yul\":3101:3111   */\n      0x4e487b71\n        /* \"#utility.yul\":3096:3099   */\n      0xe0\n        /* \"#utility.yul\":3092:3112   */\n      shl\n        /* \"#utility.yul\":3089:3090   */\n      0x00\n        /* \"#utility.yul\":3082:3113   */\n      mstore\n        /* \"#utility.yul\":3132:3136   */\n      0x41\n        /* \"#utility.yul\":3129:3130   */\n      0x04\n        /* \"#utility.yul\":3122:3137   */\n      mstore\n        /* \"#utility.yul\":3156:3160   */\n      0x24\n        /* \"#utility.yul\":3153:3154   */\n      0x00\n        /* \"#utility.yul\":3146:3161   */\n      revert\n        /* \"#utility.yul\":3172:3804   */\n    tag_392:\n        /* \"#utility.yul\":3237:3242   */\n      0x00\n        /* \"#utility.yul\":3267:3285   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3308:3310   */\n      dup1\n        /* \"#utility.yul\":3300:3306   */\n      dup5\n        /* \"#utility.yul\":3297:3311   */\n      gt\n        /* \"#utility.yul\":3294:3334   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":3314:3332   */\n      tag_434\n      tag_351\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":3389:3391   */\n      0x40\n        /* \"#utility.yul\":3383:3392   */\n      mload\n        /* \"#utility.yul\":3357:3359   */\n      0x1f\n        /* \"#utility.yul\":3443:3458   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3439:3463   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3465:3467   */\n      0x3f\n        /* \"#utility.yul\":3435:3468   */\n      add\n        /* \"#utility.yul\":3431:3473   */\n      and\n        /* \"#utility.yul\":3419:3474   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3489:3507   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":3509:3531   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3486:3532   */\n      or\n        /* \"#utility.yul\":3483:3555   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":3535:3553   */\n      tag_436\n      tag_351\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3575:3585   */\n      dup2\n        /* \"#utility.yul\":3571:3573   */\n      0x40\n        /* \"#utility.yul\":3564:3586   */\n      mstore\n        /* \"#utility.yul\":3604:3610   */\n      dup1\n        /* \"#utility.yul\":3595:3610   */\n      swap4\n      pop\n        /* \"#utility.yul\":3634:3640   */\n      dup6\n        /* \"#utility.yul\":3626:3632   */\n      dup2\n        /* \"#utility.yul\":3619:3641   */\n      mstore\n        /* \"#utility.yul\":3674:3677   */\n      dup7\n        /* \"#utility.yul\":3665:3671   */\n      dup7\n        /* \"#utility.yul\":3660:3663   */\n      dup7\n        /* \"#utility.yul\":3656:3672   */\n      add\n        /* \"#utility.yul\":3653:3678   */\n      gt\n        /* \"#utility.yul\":3650:3695   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":3691:3692   */\n      0x00\n        /* \"#utility.yul\":3688:3689   */\n      dup1\n        /* \"#utility.yul\":3681:3693   */\n      revert\n        /* \"#utility.yul\":3650:3695   */\n    tag_437:\n        /* \"#utility.yul\":3741:3747   */\n      dup6\n        /* \"#utility.yul\":3736:3739   */\n      dup6\n        /* \"#utility.yul\":3729:3733   */\n      0x20\n        /* \"#utility.yul\":3721:3727   */\n      dup4\n        /* \"#utility.yul\":3717:3734   */\n      add\n        /* \"#utility.yul\":3704:3748   */\n      calldatacopy\n        /* \"#utility.yul\":3796:3797   */\n      0x00\n        /* \"#utility.yul\":3789:3793   */\n      0x20\n        /* \"#utility.yul\":3780:3786   */\n      dup8\n        /* \"#utility.yul\":3772:3778   */\n      dup4\n        /* \"#utility.yul\":3768:3787   */\n      add\n        /* \"#utility.yul\":3764:3794   */\n      add\n        /* \"#utility.yul\":3757:3798   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3172:3804   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3809:4260   */\n    tag_70:\n        /* \"#utility.yul\":3878:3884   */\n      0x00\n        /* \"#utility.yul\":3931:3933   */\n      0x20\n        /* \"#utility.yul\":3919:3928   */\n      dup3\n        /* \"#utility.yul\":3910:3917   */\n      dup5\n        /* \"#utility.yul\":3906:3929   */\n      sub\n        /* \"#utility.yul\":3902:3934   */\n      slt\n        /* \"#utility.yul\":3899:3951   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":3947:3948   */\n      0x00\n        /* \"#utility.yul\":3944:3945   */\n      dup1\n        /* \"#utility.yul\":3937:3949   */\n      revert\n        /* \"#utility.yul\":3899:3951   */\n    tag_439:\n        /* \"#utility.yul\":3987:3996   */\n      dup2\n        /* \"#utility.yul\":3974:3997   */\n      calldataload\n        /* \"#utility.yul\":4020:4038   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4012:4018   */\n      dup2\n        /* \"#utility.yul\":4009:4039   */\n      gt\n        /* \"#utility.yul\":4006:4056   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":4052:4053   */\n      0x00\n        /* \"#utility.yul\":4049:4050   */\n      dup1\n        /* \"#utility.yul\":4042:4054   */\n      revert\n        /* \"#utility.yul\":4006:4056   */\n    tag_440:\n        /* \"#utility.yul\":4075:4097   */\n      dup3\n      add\n        /* \"#utility.yul\":4128:4132   */\n      0x1f\n        /* \"#utility.yul\":4120:4133   */\n      dup2\n      add\n        /* \"#utility.yul\":4116:4143   */\n      dup5\n      sgt\n        /* \"#utility.yul\":4106:4161   */\n      tag_441\n      jumpi\n        /* \"#utility.yul\":4157:4158   */\n      0x00\n        /* \"#utility.yul\":4154:4155   */\n      dup1\n        /* \"#utility.yul\":4147:4159   */\n      revert\n        /* \"#utility.yul\":4106:4161   */\n    tag_441:\n        /* \"#utility.yul\":4180:4254   */\n      tag_334\n        /* \"#utility.yul\":4246:4253   */\n      dup5\n        /* \"#utility.yul\":4241:4243   */\n      dup3\n        /* \"#utility.yul\":4228:4244   */\n      calldataload\n        /* \"#utility.yul\":4223:4225   */\n      0x20\n        /* \"#utility.yul\":4219:4221   */\n      dup5\n        /* \"#utility.yul\":4215:4226   */\n      add\n        /* \"#utility.yul\":4180:4254   */\n      tag_392\n      jump\t// in\n        /* \"#utility.yul\":4265:4451   */\n    tag_78:\n        /* \"#utility.yul\":4324:4330   */\n      0x00\n        /* \"#utility.yul\":4377:4379   */\n      0x20\n        /* \"#utility.yul\":4365:4374   */\n      dup3\n        /* \"#utility.yul\":4356:4363   */\n      dup5\n        /* \"#utility.yul\":4352:4375   */\n      sub\n        /* \"#utility.yul\":4348:4380   */\n      slt\n        /* \"#utility.yul\":4345:4397   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":4393:4394   */\n      0x00\n        /* \"#utility.yul\":4390:4391   */\n      dup1\n        /* \"#utility.yul\":4383:4395   */\n      revert\n        /* \"#utility.yul\":4345:4397   */\n    tag_444:\n        /* \"#utility.yul\":4416:4445   */\n      tag_254\n        /* \"#utility.yul\":4435:4444   */\n      dup3\n        /* \"#utility.yul\":4416:4445   */\n      tag_391\n      jump\t// in\n        /* \"#utility.yul\":4456:5123   */\n    tag_101:\n        /* \"#utility.yul\":4551:4557   */\n      0x00\n        /* \"#utility.yul\":4559:4565   */\n      dup1\n        /* \"#utility.yul\":4567:4573   */\n      0x00\n        /* \"#utility.yul\":4575:4581   */\n      dup1\n        /* \"#utility.yul\":4628:4631   */\n      0x80\n        /* \"#utility.yul\":4616:4625   */\n      dup6\n        /* \"#utility.yul\":4607:4614   */\n      dup8\n        /* \"#utility.yul\":4603:4626   */\n      sub\n        /* \"#utility.yul\":4599:4632   */\n      slt\n        /* \"#utility.yul\":4596:4649   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":4645:4646   */\n      0x00\n        /* \"#utility.yul\":4642:4643   */\n      dup1\n        /* \"#utility.yul\":4635:4647   */\n      revert\n        /* \"#utility.yul\":4596:4649   */\n    tag_447:\n        /* \"#utility.yul\":4668:4697   */\n      tag_448\n        /* \"#utility.yul\":4687:4696   */\n      dup6\n        /* \"#utility.yul\":4668:4697   */\n      tag_391\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4658:4697   */\n      swap4\n      pop\n        /* \"#utility.yul\":4716:4754   */\n      tag_449\n        /* \"#utility.yul\":4750:4752   */\n      0x20\n        /* \"#utility.yul\":4739:4748   */\n      dup7\n        /* \"#utility.yul\":4735:4753   */\n      add\n        /* \"#utility.yul\":4716:4754   */\n      tag_391\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":4706:4754   */\n      swap3\n      pop\n        /* \"#utility.yul\":4801:4803   */\n      0x40\n        /* \"#utility.yul\":4790:4799   */\n      dup6\n        /* \"#utility.yul\":4786:4804   */\n      add\n        /* \"#utility.yul\":4773:4805   */\n      calldataload\n        /* \"#utility.yul\":4763:4805   */\n      swap2\n      pop\n        /* \"#utility.yul\":4856:4858   */\n      0x60\n        /* \"#utility.yul\":4845:4854   */\n      dup6\n        /* \"#utility.yul\":4841:4859   */\n      add\n        /* \"#utility.yul\":4828:4860   */\n      calldataload\n        /* \"#utility.yul\":4883:4901   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4875:4881   */\n      dup2\n        /* \"#utility.yul\":4872:4902   */\n      gt\n        /* \"#utility.yul\":4869:4919   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":4915:4916   */\n      0x00\n        /* \"#utility.yul\":4912:4913   */\n      dup1\n        /* \"#utility.yul\":4905:4917   */\n      revert\n        /* \"#utility.yul\":4869:4919   */\n    tag_450:\n        /* \"#utility.yul\":4938:4960   */\n      dup6\n      add\n        /* \"#utility.yul\":4991:4995   */\n      0x1f\n        /* \"#utility.yul\":4983:4996   */\n      dup2\n      add\n        /* \"#utility.yul\":4979:5006   */\n      dup8\n      sgt\n        /* \"#utility.yul\":4969:5024   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":5020:5021   */\n      0x00\n        /* \"#utility.yul\":5017:5018   */\n      dup1\n        /* \"#utility.yul\":5010:5022   */\n      revert\n        /* \"#utility.yul\":4969:5024   */\n    tag_451:\n        /* \"#utility.yul\":5043:5117   */\n      tag_452\n        /* \"#utility.yul\":5109:5116   */\n      dup8\n        /* \"#utility.yul\":5104:5106   */\n      dup3\n        /* \"#utility.yul\":5091:5107   */\n      calldataload\n        /* \"#utility.yul\":5086:5088   */\n      0x20\n        /* \"#utility.yul\":5082:5084   */\n      dup5\n        /* \"#utility.yul\":5078:5089   */\n      add\n        /* \"#utility.yul\":5043:5117   */\n      tag_392\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":5033:5117   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4456:5123   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5128:5388   */\n    tag_115:\n        /* \"#utility.yul\":5196:5202   */\n      0x00\n        /* \"#utility.yul\":5204:5210   */\n      dup1\n        /* \"#utility.yul\":5257:5259   */\n      0x40\n        /* \"#utility.yul\":5245:5254   */\n      dup4\n        /* \"#utility.yul\":5236:5243   */\n      dup6\n        /* \"#utility.yul\":5232:5255   */\n      sub\n        /* \"#utility.yul\":5228:5260   */\n      slt\n        /* \"#utility.yul\":5225:5277   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":5273:5274   */\n      0x00\n        /* \"#utility.yul\":5270:5271   */\n      dup1\n        /* \"#utility.yul\":5263:5275   */\n      revert\n        /* \"#utility.yul\":5225:5277   */\n    tag_454:\n        /* \"#utility.yul\":5296:5325   */\n      tag_455\n        /* \"#utility.yul\":5315:5324   */\n      dup4\n        /* \"#utility.yul\":5296:5325   */\n      tag_391\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5286:5325   */\n      swap2\n      pop\n        /* \"#utility.yul\":5344:5382   */\n      tag_456\n        /* \"#utility.yul\":5378:5380   */\n      0x20\n        /* \"#utility.yul\":5367:5376   */\n      dup5\n        /* \"#utility.yul\":5363:5381   */\n      add\n        /* \"#utility.yul\":5344:5382   */\n      tag_391\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":5334:5382   */\n      swap1\n      pop\n        /* \"#utility.yul\":5128:5388   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5393:5773   */\n    tag_127:\n        /* \"#utility.yul\":5472:5473   */\n      0x01\n        /* \"#utility.yul\":5468:5480   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5515:5527   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5536:5597   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":5590:5594   */\n      0x7f\n        /* \"#utility.yul\":5582:5588   */\n      dup3\n        /* \"#utility.yul\":5578:5595   */\n      and\n        /* \"#utility.yul\":5568:5595   */\n      swap2\n      pop\n        /* \"#utility.yul\":5536:5597   */\n    tag_458:\n        /* \"#utility.yul\":5643:5645   */\n      0x20\n        /* \"#utility.yul\":5635:5641   */\n      dup3\n        /* \"#utility.yul\":5632:5646   */\n      lt\n        /* \"#utility.yul\":5612:5630   */\n      dup2\n        /* \"#utility.yul\":5609:5647   */\n      sub\n        /* \"#utility.yul\":5606:5767   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":5689:5699   */\n      0x4e487b71\n        /* \"#utility.yul\":5684:5687   */\n      0xe0\n        /* \"#utility.yul\":5680:5700   */\n      shl\n        /* \"#utility.yul\":5677:5678   */\n      0x00\n        /* \"#utility.yul\":5670:5701   */\n      mstore\n        /* \"#utility.yul\":5724:5728   */\n      0x22\n        /* \"#utility.yul\":5721:5722   */\n      0x04\n        /* \"#utility.yul\":5714:5729   */\n      mstore\n        /* \"#utility.yul\":5752:5756   */\n      0x24\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5742:5757   */\n      revert\n        /* \"#utility.yul\":5606:5767   */\n    tag_459:\n      pop\n        /* \"#utility.yul\":5393:5773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5778:6134   */\n    tag_179:\n        /* \"#utility.yul\":5980:5982   */\n      0x20\n        /* \"#utility.yul\":5962:5983   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5999:6017   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5992:6022   */\n      mstore\n        /* \"#utility.yul\":6058:6092   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6053:6055   */\n      0x40\n        /* \"#utility.yul\":6038:6056   */\n      dup3\n      add\n        /* \"#utility.yul\":6031:6093   */\n      mstore\n        /* \"#utility.yul\":6125:6127   */\n      0x60\n        /* \"#utility.yul\":6110:6128   */\n      add\n      swap1\n        /* \"#utility.yul\":5778:6134   */\n      jump\t// out\n        /* \"#utility.yul\":6265:6810   */\n    tag_394:\n        /* \"#utility.yul\":6367:6369   */\n      0x1f\n        /* \"#utility.yul\":6362:6365   */\n      dup3\n        /* \"#utility.yul\":6359:6370   */\n      gt\n        /* \"#utility.yul\":6356:6804   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":6403:6404   */\n      0x00\n        /* \"#utility.yul\":6428:6433   */\n      dup2\n        /* \"#utility.yul\":6424:6426   */\n      dup2\n        /* \"#utility.yul\":6417:6434   */\n      mstore\n        /* \"#utility.yul\":6473:6477   */\n      0x20\n        /* \"#utility.yul\":6469:6471   */\n      dup2\n        /* \"#utility.yul\":6459:6478   */\n      keccak256\n        /* \"#utility.yul\":6543:6545   */\n      0x1f\n        /* \"#utility.yul\":6531:6541   */\n      dup6\n        /* \"#utility.yul\":6527:6546   */\n      add\n        /* \"#utility.yul\":6524:6525   */\n      0x05\n        /* \"#utility.yul\":6520:6547   */\n      shr\n        /* \"#utility.yul\":6514:6518   */\n      dup2\n        /* \"#utility.yul\":6510:6548   */\n      add\n        /* \"#utility.yul\":6579:6583   */\n      0x20\n        /* \"#utility.yul\":6567:6577   */\n      dup7\n        /* \"#utility.yul\":6564:6584   */\n      lt\n        /* \"#utility.yul\":6561:6608   */\n      iszero\n      tag_464\n      jumpi\n      pop\n        /* \"#utility.yul\":6602:6606   */\n      dup1\n        /* \"#utility.yul\":6561:6608   */\n    tag_464:\n        /* \"#utility.yul\":6657:6659   */\n      0x1f\n        /* \"#utility.yul\":6652:6655   */\n      dup6\n        /* \"#utility.yul\":6648:6660   */\n      add\n        /* \"#utility.yul\":6645:6646   */\n      0x05\n        /* \"#utility.yul\":6641:6661   */\n      shr\n        /* \"#utility.yul\":6635:6639   */\n      dup3\n        /* \"#utility.yul\":6631:6662   */\n      add\n        /* \"#utility.yul\":6621:6662   */\n      swap2\n      pop\n        /* \"#utility.yul\":6712:6794   */\n    tag_465:\n        /* \"#utility.yul\":6730:6732   */\n      dup2\n        /* \"#utility.yul\":6723:6728   */\n      dup2\n        /* \"#utility.yul\":6720:6733   */\n      lt\n        /* \"#utility.yul\":6712:6794   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":6775:6792   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":6756:6757   */\n      0x01\n        /* \"#utility.yul\":6745:6758   */\n      add\n        /* \"#utility.yul\":6712:6794   */\n      jump(tag_465)\n        /* \"#utility.yul\":6986:8338   */\n    tag_194:\n        /* \"#utility.yul\":7112:7115   */\n      dup2\n        /* \"#utility.yul\":7106:7116   */\n      mload\n        /* \"#utility.yul\":7139:7157   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7131:7137   */\n      dup2\n        /* \"#utility.yul\":7128:7158   */\n      gt\n        /* \"#utility.yul\":7125:7181   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":7161:7179   */\n      tag_471\n      tag_351\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":7190:7287   */\n      tag_472\n        /* \"#utility.yul\":7280:7286   */\n      dup2\n        /* \"#utility.yul\":7240:7278   */\n      tag_473\n        /* \"#utility.yul\":7272:7276   */\n      dup5\n        /* \"#utility.yul\":7266:7277   */\n      sload\n        /* \"#utility.yul\":7240:7278   */\n      tag_127\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":7234:7238   */\n      dup5\n        /* \"#utility.yul\":7190:7287   */\n      tag_394\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7342:7346   */\n      0x20\n      dup1\n        /* \"#utility.yul\":7406:7408   */\n      0x1f\n        /* \"#utility.yul\":7395:7409   */\n      dup4\n      gt\n        /* \"#utility.yul\":7423:7424   */\n      0x01\n        /* \"#utility.yul\":7418:8081   */\n      dup2\n      eq\n      tag_475\n      jumpi\n        /* \"#utility.yul\":8125:8126   */\n      0x00\n        /* \"#utility.yul\":8142:8148   */\n      dup5\n        /* \"#utility.yul\":8139:8228   */\n      iszero\n      tag_476\n      jumpi\n      pop\n        /* \"#utility.yul\":8194:8213   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":8188:8214   */\n      mload\n        /* \"#utility.yul\":8139:8228   */\n    tag_476:\n      not(0x00)\n        /* \"#utility.yul\":6943:6944   */\n      0x03\n        /* \"#utility.yul\":6939:6950   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":6935:6959   */\n      shr\n        /* \"#utility.yul\":6931:6960   */\n      not\n        /* \"#utility.yul\":6921:6961   */\n      and\n        /* \"#utility.yul\":6967:6968   */\n      0x01\n        /* \"#utility.yul\":6963:6974   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":6918:6975   */\n      or\n        /* \"#utility.yul\":8241:8322   */\n      dup6\n      sstore\n        /* \"#utility.yul\":7388:8332   */\n      jump(tag_171)\n        /* \"#utility.yul\":7418:8081   */\n    tag_475:\n        /* \"#utility.yul\":6212:6213   */\n      0x00\n        /* \"#utility.yul\":6205:6219   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":6249:6253   */\n      0x20\n        /* \"#utility.yul\":6236:6254   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":7454:7474   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":7572:7808   */\n    tag_479:\n        /* \"#utility.yul\":7586:7593   */\n      dup3\n        /* \"#utility.yul\":7583:7584   */\n      dup2\n        /* \"#utility.yul\":7580:7594   */\n      lt\n        /* \"#utility.yul\":7572:7808   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":7675:7694   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":7669:7695   */\n      mload\n        /* \"#utility.yul\":7654:7696   */\n      dup3\n      sstore\n        /* \"#utility.yul\":7767:7794   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":7735:7736   */\n      0x01\n        /* \"#utility.yul\":7723:7737   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":7602:7621   */\n      dup5\n      add\n        /* \"#utility.yul\":7572:7808   */\n      jump(tag_479)\n    tag_481:\n        /* \"#utility.yul\":7576:7579   */\n      pop\n        /* \"#utility.yul\":7836:7842   */\n      dup6\n        /* \"#utility.yul\":7827:7834   */\n      dup3\n        /* \"#utility.yul\":7824:7843   */\n      lt\n        /* \"#utility.yul\":7821:8022   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":7897:7916   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":7891:7917   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":7980:7981   */\n      0x03\n        /* \"#utility.yul\":7976:7990   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":7992:7995   */\n      0xf8\n        /* \"#utility.yul\":7972:7996   */\n      and\n        /* \"#utility.yul\":7968:8005   */\n      shr\n        /* \"#utility.yul\":7964:8006   */\n      not\n        /* \"#utility.yul\":7949:8007   */\n      and\n        /* \"#utility.yul\":7934:8008   */\n      dup2\n      sstore\n        /* \"#utility.yul\":7821:8022   */\n    tag_482:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8068:8069   */\n      0x01\n        /* \"#utility.yul\":8052:8066   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":8048:8070   */\n      add\n        /* \"#utility.yul\":8035:8071   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":6986:8338   */\n      jump\t// out\n        /* \"#utility.yul\":8692:8819   */\n    tag_396:\n        /* \"#utility.yul\":8753:8763   */\n      0x4e487b71\n        /* \"#utility.yul\":8748:8751   */\n      0xe0\n        /* \"#utility.yul\":8744:8764   */\n      shl\n        /* \"#utility.yul\":8741:8742   */\n      0x00\n        /* \"#utility.yul\":8734:8765   */\n      mstore\n        /* \"#utility.yul\":8784:8788   */\n      0x11\n        /* \"#utility.yul\":8781:8782   */\n      0x04\n        /* \"#utility.yul\":8774:8789   */\n      mstore\n        /* \"#utility.yul\":8808:8812   */\n      0x24\n        /* \"#utility.yul\":8805:8806   */\n      0x00\n        /* \"#utility.yul\":8798:8813   */\n      revert\n        /* \"#utility.yul\":8824:8952   */\n    tag_222:\n        /* \"#utility.yul\":8864:8867   */\n      0x00\n        /* \"#utility.yul\":8895:8896   */\n      dup3\n        /* \"#utility.yul\":8891:8897   */\n      not\n        /* \"#utility.yul\":8888:8889   */\n      dup3\n        /* \"#utility.yul\":8885:8898   */\n      gt\n        /* \"#utility.yul\":8882:8921   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":8901:8919   */\n      tag_487\n      tag_396\n      jump\t// in\n    tag_487:\n      pop\n        /* \"#utility.yul\":8937:8946   */\n      add\n      swap1\n        /* \"#utility.yul\":8824:8952   */\n      jump\t// out\n        /* \"#utility.yul\":9717:10947   */\n    tag_258:\n        /* \"#utility.yul\":9941:9944   */\n      0x00\n        /* \"#utility.yul\":9979:9985   */\n      dup5\n        /* \"#utility.yul\":9973:9986   */\n      mload\n        /* \"#utility.yul\":10005:10009   */\n      0x20\n        /* \"#utility.yul\":10018:10069   */\n      tag_491\n        /* \"#utility.yul\":10062:10068   */\n      dup3\n        /* \"#utility.yul\":10057:10060   */\n      dup6\n        /* \"#utility.yul\":10052:10054   */\n      dup4\n        /* \"#utility.yul\":10044:10050   */\n      dup11\n        /* \"#utility.yul\":10040:10055   */\n      add\n        /* \"#utility.yul\":10018:10069   */\n      tag_389\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":10132:10145   */\n      dup6\n      mload\n        /* \"#utility.yul\":10091:10107   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":10154:10209   */\n      tag_492\n        /* \"#utility.yul\":10132:10145   */\n      dup2\n        /* \"#utility.yul\":10091:10107   */\n      dup5\n        /* \"#utility.yul\":10176:10191   */\n      dup5\n      dup11\n      add\n        /* \"#utility.yul\":10154:10209   */\n      tag_389\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":10298:10311   */\n      dup6\n      sload\n        /* \"#utility.yul\":10231:10251   */\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":10271:10272   */\n      0x00\n      swap1\n        /* \"#utility.yul\":10336:10372   */\n      tag_493\n        /* \"#utility.yul\":10298:10311   */\n      dup2\n        /* \"#utility.yul\":10336:10372   */\n      tag_127\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":10391:10392   */\n      0x01\n        /* \"#utility.yul\":10408:10426   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":10435:10576   */\n      dup1\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":10590:10591   */\n      0x01\n        /* \"#utility.yul\":10585:10922   */\n      dup2\n      eq\n      tag_496\n      jumpi\n        /* \"#utility.yul\":10401:10922   */\n      jump(tag_494)\n        /* \"#utility.yul\":10435:10576   */\n    tag_495:\n      not(0xff)\n        /* \"#utility.yul\":10470:10494   */\n      dup5\n      and\n        /* \"#utility.yul\":10456:10495   */\n      dup8\n      mstore\n        /* \"#utility.yul\":10547:10563   */\n      dup3\n      iszero\n        /* \"#utility.yul\":10540:10564   */\n      iszero\n        /* \"#utility.yul\":10526:10565   */\n      dup4\n      mul\n        /* \"#utility.yul\":10515:10566   */\n      dup8\n      add\n      swap5\n      pop\n        /* \"#utility.yul\":10435:10576   */\n      jump(tag_494)\n        /* \"#utility.yul\":10585:10922   */\n    tag_496:\n        /* \"#utility.yul\":10616:10622   */\n      dup10\n        /* \"#utility.yul\":10613:10614   */\n      0x00\n        /* \"#utility.yul\":10606:10623   */\n      mstore\n        /* \"#utility.yul\":10664:10666   */\n      dup6\n        /* \"#utility.yul\":10661:10662   */\n      0x00\n        /* \"#utility.yul\":10651:10667   */\n      keccak256\n        /* \"#utility.yul\":10689:10690   */\n      0x00\n        /* \"#utility.yul\":10703:10872   */\n    tag_497:\n        /* \"#utility.yul\":10717:10725   */\n      dup5\n        /* \"#utility.yul\":10714:10715   */\n      dup2\n        /* \"#utility.yul\":10711:10726   */\n      lt\n        /* \"#utility.yul\":10703:10872   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":10799:10813   */\n      dup2\n      sload\n        /* \"#utility.yul\":10784:10797   */\n      dup10\n      dup3\n      add\n        /* \"#utility.yul\":10777:10814   */\n      mstore\n        /* \"#utility.yul\":10842:10858   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":10734:10744   */\n      dup8\n      add\n        /* \"#utility.yul\":10703:10872   */\n      jump(tag_497)\n    tag_499:\n        /* \"#utility.yul\":10707:10710   */\n      pop\n      pop\n        /* \"#utility.yul\":10903:10911   */\n      dup3\n        /* \"#utility.yul\":10896:10901   */\n      dup8\n        /* \"#utility.yul\":10892:10912   */\n      add\n        /* \"#utility.yul\":10885:10912   */\n      swap5\n      pop\n        /* \"#utility.yul\":10401:10922   */\n    tag_494:\n      pop\n        /* \"#utility.yul\":10938:10941   */\n      swap3\n      swap11\n        /* \"#utility.yul\":9717:10947   */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11359:11848   */\n    tag_322:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11628:11643   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11610:11644   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11680:11695   */\n      dup5\n      and\n        /* \"#utility.yul\":11675:11677   */\n      0x20\n        /* \"#utility.yul\":11660:11678   */\n      dup3\n      add\n        /* \"#utility.yul\":11653:11696   */\n      mstore\n        /* \"#utility.yul\":11727:11729   */\n      0x40\n        /* \"#utility.yul\":11712:11730   */\n      dup2\n      add\n        /* \"#utility.yul\":11705:11739   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11775:11778   */\n      0x80\n        /* \"#utility.yul\":11770:11772   */\n      0x60\n        /* \"#utility.yul\":11755:11773   */\n      dup3\n      add\n        /* \"#utility.yul\":11748:11779   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11553:11557   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11796:11842   */\n      tag_502\n      swap1\n        /* \"#utility.yul\":11822:11841   */\n      dup4\n      add\n        /* \"#utility.yul\":11814:11820   */\n      dup5\n        /* \"#utility.yul\":11796:11842   */\n      tag_390\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":11788:11842   */\n      swap7\n        /* \"#utility.yul\":11359:11848   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11853:12102   */\n    tag_325:\n        /* \"#utility.yul\":11922:11928   */\n      0x00\n        /* \"#utility.yul\":11975:11977   */\n      0x20\n        /* \"#utility.yul\":11963:11972   */\n      dup3\n        /* \"#utility.yul\":11954:11961   */\n      dup5\n        /* \"#utility.yul\":11950:11973   */\n      sub\n        /* \"#utility.yul\":11946:11978   */\n      slt\n        /* \"#utility.yul\":11943:11995   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":11991:11992   */\n      0x00\n        /* \"#utility.yul\":11988:11989   */\n      dup1\n        /* \"#utility.yul\":11981:11993   */\n      revert\n        /* \"#utility.yul\":11943:11995   */\n    tag_504:\n        /* \"#utility.yul\":12023:12032   */\n      dup2\n        /* \"#utility.yul\":12017:12033   */\n      mload\n        /* \"#utility.yul\":12042:12072   */\n      tag_254\n        /* \"#utility.yul\":12066:12071   */\n      dup2\n        /* \"#utility.yul\":12042:12072   */\n      tag_388\n      jump\t// in\n        /* \"#utility.yul\":12107:12242   */\n    tag_346:\n        /* \"#utility.yul\":12146:12149   */\n      0x00\n        /* \"#utility.yul\":12167:12184   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":12164:12207   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":12187:12205   */\n      tag_508\n      tag_396\n      jump\t// in\n    tag_508:\n      pop\n        /* \"#utility.yul\":12234:12235   */\n      0x01\n        /* \"#utility.yul\":12223:12236   */\n      add\n      swap1\n        /* \"#utility.yul\":12107:12242   */\n      jump\t// out\n        /* \"#utility.yul\":12247:12374   */\n    tag_397:\n        /* \"#utility.yul\":12308:12318   */\n      0x4e487b71\n        /* \"#utility.yul\":12303:12306   */\n      0xe0\n        /* \"#utility.yul\":12299:12319   */\n      shl\n        /* \"#utility.yul\":12296:12297   */\n      0x00\n        /* \"#utility.yul\":12289:12320   */\n      mstore\n        /* \"#utility.yul\":12339:12343   */\n      0x12\n        /* \"#utility.yul\":12336:12337   */\n      0x04\n        /* \"#utility.yul\":12329:12344   */\n      mstore\n        /* \"#utility.yul\":12363:12367   */\n      0x24\n        /* \"#utility.yul\":12360:12361   */\n      0x00\n        /* \"#utility.yul\":12353:12368   */\n      revert\n        /* \"#utility.yul\":12379:12499   */\n    tag_348:\n        /* \"#utility.yul\":12419:12420   */\n      0x00\n        /* \"#utility.yul\":12445:12446   */\n      dup3\n        /* \"#utility.yul\":12435:12470   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":12450:12468   */\n      tag_512\n      tag_397\n      jump\t// in\n    tag_512:\n      pop\n        /* \"#utility.yul\":12484:12493   */\n      div\n      swap1\n        /* \"#utility.yul\":12379:12499   */\n      jump\t// out\n        /* \"#utility.yul\":12504:12629   */\n    tag_356:\n        /* \"#utility.yul\":12544:12548   */\n      0x00\n        /* \"#utility.yul\":12572:12573   */\n      dup3\n        /* \"#utility.yul\":12569:12570   */\n      dup3\n        /* \"#utility.yul\":12566:12574   */\n      lt\n        /* \"#utility.yul\":12563:12597   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":12577:12595   */\n      tag_515\n      tag_396\n      jump\t// in\n    tag_515:\n      pop\n        /* \"#utility.yul\":12614:12623   */\n      sub\n      swap1\n        /* \"#utility.yul\":12504:12629   */\n      jump\t// out\n        /* \"#utility.yul\":12634:12746   */\n    tag_358:\n        /* \"#utility.yul\":12666:12667   */\n      0x00\n        /* \"#utility.yul\":12692:12693   */\n      dup3\n        /* \"#utility.yul\":12682:12717   */\n      tag_518\n      jumpi\n        /* \"#utility.yul\":12697:12715   */\n      tag_518\n      tag_397\n      jump\t// in\n    tag_518:\n      pop\n        /* \"#utility.yul\":12731:12740   */\n      mod\n      swap1\n        /* \"#utility.yul\":12634:12746   */\n      jump\t// out\n        /* \"#utility.yul\":12751:12878   */\n    tag_362:\n        /* \"#utility.yul\":12812:12822   */\n      0x4e487b71\n        /* \"#utility.yul\":12807:12810   */\n      0xe0\n        /* \"#utility.yul\":12803:12823   */\n      shl\n        /* \"#utility.yul\":12800:12801   */\n      0x00\n        /* \"#utility.yul\":12793:12824   */\n      mstore\n        /* \"#utility.yul\":12843:12847   */\n      0x32\n        /* \"#utility.yul\":12840:12841   */\n      0x04\n        /* \"#utility.yul\":12833:12848   */\n      mstore\n        /* \"#utility.yul\":12867:12871   */\n      0x24\n        /* \"#utility.yul\":12864:12865   */\n      0x00\n        /* \"#utility.yul\":12857:12872   */\n      revert\n\n    auxdata: 0xa264697066735822122017b24cd57cc0d80b8a4d1238e766085b31502aed053164d5211b96e172f6e6ae64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_404": {
									"entryPoint": null,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_714": {
									"entryPoint": null,
									"id": 714,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfers_2201": {
									"entryPoint": null,
									"id": 2201,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_beforeTokenTransfers_2188": {
									"entryPoint": null,
									"id": 2188,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_beforeTokenTransfers_557": {
									"entryPoint": 1456,
									"id": 557,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2085": {
									"entryPoint": 1212,
									"id": 2085,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_extraData_2175": {
									"entryPoint": null,
									"id": 2175,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1577": {
									"entryPoint": 970,
									"id": 1577,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_2211": {
									"entryPoint": null,
									"id": 2211,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2162": {
									"entryPoint": null,
									"id": 2162,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_1185": {
									"entryPoint": null,
									"id": 1185,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_1083": {
									"entryPoint": null,
									"id": 1083,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_safeMint_1401": {
									"entryPoint": 817,
									"id": 1401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_1463": {
									"entryPoint": 851,
									"id": 1463,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_startTokenId_582": {
									"entryPoint": null,
									"id": 582,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 246,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isMinter_535": {
									"entryPoint": null,
									"id": 535,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeMint_523": {
									"entryPoint": 597,
									"id": 523,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setAllowMinter_427": {
									"entryPoint": 425,
									"id": 427,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseURI_448": {
									"entryPoint": 328,
									"id": 448,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@totalSupply_748": {
									"entryPoint": null,
									"id": 748,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 1896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_address_fromMemory": {
									"entryPoint": 1925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2169,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1674c41eb6a9ac78253fcbf95cc0d71c5cdee9bff21d93fc58259b4842cfce65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fd3705cdcadbc4af957cb58f6277702ac5d4695fc8a6c35b8a695f8136ab44ac__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 1849,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6589:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:10"
															},
															"nodeType": "YulIf",
															"src": "289:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:10"
															},
															"nodeType": "YulIf",
															"src": "359:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:10",
														"type": ""
													}
												],
												"src": "146:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:10",
														"type": ""
													}
												],
												"src": "531:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:10",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:10"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:10"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:10"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:10"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:10"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:10",
																			"statements": []
																		},
																		"src": "1104:82:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:10"
															},
															"nodeType": "YulIf",
															"src": "748:448:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:10",
														"type": ""
													}
												],
												"src": "657:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:10",
														"type": ""
													}
												],
												"src": "1207:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:10"
															},
															"nodeType": "YulIf",
															"src": "1517:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:10",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:10"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:10",
																					"statements": []
																				},
																				"src": "1964:236:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:10"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:10"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:10",
														"type": ""
													}
												],
												"src": "1378:1352:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2788:205:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2798:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2807:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2802:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2867:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2892:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2897:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2888:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2888:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2911:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2916:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2907:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2907:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2901:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2901:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2881:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2881:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2881:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2828:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2831:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2825:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2825:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2839:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2841:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2850:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2853:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2846:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2846:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2841:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2821:3:10",
																"statements": []
															},
															"src": "2817:113:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2956:31:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2969:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2974:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2965:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2965:16:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2983:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2958:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2958:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2958:27:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2945:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2948:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2942:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2942:13:10"
															},
															"nodeType": "YulIf",
															"src": "2939:48:10"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2766:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2771:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2776:6:10",
														"type": ""
													}
												],
												"src": "2735:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3058:117:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3068:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3083:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3077:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3077:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3068:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3153:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3162:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3165:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3155:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3155:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3155:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3112:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3123:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3138:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3143:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "3134:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3134:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3147:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "3130:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3130:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3119:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3119:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3109:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3109:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3102:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3102:50:10"
															},
															"nodeType": "YulIf",
															"src": "3099:70:10"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3037:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3048:5:10",
														"type": ""
													}
												],
												"src": "2998:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3288:869:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3334:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3343:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3346:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3336:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3336:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3336:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3309:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3318:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3305:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3305:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3330:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3301:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3301:32:10"
															},
															"nodeType": "YulIf",
															"src": "3298:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3359:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3379:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3373:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3373:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3363:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3398:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3416:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3420:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3412:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3412:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3424:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3408:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3408:18:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3402:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3453:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3462:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3465:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3455:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3455:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3455:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3441:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3449:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3438:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3438:14:10"
															},
															"nodeType": "YulIf",
															"src": "3435:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3478:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3492:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3503:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3488:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3482:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3558:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3567:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3570:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3560:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3560:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3560:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3537:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3541:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3533:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3533:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3548:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3522:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3522:35:10"
															},
															"nodeType": "YulIf",
															"src": "3519:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3583:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3599:2:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3593:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3593:9:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3587:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3625:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3627:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3627:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3627:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "3617:2:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3621:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3614:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3614:10:10"
															},
															"nodeType": "YulIf",
															"src": "3611:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3656:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3666:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:7:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "3660:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3682:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3702:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3696:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3686:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3714:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3736:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "3760:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3764:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3756:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3756:13:10"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "3771:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3752:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3752:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3776:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3748:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3748:31:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "3781:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3744:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3744:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3732:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3732:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3718:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3844:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3846:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3846:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3846:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3803:10:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3815:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3800:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3800:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3823:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3835:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3820:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3820:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3797:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:46:10"
															},
															"nodeType": "YulIf",
															"src": "3794:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3882:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3886:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3875:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3875:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3875:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3913:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "3921:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3906:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3906:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3906:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3972:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3981:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3984:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3974:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3974:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3974:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3947:2:10"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "3951:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3943:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3943:11:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3956:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3939:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3939:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3963:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3936:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3936:35:10"
															},
															"nodeType": "YulIf",
															"src": "3933:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4023:2:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4019:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4019:13:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4038:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4046:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4034:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4034:17:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4053:2:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3997:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3997:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3997:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4065:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4075:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4065:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4090:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4134:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4145:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4130:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4130:20:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4100:29:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4100:51:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4090:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3246:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3257:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3269:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3277:6:10",
														"type": ""
													}
												],
												"src": "3180:977:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4336:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4353:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4364:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4346:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4346:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4346:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4387:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4398:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4383:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4383:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4403:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4376:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4376:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4376:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4426:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4437:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4422:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4422:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4442:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4415:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4415:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4415:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4486:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4498:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4509:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4494:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4494:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4486:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4313:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4327:4:10",
														"type": ""
													}
												],
												"src": "4162:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4618:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4628:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4640:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4651:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4636:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4636:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4628:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4670:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4695:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4688:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4688:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4681:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4681:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4663:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4663:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4587:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4598:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4609:4:10",
														"type": ""
													}
												],
												"src": "4523:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4889:170:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4906:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4917:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4899:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4899:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4899:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4940:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4951:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4956:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4929:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4929:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4929:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4979:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4990:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4975:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4975:18:10"
																	},
																	{
																		"hexValue": "596f7520617265206e6f742061206d696e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4995:22:10",
																		"type": "",
																		"value": "You are not a minter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4968:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4968:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5027:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5039:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5050:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5035:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5035:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5027:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1674c41eb6a9ac78253fcbf95cc0d71c5cdee9bff21d93fc58259b4842cfce65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4866:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4880:4:10",
														"type": ""
													}
												],
												"src": "4715:344:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:177:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5147:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5168:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5175:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5180:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5171:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5171:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5161:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5161:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5161:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5212:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5215:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5205:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5205:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5205:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5240:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5243:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5233:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5233:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5233:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5128:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5135:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5131:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5131:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5125:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5125:13:10"
															},
															"nodeType": "YulIf",
															"src": "5122:136:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5267:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5278:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5281:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5274:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5274:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5095:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5098:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5104:3:10",
														"type": ""
													}
												],
												"src": "5064:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5468:165:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5485:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5496:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5478:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5478:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5478:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5519:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5530:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5515:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5515:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5535:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5508:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5508:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5508:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5558:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5569:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5554:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5554:18:10"
																	},
																	{
																		"hexValue": "4f766572206d617820737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5574:17:10",
																		"type": "",
																		"value": "Over max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5547:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5547:45:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5601:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5613:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5624:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5609:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5601:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fd3705cdcadbc4af957cb58f6277702ac5d4695fc8a6c35b8a695f8136ab44ac__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5445:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5459:4:10",
														"type": ""
													}
												],
												"src": "5294:339:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5841:451:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5851:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5869:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5874:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5865:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5865:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5878:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5861:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5861:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5855:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5896:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5911:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5919:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5907:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5907:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5889:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5889:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5889:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5954:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5939:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5939:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5963:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5971:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5959:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5959:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5932:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5932:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5932:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5995:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6006:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5991:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5991:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6011:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5984:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5984:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5984:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6038:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6049:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6034:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6034:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6054:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6027:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6027:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6027:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6067:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6087:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6081:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6081:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6071:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6114:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6125:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6110:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6110:19:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6131:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6103:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6103:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6103:35:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "6173:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6181:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6169:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6169:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6190:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6201:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:19:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6207:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6147:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6147:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6147:67:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6223:63:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6239:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6258:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6266:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6254:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6254:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6275:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6271:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6271:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6250:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6250:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6235:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6235:45:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6282:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6231:55:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6223:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5786:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5797:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5805:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5813:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5821:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5832:4:10",
														"type": ""
													}
												],
												"src": "5638:654:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6377:210:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6423:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6435:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6425:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6425:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6425:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6398:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6407:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6394:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6394:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6419:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6390:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6390:32:10"
															},
															"nodeType": "YulIf",
															"src": "6387:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6448:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6467:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6461:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6461:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6452:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6541:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6550:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6553:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6543:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6543:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6543:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6499:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6510:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6521:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6526:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6517:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6517:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6506:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6506:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6496:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6496:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6489:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6489:51:10"
															},
															"nodeType": "YulIf",
															"src": "6486:71:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6566:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6576:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6566:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6343:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6354:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6366:6:10",
														"type": ""
													}
												],
												"src": "6297:290:10"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 0x20), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory(add(_2, 0x20), add(memPtr, 0x20), _3)\n        value0 := memPtr\n        value1 := abi_decode_address_fromMemory(add(headStart, 0x20))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_1674c41eb6a9ac78253fcbf95cc0d71c5cdee9bff21d93fc58259b4842cfce65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"You are not a minter\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fd3705cdcadbc4af957cb58f6277702ac5d4695fc8a6c35b8a695f8136ab44ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Over max supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        let length := mload(value3)\n        mstore(add(headStart, 128), length)\n        copy_memory_to_memory(add(value3, 32), add(headStart, 160), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 160)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040526005608090815264173539b7b760d91b60a052600b906200002690826200066d565b503480156200003457600080fd5b506040516200218338038062002183833981016040819052620000579162000785565b604051806040016040528060098152602001684e414741204b49445360b81b815250604051806040016040528060048152602001634e41474b60e01b8152508160029081620000a791906200066d565b506003620000b682826200066d565b5050600160005550620000c933620000f6565b620000d48262000148565b620000e1336001620001a9565b620000ee81606f62000255565b505062000902565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6008546001600160a01b03163314620001975760405162461bcd60e51b815260206004820181905260248201526000805160206200216383398151915260448201526064015b60405180910390fd5b600a620001a582826200066d565b5050565b6008546001600160a01b03163314620001f45760405162461bcd60e51b815260206004820181905260248201526000805160206200216383398151915260448201526064016200018e565b6001600160a01b038216600081815260096020908152604091829020805460ff1916851515908117909155915191825233917f3c49a0d2dcd603245c20eb1985825d770748295cd570de6d24861080451bbd41910160405180910390a35050565b3360008181526009602052604090205460ff16620002b65760405162461bcd60e51b815260206004820152601460248201527f596f7520617265206e6f742061206d696e74657200000000000000000000000060448201526064016200018e565b6000620002cc6001546000546000199190030190565b9050610457620002dd848362000852565b11156200031f5760405162461bcd60e51b815260206004820152600f60248201526e4f766572206d617820737570706c7960881b60448201526064016200018e565b6200032b848462000331565b50505050565b620001a58282604051806020016040528060008152506200035360201b60201c565b6200035f8383620003ca565b6001600160a01b0383163b15620003c5576000548281035b60018101906200038d90600090879086620004bc565b620003ab576040516368d2bf6b60e11b815260040160405180910390fd5b81811062000377578160005414620003c257600080fd5b50505b505050565b6000546001600160a01b038316620003f457604051622e076360e81b815260040160405180910390fd5b81600003620004165760405163b562e8dd60e01b815260040160405180910390fd5b620004256000848385620005b0565b6001600160a01b038316600081815260056020526040902080546801000000000000000185020190554260a01b6001841460e11b1717600082815260046020526040902055808281015b6040516001830192906001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48082106200046f5760005550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290620004f390339089908890889060040162000879565b6020604051808303816000875af192505050801562000531575060408051601f3d908101601f191682019092526200052e91810190620008cf565b60015b62000593573d80801562000562576040519150601f19603f3d011682016040523d82523d6000602084013e62000567565b606091505b5080516000036200058b576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6200032b848484846200032b60201b620009091760201c565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620005f457607f821691505b6020821081036200061557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003c557600081815260208120601f850160051c81016020861015620006445750805b601f850160051c820191505b81811015620006655782815560010162000650565b505050505050565b81516001600160401b03811115620006895762000689620005c9565b620006a1816200069a8454620005df565b846200061b565b602080601f831160018114620006d95760008415620006c05750858301515b600019600386901b1c1916600185901b17855562000665565b600085815260208120601f198616915b828110156200070a57888601518255948401946001909101908401620006e9565b5085821015620007295787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60005b83811015620007565781810151838201526020016200073c565b838111156200032b5750506000910152565b80516001600160a01b03811681146200078057600080fd5b919050565b600080604083850312156200079957600080fd5b82516001600160401b0380821115620007b157600080fd5b818501915085601f830112620007c657600080fd5b815181811115620007db57620007db620005c9565b604051601f8201601f19908116603f01168101908382118183101715620008065762000806620005c9565b816040528281528860208487010111156200082057600080fd5b6200083383602083016020880162000739565b8096505050505050620008496020840162000768565b90509250929050565b600082198211156200087457634e487b7160e01b600052601160045260246000fd5b500190565b600060018060a01b038087168352808616602084015250836040830152608060608301528251806080840152620008b88160a085016020870162000739565b601f01601f19169190910160a00195945050505050565b600060208284031215620008e257600080fd5b81516001600160e01b031981168114620008fb57600080fd5b9392505050565b61185180620009126000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063b88d4fde1161007c578063b88d4fde146102ec578063c6682862146102ff578063c87b56dd14610307578063d5abeb011461031a578063e985e9c514610323578063f2fde38b1461035f57600080fd5b8063715018a6146102795780638da5cb5b1461028157806395d89b4114610292578063a14481941461029a578063a22cb465146102ad578063aa271e1a146102c057600080fd5b80633c713026116101155780633c7130261461020757806342842e0e1461021a57806342966c681461022d57806355f804b3146102405780636352211e1461025357806370a082311461026657600080fd5b806301ffc9a71461015d57806306fdde0314610185578063081812fc1461019a578063095ea7b3146101c557806318160ddd146101da57806323b872dd146101f4575b600080fd5b61017061016b3660046111fc565b610372565b60405190151581526020015b60405180910390f35b61018d610383565b60405161017c9190611271565b6101ad6101a8366004611284565b610415565b6040516001600160a01b03909116815260200161017c565b6101d86101d33660046112b9565b610459565b005b60015460005403600019015b60405190815260200161017c565b6101d86102023660046112e3565b6104f9565b6101d861021536600461131f565b6106a9565b6101d86102283660046112e3565b61073e565b6101d861023b366004611284565b61075e565b6101d861024e3660046113e7565b61076c565b6101ad610261366004611284565b6107a6565b6101e6610274366004611430565b6107b1565b6101d8610800565b6008546001600160a01b03166101ad565b61018d610836565b6101d86102a83660046112b9565b610845565b6101d86102bb36600461131f565b61090f565b6101706102ce366004611430565b6001600160a01b031660009081526009602052604090205460ff1690565b6101d86102fa36600461144b565b61099d565b61018d6109e1565b61018d610315366004611284565b610a6f565b6101e661045781565b6101706103313660046114c7565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6101d861036d366004611430565b610b3d565b600061037d82610bd5565b92915050565b606060028054610392906114fa565b80601f01602080910402602001604051908101604052809291908181526020018280546103be906114fa565b801561040b5780601f106103e05761010080835404028352916020019161040b565b820191906000526020600020905b8154815290600101906020018083116103ee57829003601f168201915b5050505050905090565b600061042082610c23565b61043d576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610464826107a6565b9050336001600160a01b0382161461049d576104808133610331565b61049d576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061050482610c58565b9050836001600160a01b0316816001600160a01b0316146105375760405162a1148160e81b815260040160405180910390fd5b600082815260066020526040902080546105638187335b6001600160a01b039081169116811491141790565b61058e576105718633610331565b61058e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166105b557604051633a954ecd60e21b815260040160405180910390fd5b6105c28686866001610cc7565b80156105cd57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b8416900361065f5760018401600081815260046020526040812054900361065d57600054811461065d5760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b6008546001600160a01b031633146106dc5760405162461bcd60e51b81526004016106d390611534565b60405180910390fd5b6001600160a01b038216600081815260096020908152604091829020805460ff1916851515908117909155915191825233917f3c49a0d2dcd603245c20eb1985825d770748295cd570de6d24861080451bbd4191015b60405180910390a35050565b6107598383836040518060200160405280600081525061099d565b505050565b610769816001610ccc565b50565b6008546001600160a01b031633146107965760405162461bcd60e51b81526004016106d390611534565b600a6107a282826115af565b5050565b600061037d82610c58565b60006001600160a01b0382166107da576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6008546001600160a01b0316331461082a5760405162461bcd60e51b81526004016106d390611534565b6108346000610e24565b565b606060038054610392906114fa565b3360008181526009602052604090205460ff1661089b5760405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932903737ba10309036b4b73a32b960611b60448201526064016106d3565b60006108b06001546000546000199190030190565b90506104576108bf8483611685565b11156108ff5760405162461bcd60e51b815260206004820152600f60248201526e4f766572206d617820737570706c7960881b60448201526064016106d3565b6109098484610e76565b50505050565b336001600160a01b038316036109385760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101610732565b6109a88484846104f9565b6001600160a01b0383163b15610909576109c484848484610e90565b610909576040516368d2bf6b60e11b815260040160405180910390fd5b600b80546109ee906114fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1a906114fa565b8015610a675780601f10610a3c57610100808354040283529160200191610a67565b820191906000526020600020905b815481529060010190602001808311610a4a57829003601f168201915b505050505081565b6060610a7a82610c23565b610ade5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016106d3565b6000610ae8610f7c565b90506000815111610b085760405180602001604052806000815250610b36565b80610b1284610f8b565b600b604051602001610b269392919061169d565b6040516020818303038152906040525b9392505050565b6008546001600160a01b03163314610b675760405162461bcd60e51b81526004016106d390611534565b6001600160a01b038116610bcc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106d3565b61076981610e24565b60006301ffc9a760e01b6001600160e01b031983161480610c0657506380ac58cd60e01b6001600160e01b03198316145b8061037d5750506001600160e01b031916635b5e139f60e01b1490565b600081600111158015610c37575060005482105b801561037d575050600090815260046020526040902054600160e01b161590565b60008180600111610cae57600054811015610cae5760008181526004602052604081205490600160e01b82169003610cac575b80600003610b36575060001901600081815260046020526040902054610c8b565b505b604051636f96cda160e11b815260040160405180910390fd5b610909565b6000610cd783610c58565b905080600080610cf586600090815260066020526040902080549091565b915091508415610d3557610d0a81843361054e565b610d3557610d188333610331565b610d3557604051632ce44b5f60e11b815260040160405180910390fd5b610d43836000886001610cc7565b8015610d4e57600082555b6001600160a01b038316600081815260056020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b17600087815260046020526040812091909155600160e11b85169003610ddc57600186016000818152600460205260408120549003610dda576000548114610dda5760008181526004602052604090208590555b505b60405186906000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050600180548101905550505050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6107a282826040518060200160405280600081525061108c565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610ec590339089908890889060040161173d565b6020604051808303816000875af1925050508015610f00575060408051601f3d908101601f19168201909252610efd9181019061177a565b60015b610f5e573d808015610f2e576040519150601f19603f3d011682016040523d82523d6000602084013e610f33565b606091505b508051600003610f56576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600a8054610392906114fa565b606081600003610fb25750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610fdc5780610fc681611797565b9150610fd59050600a836117c6565b9150610fb6565b60008167ffffffffffffffff811115610ff757610ff761135b565b6040519080825280601f01601f191660200182016040528015611021576020820181803683370190505b5090505b8415610f74576110366001836117da565b9150611043600a866117f1565b61104e906030611685565b60f81b81838151811061106357611063611805565b60200101906001600160f81b031916908160001a905350611085600a866117c6565b9450611025565b61109683836110f9565b6001600160a01b0383163b15610759576000548281035b6110c06000868380600101945086610e90565b6110dd576040516368d2bf6b60e11b815260040160405180910390fd5b8181106110ad5781600054146110f257600080fd5b5050505050565b6000546001600160a01b03831661112257604051622e076360e81b815260040160405180910390fd5b816000036111435760405163b562e8dd60e01b815260040160405180910390fd5b6111506000848385610cc7565b6001600160a01b038316600081815260056020526040902080546801000000000000000185020190554260a01b6001841460e11b1717600082815260046020526040902055808281015b6040516001830192906001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480821061119a5760005550505050565b6001600160e01b03198116811461076957600080fd5b60006020828403121561120e57600080fd5b8135610b36816111e6565b60005b8381101561123457818101518382015260200161121c565b838111156109095750506000910152565b6000815180845261125d816020860160208601611219565b601f01601f19169290920160200192915050565b602081526000610b366020830184611245565b60006020828403121561129657600080fd5b5035919050565b80356001600160a01b03811681146112b457600080fd5b919050565b600080604083850312156112cc57600080fd5b6112d58361129d565b946020939093013593505050565b6000806000606084860312156112f857600080fd5b6113018461129d565b925061130f6020850161129d565b9150604084013590509250925092565b6000806040838503121561133257600080fd5b61133b8361129d565b91506020830135801515811461135057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561138c5761138c61135b565b604051601f8501601f19908116603f011681019082821181831017156113b4576113b461135b565b816040528093508581528686860111156113cd57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156113f957600080fd5b813567ffffffffffffffff81111561141057600080fd5b8201601f8101841361142157600080fd5b610f7484823560208401611371565b60006020828403121561144257600080fd5b610b368261129d565b6000806000806080858703121561146157600080fd5b61146a8561129d565b93506114786020860161129d565b925060408501359150606085013567ffffffffffffffff81111561149b57600080fd5b8501601f810187136114ac57600080fd5b6114bb87823560208401611371565b91505092959194509250565b600080604083850312156114da57600080fd5b6114e38361129d565b91506114f16020840161129d565b90509250929050565b600181811c9082168061150e57607f821691505b60208210810361152e57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b601f82111561075957600081815260208120601f850160051c810160208610156115905750805b601f850160051c820191505b818110156106a15782815560010161159c565b815167ffffffffffffffff8111156115c9576115c961135b565b6115dd816115d784546114fa565b84611569565b602080601f83116001811461161257600084156115fa5750858301515b600019600386901b1c1916600185901b1785556106a1565b600085815260208120601f198616915b8281101561164157888601518255948401946001909101908401611622565b508582101561165f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600082198211156116985761169861166f565b500190565b6000845160206116b08285838a01611219565b8551918401916116c38184848a01611219565b85549201916000906116d4816114fa565b600182811680156116ec57600181146117015761172d565b60ff198416875282151583028701945061172d565b896000528560002060005b848110156117255781548982015290830190870161170c565b505082870194505b50929a9950505050505050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061177090830184611245565b9695505050505050565b60006020828403121561178c57600080fd5b8151610b36816111e6565b6000600182016117a9576117a961166f565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826117d5576117d56117b0565b500490565b6000828210156117ec576117ec61166f565b500390565b600082611800576118006117b0565b500690565b634e487b7160e01b600052603260045260246000fdfea264697066735822122017b24cd57cc0d80b8a4d1238e766085b31502aed053164d5211b96e172f6e6ae64736f6c634300080f00334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH5 0x173539B7B7 PUSH1 0xD9 SHL PUSH1 0xA0 MSTORE PUSH1 0xB SWAP1 PUSH3 0x26 SWAP1 DUP3 PUSH3 0x66D JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2183 CODESIZE SUB DUP1 PUSH3 0x2183 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x57 SWAP2 PUSH3 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x4E414741204B494453 PUSH1 0xB8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x4E41474B PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xA7 SWAP2 SWAP1 PUSH3 0x66D JUMP JUMPDEST POP PUSH1 0x3 PUSH3 0xB6 DUP3 DUP3 PUSH3 0x66D JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP PUSH3 0xC9 CALLER PUSH3 0xF6 JUMP JUMPDEST PUSH3 0xD4 DUP3 PUSH3 0x148 JUMP JUMPDEST PUSH3 0xE1 CALLER PUSH1 0x1 PUSH3 0x1A9 JUMP JUMPDEST PUSH3 0xEE DUP2 PUSH1 0x6F PUSH3 0x255 JUMP JUMPDEST POP POP PUSH3 0x902 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x197 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2163 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH3 0x1A5 DUP3 DUP3 PUSH3 0x66D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x1F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2163 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x18E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE CALLER SWAP2 PUSH32 0x3C49A0D2DCD603245C20EB1985825D770748295CD570DE6D24861080451BBD41 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x2B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F742061206D696E746572000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x18E JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2CC PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x0 NOT SWAP2 SWAP1 SUB ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x457 PUSH3 0x2DD DUP5 DUP4 PUSH3 0x852 JUMP JUMPDEST GT ISZERO PUSH3 0x31F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4F766572206D617820737570706C79 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x18E JUMP JUMPDEST PUSH3 0x32B DUP5 DUP5 PUSH3 0x331 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH3 0x1A5 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x353 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x35F DUP4 DUP4 PUSH3 0x3CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH3 0x3C5 JUMPI PUSH1 0x0 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 PUSH3 0x38D SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP7 PUSH3 0x4BC JUMP JUMPDEST PUSH3 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH3 0x377 JUMPI DUP2 PUSH1 0x0 SLOAD EQ PUSH3 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 SUB PUSH3 0x416 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB562E8DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x425 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH3 0x5B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP6 MUL ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL PUSH1 0x1 DUP5 EQ PUSH1 0xE1 SHL OR OR PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP1 DUP3 DUP2 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP4 ADD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 DUP1 DUP3 LT PUSH3 0x46F JUMPI PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH3 0x4F3 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0x879 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x531 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH3 0x52E SWAP2 DUP2 ADD SWAP1 PUSH3 0x8CF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x593 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH3 0x562 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x567 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH3 0x58B JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH3 0x32B DUP5 DUP5 DUP5 DUP5 PUSH3 0x32B PUSH1 0x20 SHL PUSH3 0x909 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x5F4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x615 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3C5 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x644 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x665 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x650 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x689 JUMPI PUSH3 0x689 PUSH3 0x5C9 JUMP JUMPDEST PUSH3 0x6A1 DUP2 PUSH3 0x69A DUP5 SLOAD PUSH3 0x5DF JUMP JUMPDEST DUP5 PUSH3 0x61B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6D9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6C0 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x665 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x70A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x6E9 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x729 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x756 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x73C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x32B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x7DB JUMPI PUSH3 0x7DB PUSH3 0x5C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x806 JUMPI PUSH3 0x806 PUSH3 0x5C9 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x820 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x833 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x739 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP PUSH3 0x849 PUSH1 0x20 DUP5 ADD PUSH3 0x768 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x874 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE DUP3 MLOAD DUP1 PUSH1 0x80 DUP5 ADD MSTORE PUSH3 0x8B8 DUP2 PUSH1 0xA0 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x739 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0xA0 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x8E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH3 0x8FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1851 DUP1 PUSH3 0x912 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xC6682862 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xA1448194 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C713026 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x3C713026 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x459 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x75E JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x800 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x18D PUSH2 0x836 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x845 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x144B JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST PUSH2 0x18D PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x457 DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37D DUP3 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x392 SWAP1 PUSH2 0x14FA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3BE SWAP1 PUSH2 0x14FA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x40B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x40B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x420 DUP3 PUSH2 0xC23 JUMP JUMPDEST PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x464 DUP3 PUSH2 0x7A6 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x49D JUMPI PUSH2 0x480 DUP2 CALLER PUSH2 0x331 JUMP JUMPDEST PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x504 DUP3 PUSH2 0xC58 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x537 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x563 DUP2 DUP8 CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP2 EQ SWAP2 EQ OR SWAP1 JUMP JUMPDEST PUSH2 0x58E JUMPI PUSH2 0x571 DUP7 CALLER PUSH2 0x331 JUMP JUMPDEST PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C2 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xCC7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x65F JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x65D JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x65D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE CALLER SWAP2 PUSH32 0x3C49A0D2DCD603245C20EB1985825D770748295CD570DE6D24861080451BBD41 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x759 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x99D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x769 DUP2 PUSH1 0x1 PUSH2 0xCCC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0xA PUSH2 0x7A2 DUP3 DUP3 PUSH2 0x15AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37D DUP3 PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7DA JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x834 PUSH1 0x0 PUSH2 0xE24 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x392 SWAP1 PUSH2 0x14FA JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2CB7BA9030B932903737BA10309036B4B73A32B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B0 PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x0 NOT SWAP2 SWAP1 SUB ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x457 PUSH2 0x8BF DUP5 DUP4 PUSH2 0x1685 JUMP JUMPDEST GT ISZERO PUSH2 0x8FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4F766572206D617820737570706C79 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x909 DUP5 DUP5 PUSH2 0xE76 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06307DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH2 0x732 JUMP JUMPDEST PUSH2 0x9A8 DUP5 DUP5 DUP5 PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x909 JUMPI PUSH2 0x9C4 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x9EE SWAP1 PUSH2 0x14FA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA1A SWAP1 PUSH2 0x14FA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA67 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA3C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA67 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA4A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA7A DUP3 PUSH2 0xC23 JUMP JUMPDEST PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE8 PUSH2 0xF7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB36 JUMP JUMPDEST DUP1 PUSH2 0xB12 DUP5 PUSH2 0xF8B JUMP JUMPDEST PUSH1 0xB PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB26 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x169D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x769 DUP2 PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0xC06 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x37D JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0xC37 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0x37D JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x1 GT PUSH2 0xCAE JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xCAE JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0xCAC JUMPI JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0xB36 JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC8B JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x909 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD7 DUP4 PUSH2 0xC58 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0xCF5 DUP7 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD0A DUP2 DUP5 CALLER PUSH2 0x54E JUMP JUMPDEST PUSH2 0xD35 JUMPI PUSH2 0xD18 DUP4 CALLER PUSH2 0x331 JUMP JUMPDEST PUSH2 0xD35 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD43 DUP4 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH2 0xCC7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD4E JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x3 PUSH1 0xE0 SHL OR PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP6 AND SWAP1 SUB PUSH2 0xDDC JUMPI PUSH1 0x1 DUP7 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xDDA JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0xDDA JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP7 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x7A2 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x108C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xEC5 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x173D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF00 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEFD SWAP2 DUP2 ADD SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF5E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xF56 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0x392 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xFB2 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xFDC JUMPI DUP1 PUSH2 0xFC6 DUP2 PUSH2 0x1797 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD5 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x17C6 JUMP JUMPDEST SWAP2 POP PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF7 JUMPI PUSH2 0xFF7 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1021 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xF74 JUMPI PUSH2 0x1036 PUSH1 0x1 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1043 PUSH1 0xA DUP7 PUSH2 0x17F1 JUMP JUMPDEST PUSH2 0x104E SWAP1 PUSH1 0x30 PUSH2 0x1685 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1063 JUMPI PUSH2 0x1063 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1085 PUSH1 0xA DUP7 PUSH2 0x17C6 JUMP JUMPDEST SWAP5 POP PUSH2 0x1025 JUMP JUMPDEST PUSH2 0x1096 DUP4 DUP4 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0x10C0 PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x10DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x10AD JUMPI DUP2 PUSH1 0x0 SLOAD EQ PUSH2 0x10F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1122 JUMPI PUSH1 0x40 MLOAD PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x1143 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB562E8DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1150 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP6 MUL ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL PUSH1 0x1 DUP5 EQ PUSH1 0xE1 SHL OR OR PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP1 DUP3 DUP2 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP4 ADD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 DUP1 DUP3 LT PUSH2 0x119A JUMPI PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB36 DUP2 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1234 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x121C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x909 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x125D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB36 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D5 DUP4 PUSH2 0x129D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1301 DUP5 PUSH2 0x129D JUMP JUMPDEST SWAP3 POP PUSH2 0x130F PUSH1 0x20 DUP6 ADD PUSH2 0x129D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133B DUP4 PUSH2 0x129D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x138C JUMPI PUSH2 0x138C PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13B4 JUMPI PUSH2 0x13B4 PUSH2 0x135B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x13CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF74 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB36 DUP3 PUSH2 0x129D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x146A DUP6 PUSH2 0x129D JUMP JUMPDEST SWAP4 POP PUSH2 0x1478 PUSH1 0x20 DUP7 ADD PUSH2 0x129D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x149B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x14AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14BB DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1371 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E3 DUP4 PUSH2 0x129D JUMP JUMPDEST SWAP2 POP PUSH2 0x14F1 PUSH1 0x20 DUP5 ADD PUSH2 0x129D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x150E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x152E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1590 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6A1 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x159C JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15C9 JUMPI PUSH2 0x15C9 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x15DD DUP2 PUSH2 0x15D7 DUP5 SLOAD PUSH2 0x14FA JUMP JUMPDEST DUP5 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1612 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x15FA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1641 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1622 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x165F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1698 JUMPI PUSH2 0x1698 PUSH2 0x166F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 PUSH2 0x16B0 DUP3 DUP6 DUP4 DUP11 ADD PUSH2 0x1219 JUMP JUMPDEST DUP6 MLOAD SWAP2 DUP5 ADD SWAP2 PUSH2 0x16C3 DUP2 DUP5 DUP5 DUP11 ADD PUSH2 0x1219 JUMP JUMPDEST DUP6 SLOAD SWAP3 ADD SWAP2 PUSH1 0x0 SWAP1 PUSH2 0x16D4 DUP2 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x16EC JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1701 JUMPI PUSH2 0x172D JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x172D JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1725 JUMPI DUP2 SLOAD DUP10 DUP3 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP8 ADD PUSH2 0x170C JUMP JUMPDEST POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1770 SWAP1 DUP4 ADD DUP5 PUSH2 0x1245 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x178C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB36 DUP2 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x17A9 JUMPI PUSH2 0x17A9 PUSH2 0x166F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x17D5 JUMPI PUSH2 0x17D5 PUSH2 0x17B0 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x17EC JUMPI PUSH2 0x17EC PUSH2 0x166F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1800 JUMPI PUSH2 0x1800 PUSH2 0x17B0 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xB2 0x4C 0xD5 PUSH29 0xC0D80B8A4D1238E766085B31502AED053164D5211B96E172F6E6AE6473 PUSH16 0x6C634300080F00334F776E61626C653A KECCAK256 PUSH4 0x616C6C65 PUSH19 0x206973206E6F7420746865206F776E65720000 ",
							"sourceMap": "507:37:3:-:0;332:2659;507:37;;332:2659;507:37;;;-1:-1:-1;;;507:37:3;;;;;;;;:::i;:::-;;812:334;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3986:154:4;;;;;;;;;;;;;-1:-1:-1;;;3986:154:4;;;;;;;;;;;;;;;;-1:-1:-1;;;3986:154:4;;;4060:5;4052;:13;;;;;;:::i;:::-;-1:-1:-1;4075:7:4;:17;4085:7;4075;:17;:::i;:::-;-1:-1:-1;;2977:1:3;4102:13:4;:31;-1:-1:-1;921:32:0;719:10:1;921:18:0;:32::i;:::-;944:24:3::1;955:12:::0;944:10:::1;:24::i;:::-;1016:31;1031:10;1042:4;1016:14;:31::i;:::-;1109:29;1118:15:::0;1134:3:::1;1109:8;:29::i;:::-;812:334:::0;;332:2659;;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1449:102:3:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;4364:2:10;1240:68:0;;;4346:21:10;;;4383:18;;;4376:30;-1:-1:-1;;;;;;;;;;;4422:18:10;;;4415:62;4494:18;;1240:68:0;;;;;;;;;1523:7:3::1;:20;1533:10:::0;1523:7;:20:::1;:::i;:::-;;1449:102:::0;:::o;1154:179::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;4364:2:10;1240:68:0;;;4346:21:10;;;4383:18;;;4376:30;-1:-1:-1;;;;;;;;;;;4422:18:10;;;4415:62;4494:18;;1240:68:0;4162:356:10;1240:68:0;-1:-1:-1;;;;;1236:20:3;::::1;;::::0;;;:12:::1;:20;::::0;;;;;;;;:30;;-1:-1:-1;;1236:30:3::1;::::0;::::1;;::::0;;::::1;::::0;;;1282:43;;4663:41:10;;;1297:10:3::1;::::0;1282:43:::1;::::0;4636:18:10;1282:43:3::1;;;;;;;1154:179:::0;;:::o;2012:226::-;2068:10;2300:4;2324:20;;;:12;:20;;;;;;;;735:49;;;;-1:-1:-1;;;735:49:3;;4917:2:10;735:49:3;;;4899:21:10;4956:2;4936:18;;;4929:30;4995:22;4975:18;;;4968:50;5035:18;;735:49:3;4715:344:10;735:49:3;2091:19:::1;2113:13;2977:1:::0;4998:12:4;4789:7;4982:13;-1:-1:-1;;4982:28:4;;;:46;;4736:309;2113:13:3::1;2091:35:::0;-1:-1:-1;587:4:3::1;2145:20;2159:6:::0;2091:35;2145:20:::1;:::i;:::-;:33;;2137:61;;;::::0;-1:-1:-1;;;2137:61:3;;5496:2:10;2137:61:3::1;::::0;::::1;5478:21:10::0;5535:2;5515:18;;;5508:30;-1:-1:-1;;;5554:18:10;;;5547:45;5609:18;;2137:61:3::1;5294:339:10::0;2137:61:3::1;2209:21;2219:2:::0;2223:6;2209:9:::1;:21::i;:::-;2080:158;2012:226:::0;;;:::o;15138:102:4:-;15206:27;15216:2;15220:8;15206:27;;;;;;;;;;;;:9;;;:27;;:::i;15641:661::-;15759:19;15765:2;15769:8;15759:5;:19::i;:::-;-1:-1:-1;;;;;15817:14:4;;;:19;15813:473;;15856:11;15870:13;15917:14;;;15949:229;16026:7;;;;15979:62;;16018:1;;16022:2;;16035:5;15979:30;:62::i;:::-;15974:165;;16076:40;;-1:-1:-1;;;16076:40:4;;;;;;;;;;;15974:165;16173:3;16165:5;:11;15949:229;;16258:3;16241:13;;:20;16237:34;;16263:8;;;16237:34;15838:448;;15813:473;15641:661;;;:::o;16563:1492::-;16627:20;16650:13;-1:-1:-1;;;;;16677:16:4;;16673:48;;16702:19;;-1:-1:-1;;;16702:19:4;;;;;;;;;;;16673:48;16735:8;16747:1;16735:13;16731:44;;16757:18;;-1:-1:-1;;;16757:18:4;;;;;;;;;;;16731:44;16786:61;16816:1;16820:2;16824:12;16838:8;16786:21;:61::i;:::-;-1:-1:-1;;;;;17250:22:4;;;;;;:18;:22;;1156:2;17250:22;;:70;;17288:31;17276:44;;17250:70;;;10863:11;10839:22;10835:40;-1:-1:-1;12522:15:4;;12497:23;12493:45;10832:51;10822:62;17556:31;;;;:17;:31;;;;;:170;17574:12;17799:23;;;17836:99;17862:35;;17887:9;;;;;-1:-1:-1;;;;;17862:35:4;;;17879:1;;17862:35;;17879:1;;17862:35;17930:3;17920:7;:13;17836:99;;17949:13;:19;-1:-1:-1;15641:661:4;;;:::o;28649:697::-;28827:88;;-1:-1:-1;;;28827:88:4;;28807:4;;-1:-1:-1;;;;;28827:45:4;;;;;:88;;719:10:1;;28894:4:4;;28900:7;;28909:5;;28827:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28827:88:4;;;;;;;;-1:-1:-1;;28827:88:4;;;;;;;;;;;;:::i;:::-;;;28823:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29105:6;:13;29122:1;29105:18;29101:229;;29150:40;;-1:-1:-1;;;29150:40:4;;;;;;;;;;;29101:229;29290:6;29284:13;29275:6;29271:2;29267:15;29260:38;28823:517;-1:-1:-1;;;;;;28983:64:4;-1:-1:-1;;;28983:64:4;;-1:-1:-1;28649:697:4;;;;;;:::o;2360:237:3:-;2529:60;2557:4;2563:2;2567:12;2580:8;2529:27;;;;;:60;;:::i;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:10;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:10;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:10;;;2580:26;2531:89;-1:-1:-1;;1335:1:10;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:10;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:10;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:10;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:10:o;2735:258::-;2807:1;2817:113;2831:6;2828:1;2825:13;2817:113;;;2907:11;;;2901:18;2888:11;;;2881:39;2853:2;2846:10;2817:113;;;2948:6;2945:1;2942:13;2939:48;;;-1:-1:-1;;2983:1:10;2965:16;;2958:27;2735:258::o;2998:177::-;3077:13;;-1:-1:-1;;;;;3119:31:10;;3109:42;;3099:70;;3165:1;3162;3155:12;3099:70;2998:177;;;:::o;3180:977::-;3269:6;3277;3330:2;3318:9;3309:7;3305:23;3301:32;3298:52;;;3346:1;3343;3336:12;3298:52;3373:16;;-1:-1:-1;;;;;3438:14:10;;;3435:34;;;3465:1;3462;3455:12;3435:34;3503:6;3492:9;3488:22;3478:32;;3548:7;3541:4;3537:2;3533:13;3529:27;3519:55;;3570:1;3567;3560:12;3519:55;3599:2;3593:9;3621:2;3617;3614:10;3611:36;;;3627:18;;:::i;:::-;3702:2;3696:9;3670:2;3756:13;;-1:-1:-1;;3752:22:10;;;3776:2;3748:31;3744:40;3732:53;;;3800:18;;;3820:22;;;3797:46;3794:72;;;3846:18;;:::i;:::-;3886:10;3882:2;3875:22;3921:2;3913:6;3906:18;3963:7;3956:4;3951:2;3947;3943:11;3939:22;3936:35;3933:55;;;3984:1;3981;3974:12;3933:55;3997:59;4053:2;4046:4;4038:6;4034:17;4027:4;4023:2;4019:13;3997:59;:::i;:::-;4075:6;4065:16;;;;;;;4100:51;4145:4;4134:9;4130:20;4100:51;:::i;:::-;4090:61;;3180:977;;;;;:::o;5064:225::-;5104:3;5135:1;5131:6;5128:1;5125:13;5122:136;;;5180:10;5175:3;5171:20;5168:1;5161:31;5215:4;5212:1;5205:15;5243:4;5240:1;5233:15;5122:136;-1:-1:-1;5274:9:10;;5064:225::o;5638:654::-;5832:4;5878:1;5874;5869:3;5865:11;5861:19;5919:2;5911:6;5907:15;5896:9;5889:34;5971:2;5963:6;5959:15;5954:2;5943:9;5939:18;5932:43;;6011:6;6006:2;5995:9;5991:18;5984:34;6054:3;6049:2;6038:9;6034:18;6027:31;6087:6;6081:13;6131:6;6125:3;6114:9;6110:19;6103:35;6147:67;6207:6;6201:3;6190:9;6186:19;6181:2;6173:6;6169:15;6147:67;:::i;:::-;6275:2;6254:15;-1:-1:-1;;6250:29:10;6235:45;;;;6282:3;6231:55;;5638:654;-1:-1:-1;;;;;5638:654:10:o;6297:290::-;6366:6;6419:2;6407:9;6398:7;6394:23;6390:32;6387:52;;;6435:1;6432;6425:12;6387:52;6461:16;;-1:-1:-1;;;;;;6506:32:10;;6496:43;;6486:71;;6553:1;6550;6543:12;6486:71;6576:5;6297:290;-1:-1:-1;;;6297:290:10:o;:::-;332:2659:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_2201": {
									"entryPoint": null,
									"id": 2201,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_436": {
									"entryPoint": 3964,
									"id": 436,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_2188": {
									"entryPoint": null,
									"id": 2188,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_beforeTokenTransfers_557": {
									"entryPoint": 3271,
									"id": 557,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_2030": {
									"entryPoint": 3276,
									"id": 2030,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2085": {
									"entryPoint": 3728,
									"id": 2085,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1386": {
									"entryPoint": 3107,
									"id": 1386,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_2175": {
									"entryPoint": null,
									"id": 2175,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedAddress_1707": {
									"entryPoint": null,
									"id": 1707,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isOwnerOrApproved_1721": {
									"entryPoint": null,
									"id": 1721,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1577": {
									"entryPoint": 4345,
									"id": 1577,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_2211": {
									"entryPoint": null,
									"id": 2211,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2162": {
									"entryPoint": null,
									"id": 2162,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_1185": {
									"entryPoint": null,
									"id": 1185,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_1083": {
									"entryPoint": null,
									"id": 1083,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_963": {
									"entryPoint": 3160,
									"id": 963,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_1401": {
									"entryPoint": 3702,
									"id": 1401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_1463": {
									"entryPoint": 4236,
									"id": 1463,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_startTokenId_582": {
									"entryPoint": null,
									"id": 582,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 3620,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_1229": {
									"entryPoint": 1113,
									"id": 1229,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_818": {
									"entryPoint": 1969,
									"id": 818,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@baseExtension_353": {
									"entryPoint": 2529,
									"id": 353,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_2453": {
									"entryPoint": 1886,
									"id": 2453,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getApproved_1251": {
									"entryPoint": 1045,
									"id": 1251,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1303": {
									"entryPoint": null,
									"id": 1303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isMinter_535": {
									"entryPoint": null,
									"id": 535,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxSupply_356": {
									"entryPoint": null,
									"id": 356,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_1113": {
									"entryPoint": 899,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1103": {
									"entryPoint": 1958,
									"id": 1103,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 2048,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_523": {
									"entryPoint": 2117,
									"id": 523,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_1322": {
									"entryPoint": 1854,
									"id": 1322,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1360": {
									"entryPoint": 2461,
									"id": 1360,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setAllowMinter_427": {
									"entryPoint": 1705,
									"id": 427,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setApprovalForAll_1285": {
									"entryPoint": 2319,
									"id": 1285,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseURI_448": {
									"entryPoint": 1900,
									"id": 448,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_573": {
									"entryPoint": 882,
									"id": 573,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_792": {
									"entryPoint": 3029,
									"id": 792,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1123": {
									"entryPoint": 2102,
									"id": 1123,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_211": {
									"entryPoint": 3979,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_492": {
									"entryPoint": 2671,
									"id": 492,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_748": {
									"entryPoint": null,
									"id": 748,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1866": {
									"entryPoint": 1273,
									"id": 1866,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 2877,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 4977,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 5095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5789,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5949,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1674c41eb6a9ac78253fcbf95cc0d71c5cdee9bff21d93fc58259b4842cfce65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fd3705cdcadbc4af957cb58f6277702ac5d4695fc8a6c35b8a695f8136ab44ac__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 5481,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 5551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 4633,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 6129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5743,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6064,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6149,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12880:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:10"
															},
															"nodeType": "YulIf",
															"src": "68:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:10",
														"type": ""
													}
												],
												"src": "14:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:10"
															},
															"nodeType": "YulIf",
															"src": "229:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:10",
														"type": ""
													}
												],
												"src": "150:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:10",
														"type": ""
													}
												],
												"src": "400:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "645:205:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "664:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "659:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "724:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "754:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "745:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "745:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "768:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "773:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "764:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "764:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "758:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "685:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "688:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "682:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "696:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "698:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "707:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "703:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "698:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "678:3:10",
																"statements": []
															},
															"src": "674:113:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:31:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "826:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "831:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "822:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "822:16:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "815:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:27:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "802:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "805:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "799:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:13:10"
															},
															"nodeType": "YulIf",
															"src": "796:48:10"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "623:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "628:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "633:6:10",
														"type": ""
													}
												],
												"src": "592:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:208:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "915:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "919:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:19:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1004:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1011:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1022:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1027:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1018:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1018:14:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1034:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "978:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:63:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:63:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1050:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1078:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1086:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1074:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1074:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1095:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1091:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1091:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1050:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "882:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "889:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "897:3:10",
														"type": ""
													}
												],
												"src": "855:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1279:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1305:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1317:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1328:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1287:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1279:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1208:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1219:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:10",
														"type": ""
													}
												],
												"src": "1118:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1413:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1459:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1468:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1471:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1461:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1461:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1434:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:32:10"
															},
															"nodeType": "YulIf",
															"src": "1423:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1484:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1507:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1494:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1379:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1390:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1402:6:10",
														"type": ""
													}
												],
												"src": "1343:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1639:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1651:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1639:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1681:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1696:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1712:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1708:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1708:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1721:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1704:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1598:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1609:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1620:4:10",
														"type": ""
													}
												],
												"src": "1528:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1795:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1795:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1887:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1889:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1846:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1857:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1872:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1868:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1868:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1881:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1864:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1864:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1853:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1853:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1843:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:50:10"
															},
															"nodeType": "YulIf",
															"src": "1833:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1764:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:10",
														"type": ""
													}
												],
												"src": "1736:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2047:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2049:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2049:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2022:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:32:10"
															},
															"nodeType": "YulIf",
															"src": "2011:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2072:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2082:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2120:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2147:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2158:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2130:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1959:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1970:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1982:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1990:6:10",
														"type": ""
													}
												],
												"src": "1914:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2274:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2284:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2296:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2307:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2284:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2326:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2337:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2319:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2319:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2243:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2254:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2265:4:10",
														"type": ""
													}
												],
												"src": "2173:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2459:224:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2505:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2514:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2507:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2507:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2507:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2480:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2489:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2501:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2472:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:32:10"
															},
															"nodeType": "YulIf",
															"src": "2469:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2530:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2559:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2540:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2578:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2622:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2607:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2588:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2635:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2662:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2673:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2645:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2635:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2409:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2420:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2432:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2440:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2448:6:10",
														"type": ""
													}
												],
												"src": "2355:328:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2772:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2818:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2827:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2830:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2820:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2820:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2820:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2793:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2802:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2789:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2789:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2814:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2785:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2785:32:10"
															},
															"nodeType": "YulIf",
															"src": "2782:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2843:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2872:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2853:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2853:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2843:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2891:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2921:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2932:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2917:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2917:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2904:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2904:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2895:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2989:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2998:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3001:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2991:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2991:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2958:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2979:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2972:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2972:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2965:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2955:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2955:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2948:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:40:10"
															},
															"nodeType": "YulIf",
															"src": "2945:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3014:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3024:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3014:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2730:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2741:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2753:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2761:6:10",
														"type": ""
													}
												],
												"src": "2688:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3072:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3089:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3096:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3101:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3092:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3092:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3082:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3129:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3132:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3122:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3122:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3122:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3153:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3156:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3146:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3146:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3146:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3040:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3247:557:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3257:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3267:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3261:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3312:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3314:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3314:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3314:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3300:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3308:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3297:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:14:10"
															},
															"nodeType": "YulIf",
															"src": "3294:40:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3343:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3357:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3353:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3353:7:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3347:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3369:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3389:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3383:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3373:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3401:73:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3423:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "3447:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3455:2:10",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3443:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3443:15:10"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "3460:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3439:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3439:24:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3465:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3435:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3435:33:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3470:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3431:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3431:42:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3419:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:55:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3405:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3533:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3535:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3535:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3535:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3492:10:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3504:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3489:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3489:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3512:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3524:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3509:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3509:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3486:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:46:10"
															},
															"nodeType": "YulIf",
															"src": "3483:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3571:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3575:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3564:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3564:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3564:22:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3595:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3604:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3595:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3626:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3634:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3619:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3619:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3619:22:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3679:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3688:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3691:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3681:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3681:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3660:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3665:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3656:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3656:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3674:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3653:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3653:25:10"
															},
															"nodeType": "YulIf",
															"src": "3650:45:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3721:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3729:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3717:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3717:17:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3736:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3741:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3704:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3704:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3704:44:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3772:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3780:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3768:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3768:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3789:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3764:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3764:30:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3796:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3757:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3757:41:10"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3216:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3221:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3229:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3237:5:10",
														"type": ""
													}
												],
												"src": "3172:632:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3889:371:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3935:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3944:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3947:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3937:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3937:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3937:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3910:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3919:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3906:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3906:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3931:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3902:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3902:32:10"
															},
															"nodeType": "YulIf",
															"src": "3899:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3960:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3987:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3974:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3974:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3964:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4040:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4049:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4052:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4042:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4042:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4042:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4012:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4009:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4009:30:10"
															},
															"nodeType": "YulIf",
															"src": "4006:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4065:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4079:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4090:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4075:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4075:22:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4069:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4145:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4154:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4157:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4147:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4147:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4147:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4124:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4128:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4120:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4120:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4135:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4116:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4116:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4109:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4109:35:10"
															},
															"nodeType": "YulIf",
															"src": "4106:55:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4170:84:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4219:2:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4223:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4215:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4215:11:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4241:2:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4228:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4228:16:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4246:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "4180:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4180:74:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3855:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3866:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3878:6:10",
														"type": ""
													}
												],
												"src": "3809:451:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4335:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4381:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4390:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4393:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4383:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4383:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4383:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4356:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4352:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4352:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4377:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4348:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4348:32:10"
															},
															"nodeType": "YulIf",
															"src": "4345:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4406:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4435:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4416:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4416:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4406:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4301:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4312:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4324:6:10",
														"type": ""
													}
												],
												"src": "4265:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4586:537:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4633:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4642:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4645:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4635:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4635:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4635:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4607:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4616:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4603:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4603:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4628:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4599:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4599:33:10"
															},
															"nodeType": "YulIf",
															"src": "4596:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4658:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4687:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4668:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4668:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4658:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4706:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4739:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4750:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4735:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4735:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4716:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4706:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4763:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4790:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4801:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4786:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4786:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4773:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4763:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4814:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4845:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4856:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4841:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4841:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4828:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4828:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4818:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4903:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4912:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4915:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4905:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4905:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4905:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4875:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4883:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4872:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4872:30:10"
															},
															"nodeType": "YulIf",
															"src": "4869:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4928:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4942:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4953:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4938:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:22:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4932:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5008:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5017:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5020:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5010:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5010:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5010:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4987:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4991:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4983:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4983:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4998:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4979:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4979:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4972:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4972:35:10"
															},
															"nodeType": "YulIf",
															"src": "4969:55:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5033:84:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5082:2:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5086:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5078:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5078:11:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5104:2:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5091:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5091:16:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5109:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "5043:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5043:74:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5033:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4528:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4539:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4551:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4559:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4567:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4575:6:10",
														"type": ""
													}
												],
												"src": "4456:667:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5215:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5261:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5270:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5273:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5263:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5263:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5263:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5236:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5245:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5232:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5232:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5257:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5228:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5228:32:10"
															},
															"nodeType": "YulIf",
															"src": "5225:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5286:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5315:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5296:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5296:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5286:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5334:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5367:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5378:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5363:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5363:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5344:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5344:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5334:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5173:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5184:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5196:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5204:6:10",
														"type": ""
													}
												],
												"src": "5128:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5448:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5458:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5472:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5475:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5458:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5489:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5519:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5525:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5515:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5515:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5493:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5566:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5568:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5582:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5590:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5578:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5578:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5568:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5546:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5539:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5539:26:10"
															},
															"nodeType": "YulIf",
															"src": "5536:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5656:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5684:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5689:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5680:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5680:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5670:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5670:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5670:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5721:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5724:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5714:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5714:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5714:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5749:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5752:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5742:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5742:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5742:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5612:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5635:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5643:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5632:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5632:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5609:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:38:10"
															},
															"nodeType": "YulIf",
															"src": "5606:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5428:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5437:6:10",
														"type": ""
													}
												],
												"src": "5393:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5952:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5969:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5980:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5962:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5962:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5962:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6003:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5999:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5999:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5992:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5992:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5992:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6042:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6053:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6038:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6038:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6058:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6031:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6031:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6102:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6114:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6125:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6110:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6110:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6102:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5929:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5943:4:10",
														"type": ""
													}
												],
												"src": "5778:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6195:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6212:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6215:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6205:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6205:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6205:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6228:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6246:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6249:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "6236:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6236:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6228:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6178:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6186:4:10",
														"type": ""
													}
												],
												"src": "6139:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6346:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6379:425:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6393:11:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6403:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "6397:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6424:2:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6428:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6417:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:17:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6417:17:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6447:31:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6469:2:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6473:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "6459:9:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6459:19:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "6451:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6491:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "6514:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6524:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "6531:10:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6543:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6527:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6527:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "6520:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6520:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6510:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6510:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6495:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6585:23:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6587:19:10",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "6602:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6587:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6567:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6579:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6564:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6564:20:10"
																		},
																		"nodeType": "YulIf",
																		"src": "6561:47:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6621:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "6635:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6645:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6652:3:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6657:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6648:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6648:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "6641:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6641:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6631:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6631:31:10"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "6625:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6675:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "6688:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "6679:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6773:21:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "6782:5:10"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "6789:2:10"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "6775:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6775:17:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6775:17:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6723:5:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "6730:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6720:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6720:13:10"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "6734:26:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6736:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "6749:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6756:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6745:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6745:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "6736:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "6716:3:10",
																			"statements": []
																		},
																		"src": "6712:82:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6362:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6367:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6359:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6359:11:10"
															},
															"nodeType": "YulIf",
															"src": "6356:448:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6318:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6325:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6330:10:10",
														"type": ""
													}
												],
												"src": "6265:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6900:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6910:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "6925:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6943:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "6946:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "6939:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6939:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6956:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "6952:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6952:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6935:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6935:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6931:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6931:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6921:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6921:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6967:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "6970:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6963:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6963:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6918:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6918:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "6910:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6877:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6883:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6891:4:10",
														"type": ""
													}
												],
												"src": "6815:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7082:1256:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7092:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7112:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7106:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7106:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7096:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7159:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7161:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7161:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7161:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7131:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7139:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7128:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7128:30:10"
															},
															"nodeType": "YulIf",
															"src": "7125:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7234:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "7272:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "7266:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7266:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "7240:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7240:38:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7280:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7190:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7190:97:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7190:97:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7296:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7313:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7300:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7323:23:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7342:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "7327:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7355:24:10",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "7368:11:10"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7355:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7425:656:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7439:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7458:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7470:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7466:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7466:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7454:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7454:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7443:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7487:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7531:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7501:29:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7501:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7491:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7549:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7558:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7553:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7636:172:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7661:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7679:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7684:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7675:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7675:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7669:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7669:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7654:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7654:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7654:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7713:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7727:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7735:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7723:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7723:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7713:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7754:40:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "7771:9:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "7782:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7767:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7767:27:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "7754:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7583:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7586:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7580:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7580:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7595:28:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7597:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7606:1:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "7609:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7602:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7602:19:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7597:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7576:3:10",
																					"statements": []
																				},
																				"src": "7572:236:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7856:166:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "7874:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "7901:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "7906:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "7897:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7897:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "7891:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7891:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "7878:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7941:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "7953:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "7980:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "7983:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "7976:3:10"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "7976:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "7992:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "7972:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "7972:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "8002:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "7998:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "7998:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "7968:3:10"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "7968:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "7964:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7964:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "7949:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7949:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7934:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7934:74:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7934:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7827:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7836:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7824:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7824:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "7821:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8042:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8056:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8059:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "8052:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8052:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8068:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8048:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8048:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8035:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8035:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8035:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7418:663:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7423:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8098:234:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8112:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8125:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8116:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8161:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8179:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8198:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8203:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8194:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8194:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8188:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8188:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8179:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8142:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "8139:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8248:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8307:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8314:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8254:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8254:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8241:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8241:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8241:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8090:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7398:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7406:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7395:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7395:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "7388:944:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7067:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7073:3:10",
														"type": ""
													}
												],
												"src": "6986:1352:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8517:170:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8534:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8545:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8527:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8527:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8527:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8568:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8579:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8564:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8564:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8584:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8557:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8557:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8607:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8618:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8603:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8603:18:10"
																	},
																	{
																		"hexValue": "596f7520617265206e6f742061206d696e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8623:22:10",
																		"type": "",
																		"value": "You are not a minter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8596:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8596:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8596:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8655:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8667:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8678:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8663:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8663:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8655:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1674c41eb6a9ac78253fcbf95cc0d71c5cdee9bff21d93fc58259b4842cfce65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8494:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8508:4:10",
														"type": ""
													}
												],
												"src": "8343:344:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8724:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8741:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8748:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8753:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8744:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8744:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8734:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8734:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8734:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8781:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8784:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8774:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8774:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8774:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8805:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8808:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8798:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8798:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8798:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8692:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8872:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8899:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8901:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8901:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8901:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8888:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8895:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8891:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8891:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8885:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8885:13:10"
															},
															"nodeType": "YulIf",
															"src": "8882:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8930:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8941:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8944:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8937:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8937:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8930:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8855:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8858:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8864:3:10",
														"type": ""
													}
												],
												"src": "8824:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9131:165:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9148:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9159:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9141:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9141:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9141:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9182:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9193:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9178:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9178:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9198:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9171:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9171:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9171:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9221:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9232:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9217:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9217:18:10"
																	},
																	{
																		"hexValue": "4f766572206d617820737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9237:17:10",
																		"type": "",
																		"value": "Over max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9210:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9210:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9210:45:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9264:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9276:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9287:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9272:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9272:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9264:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fd3705cdcadbc4af957cb58f6277702ac5d4695fc8a6c35b8a695f8136ab44ac__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9108:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9122:4:10",
														"type": ""
													}
												],
												"src": "8957:339:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9475:237:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9492:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9503:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9485:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9485:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9485:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9526:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9537:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9522:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9522:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9542:2:10",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9515:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9515:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9515:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9565:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9576:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9561:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9561:18:10"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9581:34:10",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9554:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9554:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9554:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9636:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9647:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9632:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9632:18:10"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9652:17:10",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9625:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9625:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9625:45:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9679:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9691:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9702:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9687:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9687:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9679:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9452:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9466:4:10",
														"type": ""
													}
												],
												"src": "9301:411:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9949:998:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9959:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9979:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9973:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9973:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9963:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9995:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10005:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9999:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10044:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10052:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10040:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10040:15:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10057:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10062:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10018:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10018:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10018:51:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10078:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10095:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10100:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10091:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10091:16:10"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "10082:5:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10116:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10138:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10132:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10132:13:10"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "10120:8:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10180:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10188:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10176:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10176:15:10"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "10193:5:10"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "10200:8:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10154:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10154:55:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10154:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10218:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "10235:5:10"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "10242:8:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10231:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10231:20:10"
															},
															"variables": [
																{
																	"name": "end_2",
																	"nodeType": "YulTypedName",
																	"src": "10222:5:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10260:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10271:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "10264:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10281:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10304:6:10"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "10298:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10298:13:10"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "10285:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10320:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "10362:9:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "10336:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10336:36:10"
															},
															"variables": [
																{
																	"name": "length_2",
																	"nodeType": "YulTypedName",
																	"src": "10324:8:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10381:11:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10391:1:10",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "10385:2:10",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10442:134:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "end_2",
																							"nodeType": "YulIdentifier",
																							"src": "10463:5:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "10474:9:10"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "10489:3:10",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "10485:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10485:8:10"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "10470:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10470:24:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "10456:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10456:39:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10456:39:10"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "10508:58:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "end_2",
																							"nodeType": "YulIdentifier",
																							"src": "10519:5:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length_2",
																									"nodeType": "YulIdentifier",
																									"src": "10530:8:10"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length_2",
																													"nodeType": "YulIdentifier",
																													"src": "10554:8:10"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nodeType": "YulIdentifier",
																												"src": "10547:6:10"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "10547:16:10"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "10540:6:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10540:24:10"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "10526:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10526:39:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10515:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10515:51:10"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "10508:3:10"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10435:141:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10440:1:10",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10592:330:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10613:1:10",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "value2",
																							"nodeType": "YulIdentifier",
																							"src": "10616:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "10606:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10606:17:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10606:17:10"
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10636:31:10",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10661:1:10",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "10664:2:10"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "10651:9:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10651:16:10"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "10640:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10680:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10689:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "10684:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10759:113:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "end_2",
																												"nodeType": "YulIdentifier",
																												"src": "10788:5:10"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "10795:1:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "10784:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10784:13:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "10805:7:10"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "10799:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10799:14:10"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "10777:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10777:37:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10777:37:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "10831:27:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "10846:7:10"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "10855:2:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10842:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10842:16:10"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "10831:7:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10714:1:10"
																						},
																						{
																							"name": "length_2",
																							"nodeType": "YulIdentifier",
																							"src": "10717:8:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "10711:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10711:15:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "10727:19:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "10729:15:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "10738:1:10"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "10741:2:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10734:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10734:10:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10729:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "10707:3:10",
																					"statements": []
																				},
																				"src": "10703:169:10"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "10885:27:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "end_2",
																							"nodeType": "YulIdentifier",
																							"src": "10896:5:10"
																						},
																						{
																							"name": "length_2",
																							"nodeType": "YulIdentifier",
																							"src": "10903:8:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10892:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10892:20:10"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "10885:3:10"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10585:337:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10590:1:10",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "10412:9:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "10423:2:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10408:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10408:18:10"
															},
															"nodeType": "YulSwitch",
															"src": "10401:521:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10931:10:10",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "10938:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10931:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9909:3:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9914:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9922:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9930:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9941:3:10",
														"type": ""
													}
												],
												"src": "9717:1230:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11126:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11143:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11154:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11136:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11136:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11136:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11177:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11188:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11173:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11173:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11193:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11166:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11166:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11166:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11216:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11227:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11212:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11212:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11232:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11205:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11205:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11205:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11287:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11298:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11283:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11283:18:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11303:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11276:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11276:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11276:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11321:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11333:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11344:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11329:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11329:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11321:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11103:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11117:4:10",
														"type": ""
													}
												],
												"src": "10952:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11562:286:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11572:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11590:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11595:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11586:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11586:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11599:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11582:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11582:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11576:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11617:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11632:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11640:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11628:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11628:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11610:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11610:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11610:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11664:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11675:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11660:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11660:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11684:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11692:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11680:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11680:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11653:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11653:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11653:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11716:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11727:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11712:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11712:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11732:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11705:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11705:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11705:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11759:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11770:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11755:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11755:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11775:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11748:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11748:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11788:54:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11814:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11826:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11837:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11822:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11822:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "11796:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11796:46:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11788:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11507:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11518:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11526:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11534:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11542:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11553:4:10",
														"type": ""
													}
												],
												"src": "11359:489:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11933:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11979:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11988:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11991:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11981:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11981:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11981:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11954:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11963:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11950:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11950:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11975:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11946:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11946:32:10"
															},
															"nodeType": "YulIf",
															"src": "11943:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12004:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12023:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12017:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12017:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12008:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12066:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "12042:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12042:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12042:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12081:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12091:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12081:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11899:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11910:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11922:6:10",
														"type": ""
													}
												],
												"src": "11853:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12154:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12185:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12187:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12187:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12187:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12170:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12181:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12177:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12177:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12167:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12167:17:10"
															},
															"nodeType": "YulIf",
															"src": "12164:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12216:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12227:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12234:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12223:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12223:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12216:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12136:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12146:3:10",
														"type": ""
													}
												],
												"src": "12107:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12279:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12296:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12303:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12308:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12299:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12289:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12289:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12289:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12336:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12339:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12329:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12329:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12329:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12360:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12363:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12353:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12353:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12353:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12247:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12425:74:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12448:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12450:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12450:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12450:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12445:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12438:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12438:9:10"
															},
															"nodeType": "YulIf",
															"src": "12435:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12479:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12488:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12491:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12484:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12484:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12479:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12410:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12413:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12419:1:10",
														"type": ""
													}
												],
												"src": "12379:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12553:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12575:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12577:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12577:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12577:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12569:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12572:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12566:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12566:8:10"
															},
															"nodeType": "YulIf",
															"src": "12563:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12606:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12618:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12621:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12614:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12614:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12606:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12535:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12538:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12544:4:10",
														"type": ""
													}
												],
												"src": "12504:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12672:74:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12695:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12697:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12697:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12697:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12692:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12685:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12685:9:10"
															},
															"nodeType": "YulIf",
															"src": "12682:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12726:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12735:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12738:1:10"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "12731:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12731:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12726:1:10"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12657:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12660:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12666:1:10",
														"type": ""
													}
												],
												"src": "12634:112:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12783:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12800:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12807:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12812:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12803:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12803:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12793:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12793:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12793:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12840:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12843:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12833:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12833:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12833:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12864:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12867:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12857:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12857:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12857:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12751:127:10"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_1674c41eb6a9ac78253fcbf95cc0d71c5cdee9bff21d93fc58259b4842cfce65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"You are not a minter\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fd3705cdcadbc4af957cb58f6277702ac5d4695fc8a6c35b8a695f8136ab44ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Over max supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let length := mload(value0)\n        let _1 := 0x20\n        copy_memory_to_memory(add(value0, _1), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, _1), end_1, length_1)\n        let end_2 := add(end_1, length_1)\n        let ret := 0\n        let slotValue := sload(value2)\n        let length_2 := extract_byte_array_length(slotValue)\n        let _2 := 1\n        switch and(slotValue, _2)\n        case 0 {\n            mstore(end_2, and(slotValue, not(255)))\n            ret := add(end_2, mul(length_2, iszero(iszero(length_2))))\n        }\n        case 1 {\n            mstore(0, value2)\n            let dataPos := keccak256(0, _1)\n            let i := 0\n            for { } lt(i, length_2) { i := add(i, _1) }\n            {\n                mstore(add(end_2, i), sload(dataPos))\n                dataPos := add(dataPos, _2)\n            }\n            ret := add(end_2, length_2)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063b88d4fde1161007c578063b88d4fde146102ec578063c6682862146102ff578063c87b56dd14610307578063d5abeb011461031a578063e985e9c514610323578063f2fde38b1461035f57600080fd5b8063715018a6146102795780638da5cb5b1461028157806395d89b4114610292578063a14481941461029a578063a22cb465146102ad578063aa271e1a146102c057600080fd5b80633c713026116101155780633c7130261461020757806342842e0e1461021a57806342966c681461022d57806355f804b3146102405780636352211e1461025357806370a082311461026657600080fd5b806301ffc9a71461015d57806306fdde0314610185578063081812fc1461019a578063095ea7b3146101c557806318160ddd146101da57806323b872dd146101f4575b600080fd5b61017061016b3660046111fc565b610372565b60405190151581526020015b60405180910390f35b61018d610383565b60405161017c9190611271565b6101ad6101a8366004611284565b610415565b6040516001600160a01b03909116815260200161017c565b6101d86101d33660046112b9565b610459565b005b60015460005403600019015b60405190815260200161017c565b6101d86102023660046112e3565b6104f9565b6101d861021536600461131f565b6106a9565b6101d86102283660046112e3565b61073e565b6101d861023b366004611284565b61075e565b6101d861024e3660046113e7565b61076c565b6101ad610261366004611284565b6107a6565b6101e6610274366004611430565b6107b1565b6101d8610800565b6008546001600160a01b03166101ad565b61018d610836565b6101d86102a83660046112b9565b610845565b6101d86102bb36600461131f565b61090f565b6101706102ce366004611430565b6001600160a01b031660009081526009602052604090205460ff1690565b6101d86102fa36600461144b565b61099d565b61018d6109e1565b61018d610315366004611284565b610a6f565b6101e661045781565b6101706103313660046114c7565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6101d861036d366004611430565b610b3d565b600061037d82610bd5565b92915050565b606060028054610392906114fa565b80601f01602080910402602001604051908101604052809291908181526020018280546103be906114fa565b801561040b5780601f106103e05761010080835404028352916020019161040b565b820191906000526020600020905b8154815290600101906020018083116103ee57829003601f168201915b5050505050905090565b600061042082610c23565b61043d576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610464826107a6565b9050336001600160a01b0382161461049d576104808133610331565b61049d576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061050482610c58565b9050836001600160a01b0316816001600160a01b0316146105375760405162a1148160e81b815260040160405180910390fd5b600082815260066020526040902080546105638187335b6001600160a01b039081169116811491141790565b61058e576105718633610331565b61058e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166105b557604051633a954ecd60e21b815260040160405180910390fd5b6105c28686866001610cc7565b80156105cd57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b8416900361065f5760018401600081815260046020526040812054900361065d57600054811461065d5760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b6008546001600160a01b031633146106dc5760405162461bcd60e51b81526004016106d390611534565b60405180910390fd5b6001600160a01b038216600081815260096020908152604091829020805460ff1916851515908117909155915191825233917f3c49a0d2dcd603245c20eb1985825d770748295cd570de6d24861080451bbd4191015b60405180910390a35050565b6107598383836040518060200160405280600081525061099d565b505050565b610769816001610ccc565b50565b6008546001600160a01b031633146107965760405162461bcd60e51b81526004016106d390611534565b600a6107a282826115af565b5050565b600061037d82610c58565b60006001600160a01b0382166107da576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6008546001600160a01b0316331461082a5760405162461bcd60e51b81526004016106d390611534565b6108346000610e24565b565b606060038054610392906114fa565b3360008181526009602052604090205460ff1661089b5760405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932903737ba10309036b4b73a32b960611b60448201526064016106d3565b60006108b06001546000546000199190030190565b90506104576108bf8483611685565b11156108ff5760405162461bcd60e51b815260206004820152600f60248201526e4f766572206d617820737570706c7960881b60448201526064016106d3565b6109098484610e76565b50505050565b336001600160a01b038316036109385760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101610732565b6109a88484846104f9565b6001600160a01b0383163b15610909576109c484848484610e90565b610909576040516368d2bf6b60e11b815260040160405180910390fd5b600b80546109ee906114fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1a906114fa565b8015610a675780601f10610a3c57610100808354040283529160200191610a67565b820191906000526020600020905b815481529060010190602001808311610a4a57829003601f168201915b505050505081565b6060610a7a82610c23565b610ade5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016106d3565b6000610ae8610f7c565b90506000815111610b085760405180602001604052806000815250610b36565b80610b1284610f8b565b600b604051602001610b269392919061169d565b6040516020818303038152906040525b9392505050565b6008546001600160a01b03163314610b675760405162461bcd60e51b81526004016106d390611534565b6001600160a01b038116610bcc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106d3565b61076981610e24565b60006301ffc9a760e01b6001600160e01b031983161480610c0657506380ac58cd60e01b6001600160e01b03198316145b8061037d5750506001600160e01b031916635b5e139f60e01b1490565b600081600111158015610c37575060005482105b801561037d575050600090815260046020526040902054600160e01b161590565b60008180600111610cae57600054811015610cae5760008181526004602052604081205490600160e01b82169003610cac575b80600003610b36575060001901600081815260046020526040902054610c8b565b505b604051636f96cda160e11b815260040160405180910390fd5b610909565b6000610cd783610c58565b905080600080610cf586600090815260066020526040902080549091565b915091508415610d3557610d0a81843361054e565b610d3557610d188333610331565b610d3557604051632ce44b5f60e11b815260040160405180910390fd5b610d43836000886001610cc7565b8015610d4e57600082555b6001600160a01b038316600081815260056020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b17600087815260046020526040812091909155600160e11b85169003610ddc57600186016000818152600460205260408120549003610dda576000548114610dda5760008181526004602052604090208590555b505b60405186906000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050600180548101905550505050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6107a282826040518060200160405280600081525061108c565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610ec590339089908890889060040161173d565b6020604051808303816000875af1925050508015610f00575060408051601f3d908101601f19168201909252610efd9181019061177a565b60015b610f5e573d808015610f2e576040519150601f19603f3d011682016040523d82523d6000602084013e610f33565b606091505b508051600003610f56576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600a8054610392906114fa565b606081600003610fb25750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610fdc5780610fc681611797565b9150610fd59050600a836117c6565b9150610fb6565b60008167ffffffffffffffff811115610ff757610ff761135b565b6040519080825280601f01601f191660200182016040528015611021576020820181803683370190505b5090505b8415610f74576110366001836117da565b9150611043600a866117f1565b61104e906030611685565b60f81b81838151811061106357611063611805565b60200101906001600160f81b031916908160001a905350611085600a866117c6565b9450611025565b61109683836110f9565b6001600160a01b0383163b15610759576000548281035b6110c06000868380600101945086610e90565b6110dd576040516368d2bf6b60e11b815260040160405180910390fd5b8181106110ad5781600054146110f257600080fd5b5050505050565b6000546001600160a01b03831661112257604051622e076360e81b815260040160405180910390fd5b816000036111435760405163b562e8dd60e01b815260040160405180910390fd5b6111506000848385610cc7565b6001600160a01b038316600081815260056020526040902080546801000000000000000185020190554260a01b6001841460e11b1717600082815260046020526040902055808281015b6040516001830192906001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480821061119a5760005550505050565b6001600160e01b03198116811461076957600080fd5b60006020828403121561120e57600080fd5b8135610b36816111e6565b60005b8381101561123457818101518382015260200161121c565b838111156109095750506000910152565b6000815180845261125d816020860160208601611219565b601f01601f19169290920160200192915050565b602081526000610b366020830184611245565b60006020828403121561129657600080fd5b5035919050565b80356001600160a01b03811681146112b457600080fd5b919050565b600080604083850312156112cc57600080fd5b6112d58361129d565b946020939093013593505050565b6000806000606084860312156112f857600080fd5b6113018461129d565b925061130f6020850161129d565b9150604084013590509250925092565b6000806040838503121561133257600080fd5b61133b8361129d565b91506020830135801515811461135057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561138c5761138c61135b565b604051601f8501601f19908116603f011681019082821181831017156113b4576113b461135b565b816040528093508581528686860111156113cd57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156113f957600080fd5b813567ffffffffffffffff81111561141057600080fd5b8201601f8101841361142157600080fd5b610f7484823560208401611371565b60006020828403121561144257600080fd5b610b368261129d565b6000806000806080858703121561146157600080fd5b61146a8561129d565b93506114786020860161129d565b925060408501359150606085013567ffffffffffffffff81111561149b57600080fd5b8501601f810187136114ac57600080fd5b6114bb87823560208401611371565b91505092959194509250565b600080604083850312156114da57600080fd5b6114e38361129d565b91506114f16020840161129d565b90509250929050565b600181811c9082168061150e57607f821691505b60208210810361152e57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b601f82111561075957600081815260208120601f850160051c810160208610156115905750805b601f850160051c820191505b818110156106a15782815560010161159c565b815167ffffffffffffffff8111156115c9576115c961135b565b6115dd816115d784546114fa565b84611569565b602080601f83116001811461161257600084156115fa5750858301515b600019600386901b1c1916600185901b1785556106a1565b600085815260208120601f198616915b8281101561164157888601518255948401946001909101908401611622565b508582101561165f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600082198211156116985761169861166f565b500190565b6000845160206116b08285838a01611219565b8551918401916116c38184848a01611219565b85549201916000906116d4816114fa565b600182811680156116ec57600181146117015761172d565b60ff198416875282151583028701945061172d565b896000528560002060005b848110156117255781548982015290830190870161170c565b505082870194505b50929a9950505050505050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061177090830184611245565b9695505050505050565b60006020828403121561178c57600080fd5b8151610b36816111e6565b6000600182016117a9576117a961166f565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826117d5576117d56117b0565b500490565b6000828210156117ec576117ec61166f565b500390565b600082611800576118006117b0565b500690565b634e487b7160e01b600052603260045260246000fdfea264697066735822122017b24cd57cc0d80b8a4d1238e766085b31502aed053164d5211b96e172f6e6ae64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xC6682862 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xA1448194 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C713026 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x3C713026 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x459 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x75E JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x800 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x18D PUSH2 0x836 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x845 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x144B JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST PUSH2 0x18D PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x457 DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37D DUP3 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x392 SWAP1 PUSH2 0x14FA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3BE SWAP1 PUSH2 0x14FA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x40B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x40B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x420 DUP3 PUSH2 0xC23 JUMP JUMPDEST PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x464 DUP3 PUSH2 0x7A6 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x49D JUMPI PUSH2 0x480 DUP2 CALLER PUSH2 0x331 JUMP JUMPDEST PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x504 DUP3 PUSH2 0xC58 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x537 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x563 DUP2 DUP8 CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP2 EQ SWAP2 EQ OR SWAP1 JUMP JUMPDEST PUSH2 0x58E JUMPI PUSH2 0x571 DUP7 CALLER PUSH2 0x331 JUMP JUMPDEST PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C2 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xCC7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x65F JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x65D JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x65D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE CALLER SWAP2 PUSH32 0x3C49A0D2DCD603245C20EB1985825D770748295CD570DE6D24861080451BBD41 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x759 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x99D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x769 DUP2 PUSH1 0x1 PUSH2 0xCCC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0xA PUSH2 0x7A2 DUP3 DUP3 PUSH2 0x15AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37D DUP3 PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7DA JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x834 PUSH1 0x0 PUSH2 0xE24 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x392 SWAP1 PUSH2 0x14FA JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2CB7BA9030B932903737BA10309036B4B73A32B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B0 PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x0 NOT SWAP2 SWAP1 SUB ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x457 PUSH2 0x8BF DUP5 DUP4 PUSH2 0x1685 JUMP JUMPDEST GT ISZERO PUSH2 0x8FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4F766572206D617820737570706C79 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x909 DUP5 DUP5 PUSH2 0xE76 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06307DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH2 0x732 JUMP JUMPDEST PUSH2 0x9A8 DUP5 DUP5 DUP5 PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x909 JUMPI PUSH2 0x9C4 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x9EE SWAP1 PUSH2 0x14FA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA1A SWAP1 PUSH2 0x14FA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA67 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA3C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA67 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA4A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA7A DUP3 PUSH2 0xC23 JUMP JUMPDEST PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE8 PUSH2 0xF7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB36 JUMP JUMPDEST DUP1 PUSH2 0xB12 DUP5 PUSH2 0xF8B JUMP JUMPDEST PUSH1 0xB PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB26 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x169D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x769 DUP2 PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0xC06 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x37D JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0xC37 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0x37D JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x1 GT PUSH2 0xCAE JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xCAE JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0xCAC JUMPI JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0xB36 JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC8B JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x909 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD7 DUP4 PUSH2 0xC58 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0xCF5 DUP7 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD0A DUP2 DUP5 CALLER PUSH2 0x54E JUMP JUMPDEST PUSH2 0xD35 JUMPI PUSH2 0xD18 DUP4 CALLER PUSH2 0x331 JUMP JUMPDEST PUSH2 0xD35 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD43 DUP4 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH2 0xCC7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD4E JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x3 PUSH1 0xE0 SHL OR PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP6 AND SWAP1 SUB PUSH2 0xDDC JUMPI PUSH1 0x1 DUP7 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xDDA JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0xDDA JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP7 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x7A2 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x108C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xEC5 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x173D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF00 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEFD SWAP2 DUP2 ADD SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF5E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xF56 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0x392 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xFB2 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xFDC JUMPI DUP1 PUSH2 0xFC6 DUP2 PUSH2 0x1797 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD5 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x17C6 JUMP JUMPDEST SWAP2 POP PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF7 JUMPI PUSH2 0xFF7 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1021 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xF74 JUMPI PUSH2 0x1036 PUSH1 0x1 DUP4 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1043 PUSH1 0xA DUP7 PUSH2 0x17F1 JUMP JUMPDEST PUSH2 0x104E SWAP1 PUSH1 0x30 PUSH2 0x1685 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1063 JUMPI PUSH2 0x1063 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1085 PUSH1 0xA DUP7 PUSH2 0x17C6 JUMP JUMPDEST SWAP5 POP PUSH2 0x1025 JUMP JUMPDEST PUSH2 0x1096 DUP4 DUP4 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0x10C0 PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x10DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x10AD JUMPI DUP2 PUSH1 0x0 SLOAD EQ PUSH2 0x10F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1122 JUMPI PUSH1 0x40 MLOAD PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x1143 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB562E8DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1150 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP6 MUL ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL PUSH1 0x1 DUP5 EQ PUSH1 0xE1 SHL OR OR PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP1 DUP3 DUP2 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP4 ADD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 DUP1 DUP3 LT PUSH2 0x119A JUMPI PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB36 DUP2 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1234 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x121C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x909 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x125D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB36 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D5 DUP4 PUSH2 0x129D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1301 DUP5 PUSH2 0x129D JUMP JUMPDEST SWAP3 POP PUSH2 0x130F PUSH1 0x20 DUP6 ADD PUSH2 0x129D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133B DUP4 PUSH2 0x129D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x138C JUMPI PUSH2 0x138C PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13B4 JUMPI PUSH2 0x13B4 PUSH2 0x135B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x13CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF74 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB36 DUP3 PUSH2 0x129D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x146A DUP6 PUSH2 0x129D JUMP JUMPDEST SWAP4 POP PUSH2 0x1478 PUSH1 0x20 DUP7 ADD PUSH2 0x129D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x149B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x14AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14BB DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1371 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E3 DUP4 PUSH2 0x129D JUMP JUMPDEST SWAP2 POP PUSH2 0x14F1 PUSH1 0x20 DUP5 ADD PUSH2 0x129D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x150E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x152E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1590 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6A1 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x159C JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15C9 JUMPI PUSH2 0x15C9 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x15DD DUP2 PUSH2 0x15D7 DUP5 SLOAD PUSH2 0x14FA JUMP JUMPDEST DUP5 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1612 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x15FA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1641 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1622 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x165F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1698 JUMPI PUSH2 0x1698 PUSH2 0x166F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 PUSH2 0x16B0 DUP3 DUP6 DUP4 DUP11 ADD PUSH2 0x1219 JUMP JUMPDEST DUP6 MLOAD SWAP2 DUP5 ADD SWAP2 PUSH2 0x16C3 DUP2 DUP5 DUP5 DUP11 ADD PUSH2 0x1219 JUMP JUMPDEST DUP6 SLOAD SWAP3 ADD SWAP2 PUSH1 0x0 SWAP1 PUSH2 0x16D4 DUP2 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x16EC JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1701 JUMPI PUSH2 0x172D JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x172D JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1725 JUMPI DUP2 SLOAD DUP10 DUP3 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP8 ADD PUSH2 0x170C JUMP JUMPDEST POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1770 SWAP1 DUP4 ADD DUP5 PUSH2 0x1245 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x178C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB36 DUP2 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x17A9 JUMPI PUSH2 0x17A9 PUSH2 0x166F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x17D5 JUMPI PUSH2 0x17D5 PUSH2 0x17B0 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x17EC JUMPI PUSH2 0x17EC PUSH2 0x166F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1800 JUMPI PUSH2 0x1800 PUSH2 0x17B0 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xB2 0x4C 0xD5 PUSH29 0xC0D80B8A4D1238E766085B31502AED053164D5211B96E172F6E6AE6473 PUSH16 0x6C634300080F00330000000000000000 ",
							"sourceMap": "332:2659:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2673:204;;;;;;:::i;:::-;;:::i;:::-;;;565:14:10;;558:22;540:41;;528:2;513:18;2673:204:3;;;;;;;;11161:98:4;;;:::i;:::-;;;;;;;:::i;13048:200::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:10;;;1674:51;;1662:2;1647:18;13048:200:4;1528:203:10;12611:376:4;;;;;;:::i;:::-;;:::i;:::-;;4736:309;2977:1:3;4998:12:4;4789:7;4982:13;:28;-1:-1:-1;;4982:46:4;4736:309;;;2319:25:10;;;2307:2;2292:18;4736:309:4;2173:177:10;22055:2739:4;;;;;;:::i;:::-;;:::i;1154:179:3:-;;;;;;:::i;:::-;;:::i;13912::4:-;;;;;;:::i;:::-;;:::i;513:92:6:-;;;;;;:::i;:::-;;:::i;1449:102:3:-;;;;;;:::i;:::-;;:::i;10957:142:4:-;;;;;;:::i;:::-;;:::i;6319:221::-;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;1036:85::-;1108:6;;-1:-1:-1;;;;;1108:6:0;1036:85;;11323:102:4;;;:::i;2012:226:3:-;;;;;;:::i;:::-;;:::i;13315:303:4:-;;;;;;:::i;:::-;;:::i;2246:106:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;2324:20:3;2300:4;2324:20;;;:12;:20;;;;;;;;;2246:106;14157:388:4;;;;;;:::i;:::-;;:::i;507:37:3:-;;;:::i;1559:444::-;;;;;;:::i;:::-;;:::i;551:40::-;;587:4;551:40;;13684:162:4;;;;;;:::i;:::-;-1:-1:-1;;;;;13804:25:4;;;13781:4;13804:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;13684:162;1918:198:0;;;;;;:::i;:::-;;:::i;2673:204:3:-;2804:4;2833:36;2857:11;2833:23;:36::i;:::-;2826:43;2673:204;-1:-1:-1;;2673:204:3:o;11161:98:4:-;11215:13;11247:5;11240:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11161:98;:::o;13048:200::-;13116:7;13140:16;13148:7;13140;:16::i;:::-;13135:64;;13165:34;;-1:-1:-1;;;13165:34:4;;;;;;;;;;;13135:64;-1:-1:-1;13217:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;13217:24:4;;13048:200::o;12611:376::-;12683:13;12699:16;12707:7;12699;:16::i;:::-;12683:32;-1:-1:-1;32960:10:4;-1:-1:-1;;;;;12730:28:4;;;12726:172;;12777:44;12794:5;32960:10;13684:162;:::i;12777:44::-;12772:126;;12848:35;;-1:-1:-1;;;12848:35:4;;;;;;;;;;;12772:126;12908:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;12908:29:4;-1:-1:-1;;;;;12908:29:4;;;;;;;;;12952:28;;12908:24;;12952:28;;;;;;;12673:314;12611:376;;:::o;22055:2739::-;22184:27;22214;22233:7;22214:18;:27::i;:::-;22184:57;;22297:4;-1:-1:-1;;;;;22256:45:4;22272:19;-1:-1:-1;;;;;22256:45:4;;22252:86;;22310:28;;-1:-1:-1;;;22310:28:4;;;;;;;;;;;22252:86;22350:27;20821:21;;;20652:15;20862:4;20855:36;20943:4;20927:21;;21031:26;;22531:62;21031:26;22567:4;32960:10;22573:19;-1:-1:-1;;;;;21620:31:4;;;21468:26;;21745:19;;21766:30;;21742:55;;21181:632;22531:62;22526:173;;22612:43;22629:4;32960:10;13684:162;:::i;22612:43::-;22607:92;;22664:35;;-1:-1:-1;;;22664:35:4;;;;;;;;;;;22607:92;-1:-1:-1;;;;;22714:16:4;;22710:52;;22739:23;;-1:-1:-1;;;22739:23:4;;;;;;;;;;;22710:52;22773:43;22795:4;22801:2;22805:7;22814:1;22773:21;:43::i;:::-;22905:15;22902:157;;;23043:1;23022:19;23015:30;22902:157;-1:-1:-1;;;;;23429:24:4;;;;;;;:18;:24;;;;;;23427:26;;-1:-1:-1;;23427:26:4;;;23497:22;;;;;;;;;23495:24;;-1:-1:-1;23495:24:4;;;10863:11;10839:22;10835:40;10822:62;-1:-1:-1;;;10822:62:4;23783:26;;;;:17;:26;;;;;:171;;;;-1:-1:-1;;;24071:46:4;;:51;;24067:616;;24174:1;24164:11;;24142:19;24295:30;;;:17;:30;;;;;;:35;;24291:378;;24431:13;;24416:11;:28;24412:239;;24576:30;;;;:17;:30;;;;;:52;;;24412:239;24124:559;24067:616;24727:7;24723:2;-1:-1:-1;;;;;24708:27:4;24717:4;-1:-1:-1;;;;;24708:27:4;;;;;;;;;;;24745:42;22174:2620;;;22055:2739;;;:::o;1154:179:3:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;32960:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1236:20:3;::::1;;::::0;;;:12:::1;:20;::::0;;;;;;;;:30;;-1:-1:-1;;1236:30:3::1;::::0;::::1;;::::0;;::::1;::::0;;;1282:43;;540:41:10;;;1297:10:3::1;::::0;1282:43:::1;::::0;513:18:10;1282:43:3::1;;;;;;;;1154:179:::0;;:::o;13912::4:-;14045:39;14062:4;14068:2;14072:7;14045:39;;;;;;;;;;;;:16;:39::i;:::-;13912:179;;;:::o;513:92:6:-;578:20;584:7;593:4;578:5;:20::i;:::-;513:92;:::o;1449:102:3:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;32960:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1523:7:3::1;:20;1533:10:::0;1523:7;:20:::1;:::i;:::-;;1449:102:::0;:::o;10957:142:4:-;11021:7;11063:27;11082:7;11063:18;:27::i;6319:221::-;6383:7;-1:-1:-1;;;;;6406:19:4;;6402:60;;6434:28;;-1:-1:-1;;;6434:28:4;;;;;;;;;;;6402:60;-1:-1:-1;;;;;;6479:25:4;;;;;:18;:25;;;;;;1022:13;6479:54;;6319:221::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;32960:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;11323:102:4:-;11379:13;11411:7;11404:14;;;;;:::i;2012:226:3:-;2068:10;2300:4;2324:20;;;:12;:20;;;;;;;;735:49;;;;-1:-1:-1;;;735:49:3;;8545:2:10;735:49:3;;;8527:21:10;8584:2;8564:18;;;8557:30;-1:-1:-1;;;8603:18:10;;;8596:50;8663:18;;735:49:3;8343:344:10;735:49:3;2091:19:::1;2113:13;2977:1:::0;4998:12:4;4789:7;4982:13;-1:-1:-1;;4982:28:4;;;:46;;4736:309;2113:13:3::1;2091:35:::0;-1:-1:-1;587:4:3::1;2145:20;2159:6:::0;2091:35;2145:20:::1;:::i;:::-;:33;;2137:61;;;::::0;-1:-1:-1;;;2137:61:3;;9159:2:10;2137:61:3::1;::::0;::::1;9141:21:10::0;9198:2;9178:18;;;9171:30;-1:-1:-1;;;9217:18:10;;;9210:45;9272:18;;2137:61:3::1;8957:339:10::0;2137:61:3::1;2209:21;2219:2;2223:6;2209:9;:21::i;:::-;2080:158;2012:226:::0;;;:::o;13315:303:4:-;32960:10;-1:-1:-1;;;;;13413:31:4;;;13409:61;;13453:17;;-1:-1:-1;;;13453:17:4;;;;;;;;;;;13409:61;32960:10;13481:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;13481:49:4;;;;;;;;;;;;:60;;-1:-1:-1;;13481:60:4;;;;;;;;;;13556:55;;540:41:10;;;13481:49:4;;32960:10;13556:55;;513:18:10;13556:55:4;400:187:10;14157:388:4;14318:31;14331:4;14337:2;14341:7;14318:12;:31::i;:::-;-1:-1:-1;;;;;14363:14:4;;;:19;14359:180;;14401:56;14432:4;14438:2;14442:7;14451:5;14401:30;:56::i;:::-;14396:143;;14484:40;;-1:-1:-1;;;14484:40:4;;;;;;;;;;;507:37:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1559:444::-;1650:13;1697:16;1705:7;1697;:16::i;:::-;1675:113;;;;-1:-1:-1;;;1675:113:3;;9503:2:10;1675:113:3;;;9485:21:10;9542:2;9522:18;;;9515:30;9581:34;9561:18;;;9554:62;-1:-1:-1;;;9632:18:10;;;9625:45;9687:19;;1675:113:3;9301:411:10;1675:113:3;1801:28;1832:10;:8;:10::i;:::-;1801:41;;1891:1;1866:14;1860:28;:32;:135;;;;;;;;;;;;;;;;;1929:14;1945:18;:7;:16;:18::i;:::-;1965:13;1912:67;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1860:135;1853:142;1559:444;-1:-1:-1;;;1559:444:3:o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;32960:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;11154:2:10;1998:73:0::1;::::0;::::1;11136:21:10::0;11193:2;11173:18;;;11166:30;11232:34;11212:18;;;11205:62;-1:-1:-1;;;11283:18:10;;;11276:36;11329:19;;1998:73:0::1;10952:402:10::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;5653:607:4:-:0;5738:4;-1:-1:-1;;;;;;;;;6033:25:4;;;;:101;;-1:-1:-1;;;;;;;;;;6109:25:4;;;6033:101;:177;;;-1:-1:-1;;;;;;;;6185:25:4;-1:-1:-1;;;6185:25:4;;5653:607::o;14791:268::-;14848:4;14902:7;2977:1:3;14883:26:4;;:65;;;;;14935:13;;14925:7;:23;14883:65;:150;;;;-1:-1:-1;;14985:26:4;;;;:17;:26;;;;;;-1:-1:-1;;;14985:43:4;:48;;14791:268::o;7949:1105::-;8016:7;8050;;2977:1:3;8096:23:4;8092:898;;8148:13;;8141:4;:20;8137:853;;;8185:14;8202:23;;;:17;:23;;;;;;;-1:-1:-1;;;8289:23:4;;:28;;8285:687;;8800:111;8807:6;8817:1;8807:11;8800:111;;-1:-1:-1;;;8877:6:4;8859:25;;;;:17;:25;;;;;;8800:111;;8285:687;8163:827;8137:853;9016:31;;-1:-1:-1;;;9016:31:4;;;;;;;;;;;2360:237:3;2529:60;2012:226;25171:2997:4;25250:27;25280;25299:7;25280:18;:27::i;:::-;25250:57;-1:-1:-1;25250:57:4;25318:12;;25438:28;25458:7;20528:27;20821:21;;;20652:15;20862:4;20855:36;20943:4;20927:21;;21031:26;;20927:21;;20436:637;25438:28;25381:85;;;;25481:13;25477:306;;;25600:62;25619:15;25636:4;32960:10;25642:19;32874:103;25600:62;25595:177;;25685:43;25702:4;32960:10;13684:162;:::i;25685:43::-;25680:92;;25737:35;;-1:-1:-1;;;25737:35:4;;;;;;;;;;;25680:92;25793:51;25815:4;25829:1;25833:7;25842:1;25793:21;:51::i;:::-;25933:15;25930:157;;;26071:1;26050:19;26043:30;25930:157;-1:-1:-1;;;;;26675:24:4;;;;;;:18;:24;;;;;:59;;26703:31;26675:59;;;10863:11;10839:22;10835:40;10822:62;-1:-1:-1;;;10822:62:4;26965:26;;;;:17;:26;;;;;:200;;;;-1:-1:-1;;;27282:46:4;;:51;;27278:616;;27385:1;27375:11;;27353:19;27506:30;;;:17;:30;;;;;;:35;;27502:378;;27642:13;;27627:11;:28;27623:239;;27787:30;;;;:17;:30;;;;;:52;;;27623:239;27335:559;27278:616;27919:35;;27946:7;;27942:1;;-1:-1:-1;;;;;27919:35:4;;;;;27942:1;;27919:35;-1:-1:-1;;28137:12:4;:14;;;;;;-1:-1:-1;;;;25171:2997:4:o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;15138:102:4:-;15206:27;15216:2;15220:8;15206:27;;;;;;;;;;;;:9;:27::i;28649:697::-;28827:88;;-1:-1:-1;;;28827:88:4;;28807:4;;-1:-1:-1;;;;;28827:45:4;;;;;:88;;32960:10;;28894:4;;28900:7;;28909:5;;28827:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28827:88:4;;;;;;;;-1:-1:-1;;28827:88:4;;;;;;;;;;;;:::i;:::-;;;28823:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29105:6;:13;29122:1;29105:18;29101:229;;29150:40;;-1:-1:-1;;;29150:40:4;;;;;;;;;;;29101:229;29290:6;29284:13;29275:6;29271:2;29267:15;29260:38;28823:517;-1:-1:-1;;;;;;28983:64:4;-1:-1:-1;;;28983:64:4;;-1:-1:-1;28823:517:4;28649:697;;;;;;:::o;1341:100:3:-;1393:13;1426:7;1419:14;;;;;:::i;328:703:2:-;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:2;;;;;;;;;;;;-1:-1:-1;;;627:10:2;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:2;;-1:-1:-1;773:2:2;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:2;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:2;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:2;;;;;;;;-1:-1:-1;972:11:2;981:2;972:11;;:::i;:::-;;;844:150;;15641:661:4;15759:19;15765:2;15769:8;15759:5;:19::i;:::-;-1:-1:-1;;;;;15817:14:4;;;:19;15813:473;;15856:11;15870:13;15917:14;;;15949:229;15979:62;16018:1;16022:2;16026:7;;;;;;16035:5;15979:30;:62::i;:::-;15974:165;;16076:40;;-1:-1:-1;;;16076:40:4;;;;;;;;;;;15974:165;16173:3;16165:5;:11;15949:229;;16258:3;16241:13;;:20;16237:34;;16263:8;;;16237:34;15838:448;;15641:661;;;:::o;16563:1492::-;16627:20;16650:13;-1:-1:-1;;;;;16677:16:4;;16673:48;;16702:19;;-1:-1:-1;;;16702:19:4;;;;;;;;;;;16673:48;16735:8;16747:1;16735:13;16731:44;;16757:18;;-1:-1:-1;;;16757:18:4;;;;;;;;;;;16731:44;16786:61;16816:1;16820:2;16824:12;16838:8;16786:21;:61::i;:::-;-1:-1:-1;;;;;17250:22:4;;;;;;:18;:22;;1156:2;17250:22;;:70;;17288:31;17276:44;;17250:70;;;10863:11;10839:22;10835:40;-1:-1:-1;12522:15:4;;12497:23;12493:45;10832:51;10822:62;17556:31;;;;:17;:31;;;;;:170;17574:12;17799:23;;;17836:99;17862:35;;17887:9;;;;;-1:-1:-1;;;;;17862:35:4;;;17879:1;;17862:35;;17879:1;;17862:35;17930:3;17920:7;:13;17836:99;;17949:13;:19;-1:-1:-1;13912:179:4;;;:::o;14:131:10:-;-1:-1:-1;;;;;;88:32:10;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:10;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:10;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:10:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:10;;1343:180;-1:-1:-1;1343:180:10:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:10;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:10:o;2355:328::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2540:29;2559:9;2540:29;:::i;:::-;2530:39;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2673:2;2662:9;2658:18;2645:32;2635:42;;2355:328;;;;;:::o;2688:347::-;2753:6;2761;2814:2;2802:9;2793:7;2789:23;2785:32;2782:52;;;2830:1;2827;2820:12;2782:52;2853:29;2872:9;2853:29;:::i;:::-;2843:39;;2932:2;2921:9;2917:18;2904:32;2979:5;2972:13;2965:21;2958:5;2955:32;2945:60;;3001:1;2998;2991:12;2945:60;3024:5;3014:15;;;2688:347;;;;;:::o;3040:127::-;3101:10;3096:3;3092:20;3089:1;3082:31;3132:4;3129:1;3122:15;3156:4;3153:1;3146:15;3172:632;3237:5;3267:18;3308:2;3300:6;3297:14;3294:40;;;3314:18;;:::i;:::-;3389:2;3383:9;3357:2;3443:15;;-1:-1:-1;;3439:24:10;;;3465:2;3435:33;3431:42;3419:55;;;3489:18;;;3509:22;;;3486:46;3483:72;;;3535:18;;:::i;:::-;3575:10;3571:2;3564:22;3604:6;3595:15;;3634:6;3626;3619:22;3674:3;3665:6;3660:3;3656:16;3653:25;3650:45;;;3691:1;3688;3681:12;3650:45;3741:6;3736:3;3729:4;3721:6;3717:17;3704:44;3796:1;3789:4;3780:6;3772;3768:19;3764:30;3757:41;;;;3172:632;;;;;:::o;3809:451::-;3878:6;3931:2;3919:9;3910:7;3906:23;3902:32;3899:52;;;3947:1;3944;3937:12;3899:52;3987:9;3974:23;4020:18;4012:6;4009:30;4006:50;;;4052:1;4049;4042:12;4006:50;4075:22;;4128:4;4120:13;;4116:27;-1:-1:-1;4106:55:10;;4157:1;4154;4147:12;4106:55;4180:74;4246:7;4241:2;4228:16;4223:2;4219;4215:11;4180:74;:::i;4265:186::-;4324:6;4377:2;4365:9;4356:7;4352:23;4348:32;4345:52;;;4393:1;4390;4383:12;4345:52;4416:29;4435:9;4416:29;:::i;4456:667::-;4551:6;4559;4567;4575;4628:3;4616:9;4607:7;4603:23;4599:33;4596:53;;;4645:1;4642;4635:12;4596:53;4668:29;4687:9;4668:29;:::i;:::-;4658:39;;4716:38;4750:2;4739:9;4735:18;4716:38;:::i;:::-;4706:48;;4801:2;4790:9;4786:18;4773:32;4763:42;;4856:2;4845:9;4841:18;4828:32;4883:18;4875:6;4872:30;4869:50;;;4915:1;4912;4905:12;4869:50;4938:22;;4991:4;4983:13;;4979:27;-1:-1:-1;4969:55:10;;5020:1;5017;5010:12;4969:55;5043:74;5109:7;5104:2;5091:16;5086:2;5082;5078:11;5043:74;:::i;:::-;5033:84;;;4456:667;;;;;;;:::o;5128:260::-;5196:6;5204;5257:2;5245:9;5236:7;5232:23;5228:32;5225:52;;;5273:1;5270;5263:12;5225:52;5296:29;5315:9;5296:29;:::i;:::-;5286:39;;5344:38;5378:2;5367:9;5363:18;5344:38;:::i;:::-;5334:48;;5128:260;;;;;:::o;5393:380::-;5472:1;5468:12;;;;5515;;;5536:61;;5590:4;5582:6;5578:17;5568:27;;5536:61;5643:2;5635:6;5632:14;5612:18;5609:38;5606:161;;5689:10;5684:3;5680:20;5677:1;5670:31;5724:4;5721:1;5714:15;5752:4;5749:1;5742:15;5606:161;;5393:380;;;:::o;5778:356::-;5980:2;5962:21;;;5999:18;;;5992:30;6058:34;6053:2;6038:18;;6031:62;6125:2;6110:18;;5778:356::o;6265:545::-;6367:2;6362:3;6359:11;6356:448;;;6403:1;6428:5;6424:2;6417:17;6473:4;6469:2;6459:19;6543:2;6531:10;6527:19;6524:1;6520:27;6514:4;6510:38;6579:4;6567:10;6564:20;6561:47;;;-1:-1:-1;6602:4:10;6561:47;6657:2;6652:3;6648:12;6645:1;6641:20;6635:4;6631:31;6621:41;;6712:82;6730:2;6723:5;6720:13;6712:82;;;6775:17;;;6756:1;6745:13;6712:82;;6986:1352;7112:3;7106:10;7139:18;7131:6;7128:30;7125:56;;;7161:18;;:::i;:::-;7190:97;7280:6;7240:38;7272:4;7266:11;7240:38;:::i;:::-;7234:4;7190:97;:::i;:::-;7342:4;;7406:2;7395:14;;7423:1;7418:663;;;;8125:1;8142:6;8139:89;;;-1:-1:-1;8194:19:10;;;8188:26;8139:89;-1:-1:-1;;6943:1:10;6939:11;;;6935:24;6931:29;6921:40;6967:1;6963:11;;;6918:57;8241:81;;7388:944;;7418:663;6212:1;6205:14;;;6249:4;6236:18;;-1:-1:-1;;7454:20:10;;;7572:236;7586:7;7583:1;7580:14;7572:236;;;7675:19;;;7669:26;7654:42;;7767:27;;;;7735:1;7723:14;;;;7602:19;;7572:236;;;7576:3;7836:6;7827:7;7824:19;7821:201;;;7897:19;;;7891:26;-1:-1:-1;;7980:1:10;7976:14;;;7992:3;7972:24;7968:37;7964:42;7949:58;7934:74;;7821:201;-1:-1:-1;;;;;8068:1:10;8052:14;;;8048:22;8035:36;;-1:-1:-1;6986:1352:10:o;8692:127::-;8753:10;8748:3;8744:20;8741:1;8734:31;8784:4;8781:1;8774:15;8808:4;8805:1;8798:15;8824:128;8864:3;8895:1;8891:6;8888:1;8885:13;8882:39;;;8901:18;;:::i;:::-;-1:-1:-1;8937:9:10;;8824:128::o;9717:1230::-;9941:3;9979:6;9973:13;10005:4;10018:51;10062:6;10057:3;10052:2;10044:6;10040:15;10018:51;:::i;:::-;10132:13;;10091:16;;;;10154:55;10132:13;10091:16;10176:15;;;10154:55;:::i;:::-;10298:13;;10231:20;;;10271:1;;10336:36;10298:13;10336:36;:::i;:::-;10391:1;10408:18;;;10435:141;;;;10590:1;10585:337;;;;10401:521;;10435:141;-1:-1:-1;;10470:24:10;;10456:39;;10547:16;;10540:24;10526:39;;10515:51;;;-1:-1:-1;10435:141:10;;10585:337;10616:6;10613:1;10606:17;10664:2;10661:1;10651:16;10689:1;10703:169;10717:8;10714:1;10711:15;10703:169;;;10799:14;;10784:13;;;10777:37;10842:16;;;;10734:10;;10703:169;;;10707:3;;10903:8;10896:5;10892:20;10885:27;;10401:521;-1:-1:-1;10938:3:10;;9717:1230;-1:-1:-1;;;;;;;;;;9717:1230:10:o;11359:489::-;-1:-1:-1;;;;;11628:15:10;;;11610:34;;11680:15;;11675:2;11660:18;;11653:43;11727:2;11712:18;;11705:34;;;11775:3;11770:2;11755:18;;11748:31;;;11553:4;;11796:46;;11822:19;;11814:6;11796:46;:::i;:::-;11788:54;11359:489;-1:-1:-1;;;;;;11359:489:10:o;11853:249::-;11922:6;11975:2;11963:9;11954:7;11950:23;11946:32;11943:52;;;11991:1;11988;11981:12;11943:52;12023:9;12017:16;12042:30;12066:5;12042:30;:::i;12107:135::-;12146:3;12167:17;;;12164:43;;12187:18;;:::i;:::-;-1:-1:-1;12234:1:10;12223:13;;12107:135::o;12247:127::-;12308:10;12303:3;12299:20;12296:1;12289:31;12339:4;12336:1;12329:15;12363:4;12360:1;12353:15;12379:120;12419:1;12445;12435:35;;12450:18;;:::i;:::-;-1:-1:-1;12484:9:10;;12379:120::o;12504:125::-;12544:4;12572:1;12569;12566:8;12563:34;;;12577:18;;:::i;:::-;-1:-1:-1;12614:9:10;;12504:125::o;12634:112::-;12666:1;12692;12682:35;;12697:18;;:::i;:::-;-1:-1:-1;12731:9:10;;12634:112::o;12751:127::-;12812:10;12807:3;12803:20;12800:1;12793:31;12843:4;12840:1;12833:15;12867:4;12864:1;12857:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1245000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2728",
								"baseExtension()": "infinite",
								"burn(uint256)": "infinite",
								"getApproved(uint256)": "6959",
								"isApprovedForAll(address,address)": "infinite",
								"isMinter(address)": "2671",
								"maxSupply()": "283",
								"name()": "infinite",
								"owner()": "2376",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "28140",
								"safeMint(address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setAllowMinter(address,bool)": "28677",
								"setApprovalForAll(address,bool)": "26748",
								"setBaseURI(string)": "infinite",
								"supportsInterface(bytes4)": "565",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4508",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28444"
							},
							"internal": {
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "29",
								"_startTokenId()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 507,
									"end": 544,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 332,
									"end": 2991,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 507,
									"end": 544,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 507,
									"end": 544,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 332,
									"end": 2991,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 507,
									"end": 544,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 507,
									"end": 544,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 507,
									"end": 544,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "173539B7B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 507,
									"end": 544,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 507,
									"end": 544,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 507,
									"end": 544,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 507,
									"end": 544,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 507,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 507,
									"end": 544,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 507,
									"end": 544,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 507,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 507,
									"end": 544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 507,
									"end": 544,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 507,
									"end": 544,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 507,
									"end": 544,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 812,
									"end": 1146,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E414741204B494453"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E41474B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4060,
									"end": 4065,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4057,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 4052,
									"end": 4065,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4075,
									"end": 4082,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 4085,
									"end": 4092,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4075,
									"end": 4082,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 4075,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2977,
									"end": 2978,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4102,
									"end": 4115,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 921,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 944,
									"end": 968,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 944,
									"end": 954,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 944,
									"end": 968,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 944,
									"end": 968,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 944,
									"end": 968,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1016,
									"end": 1047,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1031,
									"end": 1041,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1042,
									"end": 1046,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1016,
									"end": 1030,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1016,
									"end": 1047,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1016,
									"end": 1047,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1016,
									"end": 1047,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1109,
									"end": 1138,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1118,
									"end": 1133,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1134,
									"end": 1137,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "6F"
								},
								{
									"begin": 1109,
									"end": 1117,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1109,
									"end": 1138,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1109,
									"end": 1138,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1109,
									"end": 1138,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 812,
									"end": 1146,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 332,
									"end": 2991,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "133"
								},
								{
									"begin": 332,
									"end": 2991,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1449,
									"end": 1551,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1449,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1248,
									"end": 1271,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4364,
									"end": 4366,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4346,
									"end": 4367,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4346,
									"end": 4367,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4346,
									"end": 4367,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4383,
									"end": 4401,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4383,
									"end": 4401,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4383,
									"end": 4401,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4376,
									"end": 4406,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 4422,
									"end": 4440,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 4422,
									"end": 4440,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4422,
									"end": 4440,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4415,
									"end": 4477,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4494,
									"end": 4512,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 4494,
									"end": 4512,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1523,
									"end": 1530,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1523,
									"end": 1543,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1533,
									"end": 1543,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1523,
									"end": 1530,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1523,
									"end": 1543,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1523,
									"end": 1543,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1523,
									"end": 1543,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1523,
									"end": 1543,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1523,
									"end": 1543,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1449,
									"end": 1551,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1449,
									"end": 1551,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1154,
									"end": 1333,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1154,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1248,
									"end": 1271,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4364,
									"end": 4366,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4346,
									"end": 4367,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4346,
									"end": 4367,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4346,
									"end": 4367,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4383,
									"end": 4401,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4383,
									"end": 4401,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4383,
									"end": 4401,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4376,
									"end": 4406,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 4422,
									"end": 4440,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 4422,
									"end": 4440,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4422,
									"end": 4440,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4415,
									"end": 4477,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4494,
									"end": 4512,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 4494,
									"end": 4512,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 4162,
									"end": 4518,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1236,
									"end": 1256,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1256,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1256,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1236,
									"end": 1256,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1256,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1256,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1248,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1236,
									"end": 1256,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1236,
									"end": 1256,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1256,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1256,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1256,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1236,
									"end": 1256,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1256,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1256,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1256,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1266,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1266,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1236,
									"end": 1266,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1266,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1266,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1266,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1266,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1266,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1266,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1266,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1266,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1266,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1282,
									"end": 1325,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1282,
									"end": 1325,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4663,
									"end": 4704,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4663,
									"end": 4704,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4663,
									"end": 4704,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1297,
									"end": 1307,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1307,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1282,
									"end": 1325,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "3C49A0D2DCD603245C20EB1985825D770748295CD570DE6D24861080451BBD41"
								},
								{
									"begin": 1282,
									"end": 1325,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4636,
									"end": 4654,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1282,
									"end": 1325,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1282,
									"end": 1325,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1282,
									"end": 1325,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1282,
									"end": 1325,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1282,
									"end": 1325,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1282,
									"end": 1325,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1282,
									"end": 1325,
									"modifierDepth": 1,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 1154,
									"end": 1333,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1154,
									"end": 1333,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1154,
									"end": 1333,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2012,
									"end": 2238,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 2012,
									"end": 2238,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2068,
									"end": 2078,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2324,
									"end": 2344,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2324,
									"end": 2344,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2324,
									"end": 2344,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2324,
									"end": 2336,
									"name": "PUSH",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 2324,
									"end": 2344,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2324,
									"end": 2344,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2324,
									"end": 2344,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2324,
									"end": 2344,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2324,
									"end": 2344,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 2324,
									"end": 2344,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2324,
									"end": 2344,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2324,
									"end": 2344,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 735,
									"end": 784,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 735,
									"end": 784,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 735,
									"end": 784,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 735,
									"end": 784,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 735,
									"end": 784,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 735,
									"end": 784,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4917,
									"end": 4919,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 735,
									"end": 784,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 735,
									"end": 784,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 735,
									"end": 784,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4899,
									"end": 4920,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4956,
									"end": 4958,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 4936,
									"end": 4954,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4936,
									"end": 4954,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4936,
									"end": 4954,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4929,
									"end": 4959,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4995,
									"end": 5017,
									"name": "PUSH",
									"source": 10,
									"value": "596F7520617265206E6F742061206D696E746572000000000000000000000000"
								},
								{
									"begin": 4975,
									"end": 4993,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 4975,
									"end": 4993,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4975,
									"end": 4993,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4968,
									"end": 5018,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 735,
									"end": 784,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 4715,
									"end": 5059,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 735,
									"end": 784,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 735,
									"end": 784,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2091,
									"end": 2110,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2113,
									"end": 2126,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 2977,
									"end": 2978,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4998,
									"end": 5010,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 4789,
									"end": 4796,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4982,
									"end": 4995,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4982,
									"end": 5010,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4982,
									"end": 5010,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4982,
									"end": 5010,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 4982,
									"end": 5028,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4982,
									"end": 5028,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4736,
									"end": 5045,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2113,
									"end": 2126,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 2113,
									"end": 2126,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2091,
									"end": 2126,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 587,
									"end": 591,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "457"
								},
								{
									"begin": 2145,
									"end": 2165,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 2159,
									"end": 2165,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2091,
									"end": 2126,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2145,
									"end": 2165,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 2145,
									"end": 2165,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2145,
									"end": 2165,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 2145,
									"end": 2165,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2145,
									"end": 2178,
									"modifierDepth": 1,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2145,
									"end": 2178,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2137,
									"end": 2198,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 2137,
									"end": 2198,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2137,
									"end": 2198,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2137,
									"end": 2198,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2137,
									"end": 2198,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2137,
									"end": 2198,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5496,
									"end": 5498,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2137,
									"end": 2198,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2137,
									"end": 2198,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2137,
									"end": 2198,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5478,
									"end": 5499,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5535,
									"end": 5537,
									"name": "PUSH",
									"source": 10,
									"value": "F"
								},
								{
									"begin": 5515,
									"end": 5533,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5515,
									"end": 5533,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5515,
									"end": 5533,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5508,
									"end": 5538,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4F766572206D617820737570706C79"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "88"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5554,
									"end": 5572,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 5554,
									"end": 5572,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5572,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5547,
									"end": 5592,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5609,
									"end": 5627,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 5609,
									"end": 5627,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2137,
									"end": 2198,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 5294,
									"end": 5633,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2137,
									"end": 2198,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 2137,
									"end": 2198,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2209,
									"end": 2230,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 2219,
									"end": 2221,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2223,
									"end": 2229,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2209,
									"end": 2218,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 2209,
									"end": 2230,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2209,
									"end": 2230,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 2209,
									"end": 2230,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2080,
									"end": 2238,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2012,
									"end": 2238,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2012,
									"end": 2238,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2012,
									"end": 2238,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2012,
									"end": 2238,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 15138,
									"end": 15240,
									"name": "tag",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 15138,
									"end": 15240,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 15216,
									"end": 15218,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 15220,
									"end": 15228,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 15206,
									"end": 15215,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 15206,
									"end": 15215,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 15206,
									"end": 15215,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 15206,
									"end": 15233,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 15206,
									"end": 15233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 15641,
									"end": 16302,
									"name": "tag",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 15641,
									"end": 16302,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 15759,
									"end": 15778,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 15765,
									"end": 15767,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 15769,
									"end": 15777,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 15759,
									"end": 15764,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 15759,
									"end": 15778,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 15759,
									"end": 15778,
									"name": "tag",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 15759,
									"end": 15778,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15817,
									"end": 15831,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 15817,
									"end": 15831,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 15817,
									"end": 15831,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 15817,
									"end": 15836,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 15813,
									"end": 16286,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 15813,
									"end": 16286,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 15856,
									"end": 15867,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 15870,
									"end": 15883,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 15917,
									"end": 15931,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 15917,
									"end": 15931,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 15917,
									"end": 15931,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 15949,
									"end": 16178,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 15949,
									"end": 16178,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 16026,
									"end": 16033,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 16026,
									"end": 16033,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 16026,
									"end": 16033,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 16026,
									"end": 16033,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 15979,
									"end": 16041,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 15979,
									"end": 16041,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 16018,
									"end": 16019,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 16018,
									"end": 16019,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 16022,
									"end": 16024,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 16022,
									"end": 16024,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 16035,
									"end": 16040,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 15979,
									"end": 16009,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 15979,
									"end": 16041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 15979,
									"end": 16041,
									"name": "tag",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 15979,
									"end": 16041,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 15974,
									"end": 16139,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 15974,
									"end": 16139,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 16076,
									"end": 16116,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 16076,
									"end": 16116,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "68D2BF6B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 16076,
									"end": 16116,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 16076,
									"end": 16116,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 16076,
									"end": 16116,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 16076,
									"end": 16116,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 16076,
									"end": 16116,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 16076,
									"end": 16116,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 16076,
									"end": 16116,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 16076,
									"end": 16116,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 16076,
									"end": 16116,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 16076,
									"end": 16116,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 16076,
									"end": 16116,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 15974,
									"end": 16139,
									"name": "tag",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 15974,
									"end": 16139,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 16173,
									"end": 16176,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 16165,
									"end": 16170,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 16165,
									"end": 16176,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 15949,
									"end": 16178,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 15949,
									"end": 16178,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 16258,
									"end": 16261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 16241,
									"end": 16254,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 16241,
									"end": 16254,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 16241,
									"end": 16261,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 16237,
									"end": 16271,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 16237,
									"end": 16271,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 16263,
									"end": 16271,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 16263,
									"end": 16271,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 16263,
									"end": 16271,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 16237,
									"end": 16271,
									"name": "tag",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 16237,
									"end": 16271,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 15838,
									"end": 16286,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 15838,
									"end": 16286,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 15813,
									"end": 16286,
									"name": "tag",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 15813,
									"end": 16286,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 15641,
									"end": 16302,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 15641,
									"end": 16302,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 15641,
									"end": 16302,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 15641,
									"end": 16302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 16563,
									"end": 18055,
									"name": "tag",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 16563,
									"end": 18055,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 16627,
									"end": 16647,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 16650,
									"end": 16663,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 16677,
									"end": 16693,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 16677,
									"end": 16693,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 16673,
									"end": 16721,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 16673,
									"end": 16721,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 16702,
									"end": 16721,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 16702,
									"end": 16721,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2E0763"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 16702,
									"end": 16721,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 16702,
									"end": 16721,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 16702,
									"end": 16721,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 16702,
									"end": 16721,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 16702,
									"end": 16721,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 16702,
									"end": 16721,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 16702,
									"end": 16721,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 16702,
									"end": 16721,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 16702,
									"end": 16721,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 16702,
									"end": 16721,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 16702,
									"end": 16721,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 16673,
									"end": 16721,
									"name": "tag",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 16673,
									"end": 16721,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 16735,
									"end": 16743,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 16747,
									"end": 16748,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 16735,
									"end": 16748,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 16731,
									"end": 16775,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 16731,
									"end": 16775,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 16757,
									"end": 16775,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 16757,
									"end": 16775,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B562E8DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 16757,
									"end": 16775,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 16757,
									"end": 16775,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 16757,
									"end": 16775,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 16757,
									"end": 16775,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 16757,
									"end": 16775,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 16757,
									"end": 16775,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 16757,
									"end": 16775,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 16757,
									"end": 16775,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 16757,
									"end": 16775,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 16757,
									"end": 16775,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 16757,
									"end": 16775,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 16731,
									"end": 16775,
									"name": "tag",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 16731,
									"end": 16775,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 16786,
									"end": 16847,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 16816,
									"end": 16817,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 16820,
									"end": 16822,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 16824,
									"end": 16836,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 16838,
									"end": 16846,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 16786,
									"end": 16807,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "85"
								},
								{
									"begin": 16786,
									"end": 16847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 16786,
									"end": 16847,
									"name": "tag",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 16786,
									"end": 16847,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17250,
									"end": 17272,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 17250,
									"end": 17272,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 17250,
									"end": 17272,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 17250,
									"end": 17272,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 17250,
									"end": 17272,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 17250,
									"end": 17272,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 17250,
									"end": 17268,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 17250,
									"end": 17272,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 17250,
									"end": 17272,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1156,
									"end": 1158,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 17250,
									"end": 17272,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 17250,
									"end": 17272,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 17250,
									"end": 17320,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 17250,
									"end": 17320,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 17288,
									"end": 17319,
									"name": "PUSH",
									"source": 4,
									"value": "10000000000000001"
								},
								{
									"begin": 17276,
									"end": 17320,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 17276,
									"end": 17320,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 17250,
									"end": 17320,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 17250,
									"end": 17320,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 17250,
									"end": 17320,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 10863,
									"end": 10874,
									"name": "TIMESTAMP",
									"source": 4
								},
								{
									"begin": 10839,
									"end": 10861,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 10835,
									"end": 10875,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 12522,
									"end": 12537,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 12522,
									"end": 12537,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 12497,
									"end": 12520,
									"name": "PUSH",
									"source": 4,
									"value": "E1"
								},
								{
									"begin": 12493,
									"end": 12538,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 10832,
									"end": 10883,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 10822,
									"end": 10884,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 17556,
									"end": 17587,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 17556,
									"end": 17587,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 17556,
									"end": 17587,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 17556,
									"end": 17587,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 17556,
									"end": 17573,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 17556,
									"end": 17587,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 17556,
									"end": 17587,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 17556,
									"end": 17587,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 17556,
									"end": 17587,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 17556,
									"end": 17587,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 17556,
									"end": 17726,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 17574,
									"end": 17586,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 17799,
									"end": 17822,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 17799,
									"end": 17822,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 17799,
									"end": 17822,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 17836,
									"end": 17935,
									"name": "tag",
									"source": 4,
									"value": "92"
								},
								{
									"begin": 17836,
									"end": 17935,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 17862,
									"end": 17897,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 17862,
									"end": 17897,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 17887,
									"end": 17896,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 17887,
									"end": 17896,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 17887,
									"end": 17896,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 17887,
									"end": 17896,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 17887,
									"end": 17896,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17862,
									"end": 17897,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 17862,
									"end": 17897,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 17862,
									"end": 17897,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 17879,
									"end": 17880,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 17879,
									"end": 17880,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 17862,
									"end": 17897,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 17862,
									"end": 17897,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 17879,
									"end": 17880,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 17879,
									"end": 17880,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 17862,
									"end": 17897,
									"name": "LOG4",
									"source": 4
								},
								{
									"begin": 17930,
									"end": 17933,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 17920,
									"end": 17927,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 17920,
									"end": 17933,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 17836,
									"end": 17935,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "92"
								},
								{
									"begin": 17836,
									"end": 17935,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 17949,
									"end": 17962,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 17949,
									"end": 17968,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15641,
									"end": 16302,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 15641,
									"end": 16302,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 15641,
									"end": 16302,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 15641,
									"end": 16302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 28649,
									"end": 29346,
									"name": "tag",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 28649,
									"end": 29346,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A85BD01"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 28807,
									"end": 28811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 28807,
									"end": 28811,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 28827,
									"end": 28872,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28872,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28872,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28872,
									"name": "PUSH",
									"source": 4,
									"value": "150B7A02"
								},
								{
									"begin": 28827,
									"end": 28872,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 28894,
									"end": 28898,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 28894,
									"end": 28898,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 28900,
									"end": 28907,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 28900,
									"end": 28907,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 28909,
									"end": 28914,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 28909,
									"end": 28914,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "101"
								},
								{
									"begin": 28827,
									"end": 28915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "tag",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "GAS",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "CALL",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "102"
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "103"
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "104"
								},
								{
									"begin": 28827,
									"end": 28915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "tag",
									"source": 4,
									"value": "103"
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "tag",
									"source": 4,
									"value": "102"
								},
								{
									"begin": 28827,
									"end": 28915,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "105"
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "110"
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "PUSH",
									"source": 4,
									"value": "3F"
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "RETURNDATACOPY",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "109"
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "tag",
									"source": 4,
									"value": "110"
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "tag",
									"source": 4,
									"value": "109"
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 29105,
									"end": 29111,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 29105,
									"end": 29118,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 29122,
									"end": 29123,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 29105,
									"end": 29123,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 29101,
									"end": 29330,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "111"
								},
								{
									"begin": 29101,
									"end": 29330,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 29150,
									"end": 29190,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 29150,
									"end": 29190,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "68D2BF6B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 29150,
									"end": 29190,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 29150,
									"end": 29190,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 29150,
									"end": 29190,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 29150,
									"end": 29190,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 29150,
									"end": 29190,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 29150,
									"end": 29190,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 29150,
									"end": 29190,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 29150,
									"end": 29190,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 29150,
									"end": 29190,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 29150,
									"end": 29190,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 29150,
									"end": 29190,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 29101,
									"end": 29330,
									"name": "tag",
									"source": 4,
									"value": "111"
								},
								{
									"begin": 29101,
									"end": 29330,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 29290,
									"end": 29296,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 29284,
									"end": 29297,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 29275,
									"end": 29281,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 29271,
									"end": 29273,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 29267,
									"end": 29282,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 29260,
									"end": 29298,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "tag",
									"source": 4,
									"value": "105"
								},
								{
									"begin": 28823,
									"end": 29340,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 28983,
									"end": 29047,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A85BD01"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 28983,
									"end": 29047,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 28983,
									"end": 29047,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 28649,
									"end": 29346,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 28649,
									"end": 29346,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 28649,
									"end": 29346,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 28649,
									"end": 29346,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 28649,
									"end": 29346,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 28649,
									"end": 29346,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 28649,
									"end": 29346,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2360,
									"end": 2597,
									"name": "tag",
									"source": 3,
									"value": "85"
								},
								{
									"begin": 2360,
									"end": 2597,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2529,
									"end": 2589,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 2557,
									"end": 2561,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2563,
									"end": 2565,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2567,
									"end": 2579,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2580,
									"end": 2588,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2529,
									"end": 2556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 2529,
									"end": 2556,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2529,
									"end": 2556,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2529,
									"end": 2556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551842"
								},
								{
									"begin": 2529,
									"end": 2556,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2529,
									"end": 2589,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2529,
									"end": 2589,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2529,
									"end": 2589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2735,
									"end": 2993,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 2735,
									"end": 2993,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2807,
									"end": 2808,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2817,
									"end": 2930,
									"name": "tag",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 2817,
									"end": 2930,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2831,
									"end": 2837,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2828,
									"end": 2829,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2825,
									"end": 2838,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2817,
									"end": 2930,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2817,
									"end": 2930,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 2817,
									"end": 2930,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2907,
									"end": 2918,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2907,
									"end": 2918,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2907,
									"end": 2918,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2901,
									"end": 2919,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2888,
									"end": 2899,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2888,
									"end": 2899,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2888,
									"end": 2899,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2881,
									"end": 2920,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2853,
									"end": 2855,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2846,
									"end": 2856,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2817,
									"end": 2930,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 2817,
									"end": 2930,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2817,
									"end": 2930,
									"name": "tag",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 2817,
									"end": 2930,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2948,
									"end": 2954,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2945,
									"end": 2946,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2942,
									"end": 2955,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2939,
									"end": 2987,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2939,
									"end": 2987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2939,
									"end": 2987,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2983,
									"end": 2984,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2965,
									"end": 2981,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2965,
									"end": 2981,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2958,
									"end": 2985,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2735,
									"end": 2993,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2998,
									"end": 3175,
									"name": "tag",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 2998,
									"end": 3175,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3077,
									"end": 3090,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3077,
									"end": 3090,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3119,
									"end": 3150,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3119,
									"end": 3150,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3109,
									"end": 3151,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3109,
									"end": 3151,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 3099,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 3099,
									"end": 3169,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3165,
									"end": 3166,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3163,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3155,
									"end": 3167,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3099,
									"end": 3169,
									"name": "tag",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 3099,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2998,
									"end": 3175,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2998,
									"end": 3175,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2998,
									"end": 3175,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2998,
									"end": 3175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3180,
									"end": 4157,
									"name": "tag",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 3180,
									"end": 4157,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3269,
									"end": 3275,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3277,
									"end": 3283,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3330,
									"end": 3332,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3318,
									"end": 3327,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3316,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3305,
									"end": 3328,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3301,
									"end": 3333,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 3298,
									"end": 3350,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3298,
									"end": 3350,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 3298,
									"end": 3350,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3346,
									"end": 3347,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3343,
									"end": 3344,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3336,
									"end": 3348,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3298,
									"end": 3350,
									"name": "tag",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 3298,
									"end": 3350,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3373,
									"end": 3389,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3373,
									"end": 3389,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3438,
									"end": 3452,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3438,
									"end": 3452,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3438,
									"end": 3452,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3435,
									"end": 3469,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3435,
									"end": 3469,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 3435,
									"end": 3469,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3465,
									"end": 3466,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3462,
									"end": 3463,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3455,
									"end": 3467,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3435,
									"end": 3469,
									"name": "tag",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 3435,
									"end": 3469,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3503,
									"end": 3509,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3492,
									"end": 3501,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3488,
									"end": 3510,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3478,
									"end": 3510,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3478,
									"end": 3510,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3548,
									"end": 3555,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3541,
									"end": 3545,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 3537,
									"end": 3539,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3546,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3529,
									"end": 3556,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 3519,
									"end": 3574,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 3519,
									"end": 3574,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3570,
									"end": 3571,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3567,
									"end": 3568,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3560,
									"end": 3572,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3519,
									"end": 3574,
									"name": "tag",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 3519,
									"end": 3574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3599,
									"end": 3601,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3593,
									"end": 3602,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3621,
									"end": 3623,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3617,
									"end": 3619,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3614,
									"end": 3624,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3611,
									"end": 3647,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3611,
									"end": 3647,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 3611,
									"end": 3647,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3627,
									"end": 3645,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 3627,
									"end": 3645,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 3627,
									"end": 3645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3627,
									"end": 3645,
									"name": "tag",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 3627,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3702,
									"end": 3704,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3696,
									"end": 3705,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3670,
									"end": 3672,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 3756,
									"end": 3769,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3756,
									"end": 3769,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3752,
									"end": 3774,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3752,
									"end": 3774,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3752,
									"end": 3774,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3776,
									"end": 3778,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 3748,
									"end": 3779,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3744,
									"end": 3784,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3732,
									"end": 3785,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3732,
									"end": 3785,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3732,
									"end": 3785,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3800,
									"end": 3818,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3800,
									"end": 3818,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3800,
									"end": 3818,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3820,
									"end": 3842,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3820,
									"end": 3842,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3820,
									"end": 3842,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3797,
									"end": 3843,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 3794,
									"end": 3866,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3794,
									"end": 3866,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "174"
								},
								{
									"begin": 3794,
									"end": 3866,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 3864,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "174"
								},
								{
									"begin": 3846,
									"end": 3864,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 3846,
									"end": 3864,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 3864,
									"name": "tag",
									"source": 10,
									"value": "174"
								},
								{
									"begin": 3846,
									"end": 3864,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3886,
									"end": 3896,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3882,
									"end": 3884,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3875,
									"end": 3897,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3921,
									"end": 3923,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3913,
									"end": 3919,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 3924,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3963,
									"end": 3970,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3956,
									"end": 3960,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3951,
									"end": 3953,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3947,
									"end": 3949,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3943,
									"end": 3954,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3939,
									"end": 3961,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3936,
									"end": 3971,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3933,
									"end": 3988,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3933,
									"end": 3988,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 3933,
									"end": 3988,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3984,
									"end": 3985,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3981,
									"end": 3982,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3974,
									"end": 3986,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3933,
									"end": 3988,
									"name": "tag",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 3933,
									"end": 3988,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3997,
									"end": 4056,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 4053,
									"end": 4055,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4046,
									"end": 4050,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4038,
									"end": 4044,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4034,
									"end": 4051,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4027,
									"end": 4031,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4023,
									"end": 4025,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4019,
									"end": 4032,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3997,
									"end": 4056,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 3997,
									"end": 4056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3997,
									"end": 4056,
									"name": "tag",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 3997,
									"end": 4056,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4075,
									"end": 4081,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4065,
									"end": 4081,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 4065,
									"end": 4081,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4065,
									"end": 4081,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4065,
									"end": 4081,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4065,
									"end": 4081,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4065,
									"end": 4081,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4065,
									"end": 4081,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4100,
									"end": 4151,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 4145,
									"end": 4149,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4134,
									"end": 4143,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4130,
									"end": 4150,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4100,
									"end": 4151,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 4100,
									"end": 4151,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4100,
									"end": 4151,
									"name": "tag",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 4100,
									"end": 4151,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4090,
									"end": 4151,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4090,
									"end": 4151,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3180,
									"end": 4157,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3180,
									"end": 4157,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3180,
									"end": 4157,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3180,
									"end": 4157,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3180,
									"end": 4157,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3180,
									"end": 4157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5064,
									"end": 5289,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 5064,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5104,
									"end": 5107,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5135,
									"end": 5136,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5137,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5128,
									"end": 5129,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5125,
									"end": 5138,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5122,
									"end": 5258,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5122,
									"end": 5258,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "182"
								},
								{
									"begin": 5122,
									"end": 5258,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5180,
									"end": 5190,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 5175,
									"end": 5178,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 5171,
									"end": 5191,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 5168,
									"end": 5169,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5161,
									"end": 5192,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5215,
									"end": 5219,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 5212,
									"end": 5213,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5205,
									"end": 5220,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5243,
									"end": 5247,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5240,
									"end": 5241,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5233,
									"end": 5248,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5122,
									"end": 5258,
									"name": "tag",
									"source": 10,
									"value": "182"
								},
								{
									"begin": 5122,
									"end": 5258,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5274,
									"end": 5283,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5274,
									"end": 5283,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5064,
									"end": 5289,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5638,
									"end": 6292,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 5638,
									"end": 6292,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5832,
									"end": 5836,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5878,
									"end": 5879,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5874,
									"end": 5875,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5869,
									"end": 5872,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 5865,
									"end": 5876,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 5861,
									"end": 5880,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5919,
									"end": 5921,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5911,
									"end": 5917,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 5907,
									"end": 5922,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5896,
									"end": 5905,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5889,
									"end": 5923,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5971,
									"end": 5973,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5963,
									"end": 5969,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5959,
									"end": 5974,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5954,
									"end": 5956,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5943,
									"end": 5952,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5939,
									"end": 5957,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5932,
									"end": 5975,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5932,
									"end": 5975,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6011,
									"end": 6017,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6008,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5995,
									"end": 6004,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5991,
									"end": 6009,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5984,
									"end": 6018,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6054,
									"end": 6057,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 6049,
									"end": 6051,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 6038,
									"end": 6047,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6034,
									"end": 6052,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6027,
									"end": 6058,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6087,
									"end": 6093,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6081,
									"end": 6094,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6131,
									"end": 6137,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6125,
									"end": 6128,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 6114,
									"end": 6123,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6110,
									"end": 6129,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6103,
									"end": 6138,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6147,
									"end": 6214,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 6207,
									"end": 6213,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6201,
									"end": 6204,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 6190,
									"end": 6199,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6186,
									"end": 6205,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6181,
									"end": 6183,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6173,
									"end": 6179,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 6169,
									"end": 6184,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6147,
									"end": 6214,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 6147,
									"end": 6214,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6147,
									"end": 6214,
									"name": "tag",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 6147,
									"end": 6214,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6275,
									"end": 6277,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6254,
									"end": 6269,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6250,
									"end": 6279,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6235,
									"end": 6280,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6235,
									"end": 6280,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6235,
									"end": 6280,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6235,
									"end": 6280,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6282,
									"end": 6285,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 6231,
									"end": 6286,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6231,
									"end": 6286,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 5638,
									"end": 6292,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5638,
									"end": 6292,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6297,
									"end": 6587,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 6297,
									"end": 6587,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6366,
									"end": 6372,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6419,
									"end": 6421,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6407,
									"end": 6416,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6398,
									"end": 6405,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6394,
									"end": 6417,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 6390,
									"end": 6422,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 6387,
									"end": 6439,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6387,
									"end": 6439,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 6387,
									"end": 6439,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6435,
									"end": 6436,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6432,
									"end": 6433,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6425,
									"end": 6437,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 6387,
									"end": 6439,
									"name": "tag",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 6387,
									"end": 6439,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6461,
									"end": 6477,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6461,
									"end": 6477,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6506,
									"end": 6538,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6506,
									"end": 6538,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6496,
									"end": 6539,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6496,
									"end": 6539,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 6486,
									"end": 6557,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "188"
								},
								{
									"begin": 6486,
									"end": 6557,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6553,
									"end": 6554,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6550,
									"end": 6551,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6543,
									"end": 6555,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 6486,
									"end": 6557,
									"name": "tag",
									"source": 10,
									"value": "188"
								},
								{
									"begin": 6486,
									"end": 6557,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 6297,
									"end": 6587,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6297,
									"end": 6587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6297,
									"end": 6587,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 6297,
									"end": 6587,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 332,
									"end": 2991,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 332,
									"end": 2991,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 332,
									"end": 2991,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 332,
									"end": 2991,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 332,
									"end": 2991,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 332,
									"end": 2991,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 332,
									"end": 2991,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122017b24cd57cc0d80b8a4d1238e766085b31502aed053164d5211b96e172f6e6ae64736f6c634300080f0033",
									".code": [
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "B88D4FDE"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "B88D4FDE"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "C6682862"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "C87B56DD"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "D5ABEB01"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "E985E9C5"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "A1448194"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "A22CB465"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "AA271E1A"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "3C713026"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "3C713026"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "42842E0E"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "42966C68"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "55F804B3"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "81812FC"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 332,
											"end": 2991,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2673,
											"end": 2877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2673,
											"end": 2877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1528,
											"end": 1731,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 2978,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 4995,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5010,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4982,
											"end": 5028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2309,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2173,
											"end": 2350,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1154,
											"end": 1333,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1154,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1154,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1154,
											"end": 1333,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1333,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1154,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1154,
											"end": 1333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1333,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1154,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1154,
											"end": 1333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 513,
											"end": 605,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 513,
											"end": 605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 513,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 513,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 513,
											"end": 605,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 513,
											"end": 605,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 513,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 513,
											"end": 605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 513,
											"end": 605,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 513,
											"end": 605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 513,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 513,
											"end": 605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1551,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1449,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1449,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1449,
											"end": 1551,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1551,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1449,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1449,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1551,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1449,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1449,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 11323,
											"end": 11425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2012,
											"end": 2238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2012,
											"end": 2238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2246,
											"end": 2352,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2246,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2246,
											"end": 2352,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2352,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2246,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2246,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2352,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2246,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2352,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 507,
											"end": 544,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 507,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 2003,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1559,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1559,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1559,
											"end": 2003,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 2003,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1559,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1559,
											"end": 2003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 2003,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1559,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1559,
											"end": 2003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 551,
											"end": 591,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 551,
											"end": 591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 551,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 551,
											"end": 591,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 551,
											"end": 591,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13781,
											"end": 13785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13822,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2857,
											"end": 2868,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2833,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2833,
											"end": 2869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2833,
											"end": 2869,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2833,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2826,
											"end": 2869,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11215,
											"end": 11228,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11247,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 11240,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 11240,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13116,
											"end": 13123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 13148,
											"end": 13155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13140,
											"end": 13147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 13140,
											"end": 13156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13232,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12683,
											"end": 12696,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 12707,
											"end": 12714,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 12699,
											"end": 12715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12683,
											"end": 12715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 12794,
											"end": 12799,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12923,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 12673,
											"end": 12987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22184,
											"end": 22211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 22233,
											"end": 22240,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 22214,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 22214,
											"end": 22241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22297,
											"end": 22301,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 22272,
											"end": 22291,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22350,
											"end": 22377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 20652,
											"end": 20667,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 20862,
											"end": 20866,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 20855,
											"end": 20891,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 20943,
											"end": 20947,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 22567,
											"end": 22571,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21620,
											"end": 21651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 21620,
											"end": 21651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 21620,
											"end": 21651,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 21742,
											"end": 21797,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 21742,
											"end": 21797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 22629,
											"end": 22633,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 22795,
											"end": 22799,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 22801,
											"end": 22803,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 22805,
											"end": 22812,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 22814,
											"end": 22815,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 22773,
											"end": 22794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 22773,
											"end": 22816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22905,
											"end": 22920,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 23043,
											"end": 23044,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 23022,
											"end": 23041,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 23015,
											"end": 23045,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23447,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10863,
											"end": 10874,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 10839,
											"end": 10861,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 10835,
											"end": 10875,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23800,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24071,
											"end": 24117,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 24071,
											"end": 24117,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 24071,
											"end": 24122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24071,
											"end": 24122,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 24174,
											"end": 24175,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 24142,
											"end": 24161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24312,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24330,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 24416,
											"end": 24427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24416,
											"end": 24444,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24593,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 24124,
											"end": 24683,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 24727,
											"end": 24734,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 24723,
											"end": 24725,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 24717,
											"end": 24721,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1154,
											"end": 1333,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1154,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1256,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1236,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1266,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1266,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1236,
											"end": 1266,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1266,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1266,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1266,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1266,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1266,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1266,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1282,
											"end": 1325,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1282,
											"end": 1325,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1297,
											"end": 1307,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1307,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1282,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3C49A0D2DCD603245C20EB1985825D770748295CD570DE6D24861080451BBD41"
										},
										{
											"begin": 1282,
											"end": 1325,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1282,
											"end": 1325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1282,
											"end": 1325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1282,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1325,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1282,
											"end": 1325,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1282,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1282,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1282,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1282,
											"end": 1325,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1333,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1333,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 14062,
											"end": 14066,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14068,
											"end": 14070,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14072,
											"end": 14079,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 14045,
											"end": 14084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 513,
											"end": 605,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 513,
											"end": 605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 578,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 584,
											"end": 591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 593,
											"end": 597,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 578,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 578,
											"end": 598,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 578,
											"end": 598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 513,
											"end": 605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 513,
											"end": 605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1551,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1449,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1523,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1533,
											"end": 1543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1530,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 1523,
											"end": 1543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1523,
											"end": 1543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1543,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 11082,
											"end": 11089,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11063,
											"end": 11081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 11063,
											"end": 11090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6383,
											"end": 6390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6497,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1035,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6533,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1759,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1732,
											"end": 1762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11379,
											"end": 11392,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11411,
											"end": 11418,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 11404,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2078,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2324,
											"end": 2344,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 735,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 735,
											"end": 784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 735,
											"end": 784,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 784,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 735,
											"end": 784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 735,
											"end": 784,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8545,
											"end": 8547,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 735,
											"end": 784,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 735,
											"end": 784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 735,
											"end": 784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8527,
											"end": 8548,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8584,
											"end": 8586,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8557,
											"end": 8587,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B932903737BA10309036B4B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8603,
											"end": 8621,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8603,
											"end": 8621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8603,
											"end": 8621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8596,
											"end": 8646,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 735,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 8343,
											"end": 8687,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 735,
											"end": 784,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 735,
											"end": 784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2977,
											"end": 2978,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 4995,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4982,
											"end": 5010,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5010,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5028,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2126,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2113,
											"end": 2126,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 587,
											"end": 591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 2145,
											"end": 2165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2126,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2145,
											"end": 2165,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2145,
											"end": 2165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2178,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2178,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 2198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9159,
											"end": 9161,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2137,
											"end": 2198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9141,
											"end": 9162,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9198,
											"end": 9200,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 9178,
											"end": 9196,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9178,
											"end": 9196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9171,
											"end": 9201,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F766572206D617820737570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9217,
											"end": 9235,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9217,
											"end": 9235,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9235,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9210,
											"end": 9255,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9272,
											"end": 9290,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9272,
											"end": 9290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 8957,
											"end": 9296,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2219,
											"end": 2221,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2229,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2209,
											"end": 2230,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2230,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2209,
											"end": 2230,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2238,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B06307DB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 400,
											"end": 587,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 14331,
											"end": 14335,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14337,
											"end": 14339,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14341,
											"end": 14348,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14318,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 14318,
											"end": 14349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 14363,
											"end": 14382,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 14432,
											"end": 14436,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14438,
											"end": 14440,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14442,
											"end": 14449,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14451,
											"end": 14456,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14401,
											"end": 14431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 14401,
											"end": 14457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 507,
											"end": 544,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 507,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 507,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 507,
											"end": 544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 2003,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1559,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1650,
											"end": 1663,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1697,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1705,
											"end": 1712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1697,
											"end": 1713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1713,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1697,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1675,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1675,
											"end": 1788,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1675,
											"end": 1788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1675,
											"end": 1788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1675,
											"end": 1788,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9503,
											"end": 9505,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1788,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1675,
											"end": 1788,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1675,
											"end": 1788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9485,
											"end": 9506,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9542,
											"end": 9544,
											"name": "PUSH",
											"source": 10,
											"value": "2F"
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9515,
											"end": 9545,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9581,
											"end": 9615,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9625,
											"end": 9670,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9687,
											"end": 9706,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9687,
											"end": 9706,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1675,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 9301,
											"end": 9712,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1675,
											"end": 1788,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1675,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 1832,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1832,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 1832,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1888,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1892,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 1943,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 1945,
											"end": 1952,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1945,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 1912,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1912,
											"end": 1979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1860,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1853,
											"end": 1995,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 2003,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1559,
											"end": 2003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11156,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11157,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11193,
											"end": 11195,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 11173,
											"end": 11191,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11173,
											"end": 11191,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11166,
											"end": 11196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11232,
											"end": 11266,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11205,
											"end": 11267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11283,
											"end": 11301,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11283,
											"end": 11301,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11283,
											"end": 11301,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11276,
											"end": 11312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11329,
											"end": 11348,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11329,
											"end": 11348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 10952,
											"end": 11354,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2100,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2081,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14848,
											"end": 14852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14902,
											"end": 14909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 2978,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14883,
											"end": 14909,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 14909,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14925,
											"end": 14932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14925,
											"end": 14948,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15002,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14985,
											"end": 15028,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15033,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14791,
											"end": 15059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8050,
											"end": 8057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 2978,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8096,
											"end": 8119,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8141,
											"end": 8145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8185,
											"end": 8199,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8289,
											"end": 8312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8312,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8317,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8813,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8817,
											"end": 8818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8818,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8876,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2597,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2360,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2529,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2012,
											"end": 2238,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 25171,
											"end": 28168,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 25171,
											"end": 28168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25250,
											"end": 25277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 25280,
											"end": 25307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 25299,
											"end": 25306,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25280,
											"end": 25298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 25280,
											"end": 25307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25280,
											"end": 25307,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 25280,
											"end": 25307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25250,
											"end": 25307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25250,
											"end": 25307,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 25318,
											"end": 25330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 25318,
											"end": 25330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 25438,
											"end": 25466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 25458,
											"end": 25465,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 20528,
											"end": 20555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 20652,
											"end": 20667,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 20862,
											"end": 20866,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 20855,
											"end": 20891,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 20943,
											"end": 20947,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25438,
											"end": 25466,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 25438,
											"end": 25466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25381,
											"end": 25466,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 25381,
											"end": 25466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25381,
											"end": 25466,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 25381,
											"end": 25466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 25481,
											"end": 25494,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 25477,
											"end": 25783,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 25477,
											"end": 25783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 25477,
											"end": 25783,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25600,
											"end": 25662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 25619,
											"end": 25634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25636,
											"end": 25640,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 25642,
											"end": 25661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25600,
											"end": 25662,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 25600,
											"end": 25662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25595,
											"end": 25772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 25595,
											"end": 25772,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25685,
											"end": 25728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 25702,
											"end": 25706,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25685,
											"end": 25728,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 25685,
											"end": 25728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25680,
											"end": 25772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 25680,
											"end": 25772,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 25737,
											"end": 25772,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 25737,
											"end": 25772,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25737,
											"end": 25772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 25737,
											"end": 25772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 25737,
											"end": 25772,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 25737,
											"end": 25772,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 25737,
											"end": 25772,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 25737,
											"end": 25772,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 25737,
											"end": 25772,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 25737,
											"end": 25772,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 25737,
											"end": 25772,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 25737,
											"end": 25772,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 25737,
											"end": 25772,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 25680,
											"end": 25772,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 25680,
											"end": 25772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25793,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 25815,
											"end": 25819,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 25829,
											"end": 25830,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 25833,
											"end": 25840,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 25842,
											"end": 25843,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 25793,
											"end": 25814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 25793,
											"end": 25844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 25793,
											"end": 25844,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 25793,
											"end": 25844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 25933,
											"end": 25948,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 25930,
											"end": 26087,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 25930,
											"end": 26087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 25930,
											"end": 26087,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 26071,
											"end": 26072,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 26050,
											"end": 26069,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 26043,
											"end": 26073,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 25930,
											"end": 26087,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 25930,
											"end": 26087,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26675,
											"end": 26699,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 26675,
											"end": 26699,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 26675,
											"end": 26699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 26675,
											"end": 26699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 26675,
											"end": 26699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 26675,
											"end": 26699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 26675,
											"end": 26693,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 26675,
											"end": 26699,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 26675,
											"end": 26699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 26675,
											"end": 26699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 26675,
											"end": 26699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 26675,
											"end": 26699,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 26675,
											"end": 26734,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 26675,
											"end": 26734,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 26703,
											"end": 26734,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26675,
											"end": 26734,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 26675,
											"end": 26734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 26675,
											"end": 26734,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10863,
											"end": 10874,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 10839,
											"end": 10861,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 10835,
											"end": 10875,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 26965,
											"end": 26991,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 26965,
											"end": 26991,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 26965,
											"end": 26991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 26965,
											"end": 26991,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 26965,
											"end": 26982,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 26965,
											"end": 26991,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 26965,
											"end": 26991,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 26965,
											"end": 26991,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 26965,
											"end": 26991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 26965,
											"end": 26991,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 26965,
											"end": 27165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 26965,
											"end": 27165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 26965,
											"end": 27165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 26965,
											"end": 27165,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27282,
											"end": 27328,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 27282,
											"end": 27328,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 27282,
											"end": 27333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 27282,
											"end": 27333,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 27278,
											"end": 27894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 27278,
											"end": 27894,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 27385,
											"end": 27386,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 27375,
											"end": 27386,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 27375,
											"end": 27386,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 27353,
											"end": 27372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 27506,
											"end": 27536,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 27506,
											"end": 27536,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 27506,
											"end": 27536,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 27506,
											"end": 27523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 27506,
											"end": 27536,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 27506,
											"end": 27536,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 27506,
											"end": 27536,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 27506,
											"end": 27536,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 27506,
											"end": 27536,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 27506,
											"end": 27536,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 27506,
											"end": 27541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 27506,
											"end": 27541,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 27502,
											"end": 27880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 27502,
											"end": 27880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 27642,
											"end": 27655,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 27642,
											"end": 27655,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 27627,
											"end": 27638,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 27627,
											"end": 27655,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 27623,
											"end": 27862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 27623,
											"end": 27862,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 27787,
											"end": 27817,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 27787,
											"end": 27817,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 27787,
											"end": 27817,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 27787,
											"end": 27817,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 27787,
											"end": 27804,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 27787,
											"end": 27817,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 27787,
											"end": 27817,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 27787,
											"end": 27817,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 27787,
											"end": 27817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 27787,
											"end": 27817,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 27787,
											"end": 27839,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 27787,
											"end": 27839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 27787,
											"end": 27839,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 27623,
											"end": 27862,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 27623,
											"end": 27862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 27335,
											"end": 27894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 27278,
											"end": 27894,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 27278,
											"end": 27894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 27919,
											"end": 27954,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 27919,
											"end": 27954,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 27946,
											"end": 27953,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 27946,
											"end": 27953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 27942,
											"end": 27943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 27942,
											"end": 27943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27919,
											"end": 27954,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 27919,
											"end": 27954,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 27919,
											"end": 27954,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 27919,
											"end": 27954,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 27919,
											"end": 27954,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 27942,
											"end": 27943,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 27942,
											"end": 27943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 27919,
											"end": 27954,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28137,
											"end": 28149,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 28137,
											"end": 28151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 28137,
											"end": 28151,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 28137,
											"end": 28151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 28137,
											"end": 28151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 28137,
											"end": 28151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28137,
											"end": 28151,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25171,
											"end": 28168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15138,
											"end": 15240,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 15138,
											"end": 15240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 15216,
											"end": 15218,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15220,
											"end": 15228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15206,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 15206,
											"end": 15233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 28807,
											"end": 28811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 28807,
											"end": 28811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28894,
											"end": 28898,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 28894,
											"end": 28898,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28900,
											"end": 28907,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 28900,
											"end": 28907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28909,
											"end": 28914,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 28909,
											"end": 28914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 28827,
											"end": 28915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 28827,
											"end": 28915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 29105,
											"end": 29111,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 29105,
											"end": 29118,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 29122,
											"end": 29123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 29105,
											"end": 29123,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 29290,
											"end": 29296,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 29284,
											"end": 29297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 29275,
											"end": 29281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 29271,
											"end": 29273,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 29267,
											"end": 29282,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 29260,
											"end": 29298,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1441,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1341,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1406,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1426,
											"end": 1433,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1419,
											"end": 1433,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1433,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1419,
											"end": 1433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1419,
											"end": 1433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 328,
											"end": 1031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 718,
											"end": 727,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 743,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 765,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 817,
											"end": 834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 851,
											"end": 861,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 851,
											"end": 861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 877,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 945,
											"end": 955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 932,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 2,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 902,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 2
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 972,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15759,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 15765,
											"end": 15767,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15769,
											"end": 15777,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15759,
											"end": 15764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 15759,
											"end": 15778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15759,
											"end": 15778,
											"name": "tag",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 15759,
											"end": 15778,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15817,
											"end": 15831,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15817,
											"end": 15831,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15817,
											"end": 15831,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 15817,
											"end": 15836,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15813,
											"end": 16286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 15813,
											"end": 16286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15856,
											"end": 15867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15870,
											"end": 15883,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15917,
											"end": 15931,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15917,
											"end": 15931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15917,
											"end": 15931,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15949,
											"end": 16178,
											"name": "tag",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 15949,
											"end": 16178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15979,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 16018,
											"end": 16019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16022,
											"end": 16024,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16035,
											"end": 16040,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15979,
											"end": 16009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 15979,
											"end": 16041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15979,
											"end": 16041,
											"name": "tag",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 15979,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15974,
											"end": 16139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 15974,
											"end": 16139,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15974,
											"end": 16139,
											"name": "tag",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 15974,
											"end": 16139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16173,
											"end": 16176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16165,
											"end": 16170,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16165,
											"end": 16176,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 15949,
											"end": 16178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 15949,
											"end": 16178,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16258,
											"end": 16261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16241,
											"end": 16254,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16241,
											"end": 16254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 16241,
											"end": 16261,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 16237,
											"end": 16271,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 16237,
											"end": 16271,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16263,
											"end": 16271,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16271,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16237,
											"end": 16271,
											"name": "tag",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 16237,
											"end": 16271,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15838,
											"end": 16286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15838,
											"end": 16286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15641,
											"end": 16302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16563,
											"end": 18055,
											"name": "tag",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 16563,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16627,
											"end": 16647,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16650,
											"end": 16663,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16677,
											"end": 16693,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16677,
											"end": 16693,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16673,
											"end": 16721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 16673,
											"end": 16721,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E0763"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16673,
											"end": 16721,
											"name": "tag",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 16673,
											"end": 16721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16735,
											"end": 16743,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16747,
											"end": 16748,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16735,
											"end": 16748,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16731,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 16731,
											"end": 16775,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B562E8DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16731,
											"end": 16775,
											"name": "tag",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 16731,
											"end": 16775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16786,
											"end": 16847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 16816,
											"end": 16817,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16820,
											"end": 16822,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 16824,
											"end": 16836,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16838,
											"end": 16846,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 16786,
											"end": 16807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 16786,
											"end": 16847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16786,
											"end": 16847,
											"name": "tag",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 16786,
											"end": 16847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17250,
											"end": 17268,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1158,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 17288,
											"end": 17319,
											"name": "PUSH",
											"source": 4,
											"value": "10000000000000001"
										},
										{
											"begin": 17276,
											"end": 17320,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17276,
											"end": 17320,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10863,
											"end": 10874,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 10839,
											"end": 10861,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 10835,
											"end": 10875,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 12522,
											"end": 12537,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12522,
											"end": 12537,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12497,
											"end": 12520,
											"name": "PUSH",
											"source": 4,
											"value": "E1"
										},
										{
											"begin": 12493,
											"end": 12538,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 10832,
											"end": 10883,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17556,
											"end": 17573,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 17556,
											"end": 17726,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 17574,
											"end": 17586,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17799,
											"end": 17822,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17799,
											"end": 17822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17799,
											"end": 17822,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17836,
											"end": 17935,
											"name": "tag",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 17836,
											"end": 17935,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17879,
											"end": 17880,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17879,
											"end": 17880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17879,
											"end": 17880,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17879,
											"end": 17880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 17930,
											"end": 17933,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17920,
											"end": 17927,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17920,
											"end": 17933,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 17836,
											"end": 17935,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 17836,
											"end": 17935,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17949,
											"end": 17962,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17949,
											"end": 17968,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 592,
											"end": 850,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 688,
											"end": 694,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 682,
											"end": 695,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 674,
											"end": 787,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 764,
											"end": 775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 776,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 745,
											"end": 756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 738,
											"end": 777,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 713,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 805,
											"end": 811,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 799,
											"end": 812,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 796,
											"end": 844,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 796,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 796,
											"end": 844,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 838,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 822,
											"end": 838,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 815,
											"end": 842,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 592,
											"end": 850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 897,
											"end": 900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 929,
											"end": 941,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 950,
											"end": 969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1025,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1018,
											"end": 1032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1015,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 978,
											"end": 1041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1074,
											"end": 1089,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1099,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1106,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1249,
											"end": 1270,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 1287,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1453,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1458,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1461,
											"end": 1473,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2041,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2046,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 2082,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2111,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 2168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2503,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2504,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 2540,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 2588,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2626,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2671,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2677,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 3035,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2688,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2767,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2811,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2800,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2789,
											"end": 2812,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2785,
											"end": 2817,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2782,
											"end": 2834,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2782,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 2782,
											"end": 2834,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2832,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2782,
											"end": 2834,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 2782,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 2853,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2882,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 2853,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2843,
											"end": 2882,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2843,
											"end": 2882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 2934,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2921,
											"end": 2930,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2935,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2904,
											"end": 2936,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2979,
											"end": 2984,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 2985,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 2986,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2963,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2955,
											"end": 2987,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2945,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 2945,
											"end": 3005,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3001,
											"end": 3002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 2999,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2945,
											"end": 3005,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 2945,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3024,
											"end": 3029,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3029,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 3035,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 3035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 3035,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 3035,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 3035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 3035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3167,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 3040,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 3096,
											"end": 3099,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3092,
											"end": 3112,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3136,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3129,
											"end": 3130,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3122,
											"end": 3137,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3160,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3153,
											"end": 3154,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3161,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3804,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 3172,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3285,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3308,
											"end": 3310,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3306,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3297,
											"end": 3311,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3334,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 3294,
											"end": 3334,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 3314,
											"end": 3332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3391,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3443,
											"end": 3458,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3439,
											"end": 3463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3463,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3467,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 3435,
											"end": 3468,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3431,
											"end": 3473,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3474,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3474,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3474,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3489,
											"end": 3507,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3489,
											"end": 3507,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3489,
											"end": 3507,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3532,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3483,
											"end": 3555,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3483,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 3483,
											"end": 3555,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3535,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 3535,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 3535,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3535,
											"end": 3553,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 3535,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3585,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3573,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 3586,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3604,
											"end": 3610,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3595,
											"end": 3610,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3595,
											"end": 3610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3641,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3674,
											"end": 3677,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3671,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3663,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3656,
											"end": 3672,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3678,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3650,
											"end": 3695,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3650,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 3650,
											"end": 3695,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3689,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3681,
											"end": 3693,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3650,
											"end": 3695,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 3650,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3741,
											"end": 3747,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3736,
											"end": 3739,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 3733,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3721,
											"end": 3727,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 3734,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3704,
											"end": 3748,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 3796,
											"end": 3797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3780,
											"end": 3786,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3778,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3764,
											"end": 3794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3757,
											"end": 3798,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3757,
											"end": 3798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3757,
											"end": 3798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3757,
											"end": 3798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3804,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3804,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3809,
											"end": 4260,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 3809,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3878,
											"end": 3884,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3933,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 3928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3910,
											"end": 3917,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3906,
											"end": 3929,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3902,
											"end": 3934,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3899,
											"end": 3951,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3899,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 3899,
											"end": 3951,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3945,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 3949,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3899,
											"end": 3951,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 3899,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3987,
											"end": 3996,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3997,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4012,
											"end": 4018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4006,
											"end": 4056,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4006,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 4006,
											"end": 4056,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4052,
											"end": 4053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4050,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4042,
											"end": 4054,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4006,
											"end": 4056,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 4006,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4075,
											"end": 4097,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4075,
											"end": 4097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4128,
											"end": 4132,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4120,
											"end": 4133,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4120,
											"end": 4133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4116,
											"end": 4143,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 4106,
											"end": 4161,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4157,
											"end": 4158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4155,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4147,
											"end": 4159,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4161,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 4106,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4180,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 4246,
											"end": 4253,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4228,
											"end": 4244,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4225,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4221,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4215,
											"end": 4226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4180,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 4180,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4451,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 4265,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4379,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4356,
											"end": 4363,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4352,
											"end": 4375,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4348,
											"end": 4380,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4345,
											"end": 4397,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4345,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 4345,
											"end": 4397,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4390,
											"end": 4391,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4383,
											"end": 4395,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4345,
											"end": 4397,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 4345,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 4435,
											"end": 4444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 4416,
											"end": 4445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 5123,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 4456,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4565,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4567,
											"end": 4573,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4581,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4631,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4616,
											"end": 4625,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4614,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4626,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4599,
											"end": 4632,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4649,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 4596,
											"end": 4649,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4645,
											"end": 4646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4647,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4649,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 4596,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4668,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 4687,
											"end": 4696,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4668,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 4668,
											"end": 4697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4668,
											"end": 4697,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 4668,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4697,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4716,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 4750,
											"end": 4752,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4739,
											"end": 4748,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4735,
											"end": 4753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4716,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 4716,
											"end": 4754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4716,
											"end": 4754,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 4716,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4754,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4801,
											"end": 4803,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4790,
											"end": 4799,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4805,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4805,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 4858,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4845,
											"end": 4854,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4841,
											"end": 4859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4860,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4875,
											"end": 4881,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4902,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4869,
											"end": 4919,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4869,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 4869,
											"end": 4919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4913,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4869,
											"end": 4919,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 4869,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4938,
											"end": 4960,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4938,
											"end": 4960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4991,
											"end": 4995,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4983,
											"end": 4996,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 4996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4979,
											"end": 5006,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4969,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 4969,
											"end": 5024,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5020,
											"end": 5021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5018,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5010,
											"end": 5022,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 5024,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 4969,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5043,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 5109,
											"end": 5116,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5104,
											"end": 5106,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5107,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5086,
											"end": 5088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5082,
											"end": 5084,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5078,
											"end": 5089,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5043,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 5043,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5043,
											"end": 5117,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 5043,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5117,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 5123,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 5123,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 5123,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 5123,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 5123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 5123,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 5123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 5123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5388,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 5128,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5210,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5259,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5245,
											"end": 5254,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5236,
											"end": 5243,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5232,
											"end": 5255,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5260,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5277,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 5225,
											"end": 5277,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5273,
											"end": 5274,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5271,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5263,
											"end": 5275,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5277,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 5225,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5296,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 5315,
											"end": 5324,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5296,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 5296,
											"end": 5325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5296,
											"end": 5325,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 5296,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5325,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5325,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5367,
											"end": 5376,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 5344,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5382,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 5344,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5334,
											"end": 5382,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5334,
											"end": 5382,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5388,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5388,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5393,
											"end": 5773,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 5393,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5472,
											"end": 5473,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5468,
											"end": 5480,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5468,
											"end": 5480,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5468,
											"end": 5480,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 5468,
											"end": 5480,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5527,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5527,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5527,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5536,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 5536,
											"end": 5597,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5594,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 5582,
											"end": 5588,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5568,
											"end": 5595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5568,
											"end": 5595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5536,
											"end": 5597,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 5536,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5635,
											"end": 5641,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5632,
											"end": 5646,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5612,
											"end": 5630,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5647,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 5606,
											"end": 5767,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 5699,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5684,
											"end": 5687,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5680,
											"end": 5700,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5677,
											"end": 5678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5724,
											"end": 5728,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 5721,
											"end": 5722,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5756,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5742,
											"end": 5757,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5767,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 5606,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5393,
											"end": 5773,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5393,
											"end": 5773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5393,
											"end": 5773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5393,
											"end": 5773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5778,
											"end": 6134,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 5778,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 5982,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5992,
											"end": 6022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6058,
											"end": 6092,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6053,
											"end": 6055,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6093,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6125,
											"end": 6127,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6110,
											"end": 6128,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6110,
											"end": 6128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5778,
											"end": 6134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6810,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 6265,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6369,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6362,
											"end": 6365,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6359,
											"end": 6370,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6356,
											"end": 6804,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6356,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 6356,
											"end": 6804,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6433,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6424,
											"end": 6426,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6417,
											"end": 6434,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 6477,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6469,
											"end": 6471,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6545,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6531,
											"end": 6541,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6524,
											"end": 6525,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6520,
											"end": 6547,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6518,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6510,
											"end": 6548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 6583,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6567,
											"end": 6577,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6564,
											"end": 6584,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6602,
											"end": 6606,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6657,
											"end": 6659,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6652,
											"end": 6655,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6645,
											"end": 6646,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 6635,
											"end": 6639,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6631,
											"end": 6662,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6621,
											"end": 6662,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6621,
											"end": 6662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6712,
											"end": 6794,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 6712,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6730,
											"end": 6732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6728,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6733,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6712,
											"end": 6794,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6712,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 6712,
											"end": 6794,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6792,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6792,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6756,
											"end": 6757,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6745,
											"end": 6758,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6712,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 6712,
											"end": 6794,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 8338,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 6986,
											"end": 8338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7115,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7116,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7139,
											"end": 7157,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7131,
											"end": 7137,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7158,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7125,
											"end": 7181,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7125,
											"end": 7181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 7125,
											"end": 7181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 7161,
											"end": 7179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7190,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 7280,
											"end": 7286,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7240,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 7272,
											"end": 7276,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7266,
											"end": 7277,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7240,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 7240,
											"end": 7278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7240,
											"end": 7278,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 7240,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7190,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 7190,
											"end": 7287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7190,
											"end": 7287,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 7190,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7342,
											"end": 7346,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7342,
											"end": 7346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7395,
											"end": 7409,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7395,
											"end": 7409,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7424,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7418,
											"end": 8081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7418,
											"end": 8081,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7418,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 7418,
											"end": 8081,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8142,
											"end": 8148,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8139,
											"end": 8228,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8139,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 8139,
											"end": 8228,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8194,
											"end": 8213,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8194,
											"end": 8213,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8194,
											"end": 8213,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8188,
											"end": 8214,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8139,
											"end": 8228,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 8139,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6943,
											"end": 6944,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6939,
											"end": 6950,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6950,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6950,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6935,
											"end": 6959,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 6931,
											"end": 6960,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6921,
											"end": 6961,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6963,
											"end": 6974,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6963,
											"end": 6974,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6963,
											"end": 6974,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6918,
											"end": 6975,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8322,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8322,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7388,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 7388,
											"end": 8332,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7418,
											"end": 8081,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 7418,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6212,
											"end": 6213,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6205,
											"end": 6219,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6205,
											"end": 6219,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6205,
											"end": 6219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6249,
											"end": 6253,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7454,
											"end": 7474,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7454,
											"end": 7474,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7454,
											"end": 7474,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7808,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 7572,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7586,
											"end": 7593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7583,
											"end": 7584,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7580,
											"end": 7594,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7808,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 7572,
											"end": 7808,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7669,
											"end": 7695,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7654,
											"end": 7696,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7654,
											"end": 7696,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7735,
											"end": 7736,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7723,
											"end": 7737,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7723,
											"end": 7737,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7723,
											"end": 7737,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7723,
											"end": 7737,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7621,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 7572,
											"end": 7808,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7808,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 7572,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7576,
											"end": 7579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7836,
											"end": 7842,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7824,
											"end": 7843,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 8022,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 7821,
											"end": 8022,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7916,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7916,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7891,
											"end": 7917,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7980,
											"end": 7981,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7976,
											"end": 7990,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7976,
											"end": 7990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7976,
											"end": 7990,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7992,
											"end": 7995,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 7972,
											"end": 7996,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7968,
											"end": 8005,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 7964,
											"end": 8006,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7949,
											"end": 8007,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7934,
											"end": 8008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7934,
											"end": 8008,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 8022,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 7821,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8068,
											"end": 8069,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8052,
											"end": 8066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8052,
											"end": 8066,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8052,
											"end": 8066,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8070,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8035,
											"end": 8071,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8035,
											"end": 8071,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6986,
											"end": 8338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8819,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 8692,
											"end": 8819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8763,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 8748,
											"end": 8751,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8744,
											"end": 8764,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 8742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8734,
											"end": 8765,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8788,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 8781,
											"end": 8782,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8774,
											"end": 8789,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8808,
											"end": 8812,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8805,
											"end": 8806,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8798,
											"end": 8813,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8824,
											"end": 8952,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 8824,
											"end": 8952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8895,
											"end": 8896,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8891,
											"end": 8897,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8888,
											"end": 8889,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 8898,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8882,
											"end": 8921,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8882,
											"end": 8921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 8882,
											"end": 8921,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 8901,
											"end": 8919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8937,
											"end": 8946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8937,
											"end": 8946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8824,
											"end": 8952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9717,
											"end": 10947,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 9717,
											"end": 10947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9941,
											"end": 9944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9979,
											"end": 9985,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10005,
											"end": 10009,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10018,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 10062,
											"end": 10068,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10057,
											"end": 10060,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10052,
											"end": 10054,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10050,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 10040,
											"end": 10055,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 10018,
											"end": 10069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10069,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 10018,
											"end": 10069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10132,
											"end": 10145,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10132,
											"end": 10145,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10107,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10107,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10107,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10154,
											"end": 10209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 10132,
											"end": 10145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10107,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10176,
											"end": 10191,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10176,
											"end": 10191,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 10176,
											"end": 10191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10154,
											"end": 10209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 10154,
											"end": 10209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10154,
											"end": 10209,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 10154,
											"end": 10209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10298,
											"end": 10311,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10298,
											"end": 10311,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10231,
											"end": 10251,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10231,
											"end": 10251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10231,
											"end": 10251,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10271,
											"end": 10272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10271,
											"end": 10272,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10336,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 10298,
											"end": 10311,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10336,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 10336,
											"end": 10372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10336,
											"end": 10372,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 10336,
											"end": 10372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10391,
											"end": 10392,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10408,
											"end": 10426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10408,
											"end": 10426,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10408,
											"end": 10426,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10435,
											"end": 10576,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10435,
											"end": 10576,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10435,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 10435,
											"end": 10576,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10590,
											"end": 10591,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10585,
											"end": 10922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10585,
											"end": 10922,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10585,
											"end": 10922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 10585,
											"end": 10922,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10401,
											"end": 10922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 10401,
											"end": 10922,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10435,
											"end": 10576,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 10435,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10470,
											"end": 10494,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10494,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10456,
											"end": 10495,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10456,
											"end": 10495,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10563,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10563,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10526,
											"end": 10565,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10526,
											"end": 10565,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10515,
											"end": 10566,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10515,
											"end": 10566,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10515,
											"end": 10566,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10435,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 10435,
											"end": 10576,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10585,
											"end": 10922,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 10585,
											"end": 10922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10616,
											"end": 10622,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10664,
											"end": 10666,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10661,
											"end": 10662,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10689,
											"end": 10690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10703,
											"end": 10872,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 10703,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10717,
											"end": 10725,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10714,
											"end": 10715,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10711,
											"end": 10726,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 10872,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 10703,
											"end": 10872,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10799,
											"end": 10813,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10799,
											"end": 10813,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10784,
											"end": 10797,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 10784,
											"end": 10797,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10784,
											"end": 10797,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10814,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10734,
											"end": 10744,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10734,
											"end": 10744,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 10703,
											"end": 10872,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 10872,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 10703,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10707,
											"end": 10710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10707,
											"end": 10710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10903,
											"end": 10911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10896,
											"end": 10901,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10892,
											"end": 10912,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10885,
											"end": 10912,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 10885,
											"end": 10912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10401,
											"end": 10922,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 10401,
											"end": 10922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10941,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10938,
											"end": 10941,
											"name": "SWAP11",
											"source": 10
										},
										{
											"begin": 9717,
											"end": 10947,
											"name": "SWAP10",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9717,
											"end": 10947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11359,
											"end": 11848,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 11359,
											"end": 11848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11628,
											"end": 11643,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11628,
											"end": 11643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11628,
											"end": 11643,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11610,
											"end": 11644,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11610,
											"end": 11644,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11680,
											"end": 11695,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11680,
											"end": 11695,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11675,
											"end": 11677,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11653,
											"end": 11696,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11727,
											"end": 11729,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11705,
											"end": 11739,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11705,
											"end": 11739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11705,
											"end": 11739,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11775,
											"end": 11778,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11770,
											"end": 11772,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11779,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11553,
											"end": 11557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11553,
											"end": 11557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11796,
											"end": 11842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 11796,
											"end": 11842,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11822,
											"end": 11841,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11822,
											"end": 11841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11814,
											"end": 11820,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11796,
											"end": 11842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 11796,
											"end": 11842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11796,
											"end": 11842,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 11796,
											"end": 11842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11788,
											"end": 11842,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 11359,
											"end": 11848,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11359,
											"end": 11848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11853,
											"end": 12102,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 11853,
											"end": 12102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11922,
											"end": 11928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11975,
											"end": 11977,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11963,
											"end": 11972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 11961,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11950,
											"end": 11973,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11946,
											"end": 11978,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11943,
											"end": 11995,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11943,
											"end": 11995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 11943,
											"end": 11995,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11991,
											"end": 11992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11988,
											"end": 11989,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11981,
											"end": 11993,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11943,
											"end": 11995,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 11943,
											"end": 11995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12023,
											"end": 12032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12017,
											"end": 12033,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 12066,
											"end": 12071,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12042,
											"end": 12072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 12042,
											"end": 12072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12107,
											"end": 12242,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 12107,
											"end": 12242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12146,
											"end": 12149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12167,
											"end": 12184,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12167,
											"end": 12184,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12164,
											"end": 12207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 12164,
											"end": 12207,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12187,
											"end": 12205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 12187,
											"end": 12205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 12187,
											"end": 12205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12187,
											"end": 12205,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 12187,
											"end": 12205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12234,
											"end": 12235,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12223,
											"end": 12236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12223,
											"end": 12236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12107,
											"end": 12242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12247,
											"end": 12374,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 12247,
											"end": 12374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12308,
											"end": 12318,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 12303,
											"end": 12306,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 12299,
											"end": 12319,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 12296,
											"end": 12297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12289,
											"end": 12320,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12339,
											"end": 12343,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 12336,
											"end": 12337,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12329,
											"end": 12344,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12363,
											"end": 12367,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12360,
											"end": 12361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12353,
											"end": 12368,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12499,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 12379,
											"end": 12499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12445,
											"end": 12446,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12435,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 12435,
											"end": 12470,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12450,
											"end": 12468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 12450,
											"end": 12468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 12450,
											"end": 12468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12450,
											"end": 12468,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 12450,
											"end": 12468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12484,
											"end": 12493,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12484,
											"end": 12493,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12629,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 12504,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12544,
											"end": 12548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12572,
											"end": 12573,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12569,
											"end": 12570,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12566,
											"end": 12574,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12563,
											"end": 12597,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12563,
											"end": 12597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 12563,
											"end": 12597,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12577,
											"end": 12595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 12577,
											"end": 12595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 12577,
											"end": 12595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12577,
											"end": 12595,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 12577,
											"end": 12595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12614,
											"end": 12623,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12614,
											"end": 12623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12634,
											"end": 12746,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 12634,
											"end": 12746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12666,
											"end": 12667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12692,
											"end": 12693,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12682,
											"end": 12717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 12682,
											"end": 12717,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12697,
											"end": 12715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 12697,
											"end": 12715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 12697,
											"end": 12715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12697,
											"end": 12715,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 12697,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12731,
											"end": 12740,
											"name": "MOD",
											"source": 10
										},
										{
											"begin": 12731,
											"end": 12740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12634,
											"end": 12746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12751,
											"end": 12878,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 12751,
											"end": 12878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12812,
											"end": 12822,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 12807,
											"end": 12810,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 12803,
											"end": 12823,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 12800,
											"end": 12801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12793,
											"end": 12824,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12843,
											"end": 12847,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 12840,
											"end": 12841,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12833,
											"end": 12848,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12867,
											"end": 12871,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12864,
											"end": 12865,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12857,
											"end": 12872,
											"name": "REVERT",
											"source": 10
										}
									]
								},
								"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"ERC721A/NagaKidsERC721A.sol",
								"erc721a/contracts/ERC721A.sol",
								"erc721a/contracts/IERC721A.sol",
								"erc721a/contracts/extensions/ERC721ABurnable.sol",
								"erc721a/contracts/extensions/ERC721AQueryable.sol",
								"erc721a/contracts/extensions/IERC721ABurnable.sol",
								"erc721a/contracts/extensions/IERC721AQueryable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"baseExtension()": "c6682862",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isMinter(address)": "aa271e1a",
							"maxSupply()": "d5abeb01",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeMint(address,uint256)": "a1448194",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setAllowMinter(address,bool)": "3c713026",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseURI(string)": "55f804b3",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_initBaseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_preMintAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"SetAllowMinter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseExtension\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setAllowMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721A/NagaKidsERC721A.sol\":\"NagaKids\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"ERC721A/NagaKidsERC721A.sol\":{\"keccak256\":\"0x0997fd0d3138ee9ecae866764981b2cd21cab91ad0784ab4e4849f4464e07071\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://895f2c0053fe1dac51bb30c2d3b85c2201b181876568cfa7d5b795f4a00a41d0\",\"dweb:/ipfs/QmQRzS8s7Th6EUxXMZACUCvxb2svJssK6TC8ijM55Kt1B4\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/ERC721ABurnable.sol\":{\"keccak256\":\"0x19ba9af16e4159db5e89cecf3288eefa8bd8dff0dbd0ca2560d9da05adb2728e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00c6045054fca386d5646c017c932759eb821b29363cd7c5ad3e3a1896e68d5f\",\"dweb:/ipfs/QmNuvnZ5spjAkPFfTKy6mzWSUFtgdkhJfGU6ZU9HgVov3u\"]},\"erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xfeeda22932d93d1b3ec71fa0d700f1bd5bd4e1979fa250156b82581e9591c5cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3bb3c16d7d01cfabc6d4d723dece47e8a6e8a6ef42188d5be213d43d70c2e87\",\"dweb:/ipfs/QmNrbZnzeUEbfcoamdexJsni1jUFbDMend8kjausHnpBSL\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]},\"erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x55e6863d273b676d65797fee7aac1b520848a0e31c0dd2e5a29887457043b7a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8477b7c9788e36787f79ef9b1580c46bdadc13da4c8ef85ce82d42a754743\",\"dweb:/ipfs/QmQvqKtF8YyJKqpEiNh1KkeC1Q5JmvEkQmP2ZCPYSW72BS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 669,
								"contract": "ERC721A/NagaKidsERC721A.sol:NagaKids",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 671,
								"contract": "ERC721A/NagaKidsERC721A.sol:NagaKids",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 673,
								"contract": "ERC721A/NagaKidsERC721A.sol:NagaKids",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 675,
								"contract": "ERC721A/NagaKidsERC721A.sol:NagaKids",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 679,
								"contract": "ERC721A/NagaKidsERC721A.sol:NagaKids",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 683,
								"contract": "ERC721A/NagaKidsERC721A.sol:NagaKids",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 687,
								"contract": "ERC721A/NagaKidsERC721A.sol:NagaKids",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 693,
								"contract": "ERC721A/NagaKidsERC721A.sol:NagaKids",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 7,
								"contract": "ERC721A/NagaKidsERC721A.sol:NagaKids",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 348,
								"contract": "ERC721A/NagaKidsERC721A.sol:NagaKids",
								"label": "_allowMinter",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 350,
								"contract": "ERC721A/NagaKidsERC721A.sol:NagaKids",
								"label": "baseURI",
								"offset": 0,
								"slot": "10",
								"type": "t_string_storage"
							},
							{
								"astId": 353,
								"contract": "ERC721A/NagaKidsERC721A.sol:NagaKids",
								"label": "baseExtension",
								"offset": 0,
								"slot": "11",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at `_startTokenId()` (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"erc721a/contracts/ERC721A.sol\":3986:4140  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4057  _name */\n  0x02\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4065  _name = name_ */\n  tag_6\n    /* \"erc721a/contracts/ERC721A.sol\":4060:4065  name_ */\n  dup4\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4057  _name */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4065  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4082  _symbol */\n  0x03\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4092  _symbol = symbol_ */\n  tag_8\n    /* \"erc721a/contracts/ERC721A.sol\":4085:4092  symbol_ */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4082  _symbol */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4092  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4332:4339  uint256 */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":4102:4133  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_13:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_14:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_22:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_24\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_26\n  tag_13\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_27:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_28:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_28)\ntag_30:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_31:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_33:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_34:\n    /* \"#utility.yul\":1354:1415   */\n  tag_35\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_14\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_37\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_14\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_15:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_39:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  sub\n    /* \"#utility.yul\":1816:1977   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2114:2659   */\ntag_17:\n    /* \"#utility.yul\":2216:2218   */\n  0x1f\n    /* \"#utility.yul\":2211:2214   */\n  dup3\n    /* \"#utility.yul\":2208:2219   */\n  gt\n    /* \"#utility.yul\":2205:2653   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2252:2253   */\n  0x00\n    /* \"#utility.yul\":2277:2282   */\n  dup2\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2266:2283   */\n  mstore\n    /* \"#utility.yul\":2322:2326   */\n  0x20\n    /* \"#utility.yul\":2318:2320   */\n  dup2\n    /* \"#utility.yul\":2308:2327   */\n  keccak256\n    /* \"#utility.yul\":2392:2394   */\n  0x1f\n    /* \"#utility.yul\":2380:2390   */\n  dup6\n    /* \"#utility.yul\":2376:2395   */\n  add\n    /* \"#utility.yul\":2373:2374   */\n  0x05\n    /* \"#utility.yul\":2369:2396   */\n  shr\n    /* \"#utility.yul\":2363:2367   */\n  dup2\n    /* \"#utility.yul\":2359:2397   */\n  add\n    /* \"#utility.yul\":2428:2432   */\n  0x20\n    /* \"#utility.yul\":2416:2426   */\n  dup7\n    /* \"#utility.yul\":2413:2433   */\n  lt\n    /* \"#utility.yul\":2410:2457   */\n  iszero\n  tag_44\n  jumpi\n  pop\n    /* \"#utility.yul\":2451:2455   */\n  dup1\n    /* \"#utility.yul\":2410:2457   */\ntag_44:\n    /* \"#utility.yul\":2506:2508   */\n  0x1f\n    /* \"#utility.yul\":2501:2504   */\n  dup6\n    /* \"#utility.yul\":2497:2509   */\n  add\n    /* \"#utility.yul\":2494:2495   */\n  0x05\n    /* \"#utility.yul\":2490:2510   */\n  shr\n    /* \"#utility.yul\":2484:2488   */\n  dup3\n    /* \"#utility.yul\":2480:2511   */\n  add\n    /* \"#utility.yul\":2470:2511   */\n  swap2\n  pop\n    /* \"#utility.yul\":2561:2643   */\ntag_45:\n    /* \"#utility.yul\":2579:2581   */\n  dup2\n    /* \"#utility.yul\":2572:2577   */\n  dup2\n    /* \"#utility.yul\":2569:2582   */\n  lt\n    /* \"#utility.yul\":2561:2643   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2624:2641   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2605:2606   */\n  0x01\n    /* \"#utility.yul\":2594:2607   */\n  add\n    /* \"#utility.yul\":2561:2643   */\n  jump(tag_45)\ntag_47:\n    /* \"#utility.yul\":2565:2568   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2205:2653   */\ntag_43:\n    /* \"#utility.yul\":2114:2659   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2835:4187   */\ntag_7:\n    /* \"#utility.yul\":2955:2965   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2977:3007   */\n  dup2\n  gt\n    /* \"#utility.yul\":2974:3030   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3010:3028   */\n  tag_51\n  tag_13\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":3039:3136   */\n  tag_52\n    /* \"#utility.yul\":3129:3135   */\n  dup2\n    /* \"#utility.yul\":3089:3127   */\n  tag_53\n    /* \"#utility.yul\":3121:3125   */\n  dup5\n    /* \"#utility.yul\":3115:3126   */\n  sload\n    /* \"#utility.yul\":3089:3127   */\n  tag_15\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":3083:3087   */\n  dup5\n    /* \"#utility.yul\":3039:3136   */\n  tag_17\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":3191:3195   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3255:3257   */\n  0x1f\n    /* \"#utility.yul\":3244:3258   */\n  dup4\n  gt\n    /* \"#utility.yul\":3272:3273   */\n  0x01\n    /* \"#utility.yul\":3267:3930   */\n  dup2\n  eq\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3991:3997   */\n  dup5\n    /* \"#utility.yul\":3988:4077   */\n  iszero\n  tag_56\n  jumpi\n  pop\n    /* \"#utility.yul\":4043:4062   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4037:4063   */\n  mload\n    /* \"#utility.yul\":3988:4077   */\ntag_56:\n  not(0x00)\n    /* \"#utility.yul\":2792:2793   */\n  0x03\n    /* \"#utility.yul\":2788:2799   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2784:2808   */\n  shr\n    /* \"#utility.yul\":2780:2809   */\n  not\n    /* \"#utility.yul\":2770:2810   */\n  and\n    /* \"#utility.yul\":2816:2817   */\n  0x01\n    /* \"#utility.yul\":2812:2823   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2767:2824   */\n  or\n    /* \"#utility.yul\":4090:4171   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3237:4181   */\n  jump(tag_47)\n    /* \"#utility.yul\":3267:3930   */\ntag_55:\n    /* \"#utility.yul\":2061:2062   */\n  0x00\n    /* \"#utility.yul\":2054:2068   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2098:2102   */\n  0x20\n    /* \"#utility.yul\":2085:2103   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3303:3323   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3421:3657   */\ntag_59:\n    /* \"#utility.yul\":3435:3442   */\n  dup3\n    /* \"#utility.yul\":3432:3433   */\n  dup2\n    /* \"#utility.yul\":3429:3443   */\n  lt\n    /* \"#utility.yul\":3421:3657   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3524:3543   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3518:3544   */\n  mload\n    /* \"#utility.yul\":3503:3545   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3616:3643   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3584:3585   */\n  0x01\n    /* \"#utility.yul\":3572:3586   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3451:3470   */\n  dup5\n  add\n    /* \"#utility.yul\":3421:3657   */\n  jump(tag_59)\ntag_61:\n    /* \"#utility.yul\":3425:3428   */\n  pop\n    /* \"#utility.yul\":3685:3691   */\n  dup6\n    /* \"#utility.yul\":3676:3683   */\n  dup3\n    /* \"#utility.yul\":3673:3692   */\n  lt\n    /* \"#utility.yul\":3670:3871   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":3746:3765   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3740:3766   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3829:3830   */\n  0x03\n    /* \"#utility.yul\":3825:3839   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3841:3844   */\n  0xf8\n    /* \"#utility.yul\":3821:3845   */\n  and\n    /* \"#utility.yul\":3817:3854   */\n  shr\n    /* \"#utility.yul\":3813:3855   */\n  not\n    /* \"#utility.yul\":3798:3856   */\n  and\n    /* \"#utility.yul\":3783:3857   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3670:3871   */\ntag_62:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3917:3918   */\n  0x01\n    /* \"#utility.yul\":3901:3915   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3897:3919   */\n  add\n    /* \"#utility.yul\":3884:3920   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2835:4187   */\n  jump\t// out\ntag_19:\n    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1692:1724   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1674:1725   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1647:1665   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1528:1731   */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n        /* \"erc721a/contracts/ERC721A.sol\":4998:5010  _burnCounter */\n      sload(0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":4789:4796  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":4982:4995  _currentIndex */\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5010  _currentIndex - _burnCounter */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":2319:2344   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2307:2309   */\n      0x20\n        /* \"#utility.yul\":2292:2310   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":2173:2350   */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_8:\n      tag_36\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_9:\n      tag_36\n      tag_49\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_10:\n      tag_30\n      tag_52\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_11:\n      tag_40\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_26\n      tag_61\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      tag_36\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_14:\n      tag_36\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_26\n      tag_72\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_20\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13781:13785  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13822  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13839  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"erc721a/contracts/ERC721A.sol\":5738:5742  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6058  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_81\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6134  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_81:\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_82\n      jumpi\n      pop\n      shl(0xe0, 0x5b5e139f)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6210  interfaceId == 0x5b5e139f */\n      dup4\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_82:\n        /* \"erc721a/contracts/ERC721A.sol\":6014:6210  return... */\n      swap3\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"erc721a/contracts/ERC721A.sol\":11215:11228  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11247:11252  _name */\n      0x02\n        /* \"erc721a/contracts/ERC721A.sol\":11240:11252  return _name */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_88\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_87)\n    tag_88:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_89:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_89\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_33:\n        /* \"erc721a/contracts/ERC721A.sol\":13116:13123  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      tag_91\n        /* \"erc721a/contracts/ERC721A.sol\":13148:13155  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13147  _exists */\n      tag_92\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_93\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13165:13199  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_93:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13232  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_39:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12696  address owner */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      tag_95\n        /* \"erc721a/contracts/ERC721A.sol\":12707:12714  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12706  ownerOf */\n      tag_53\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      jump\t// in\n    tag_95:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12715  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12758  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":12726:12898  if (_msgSenderERC721A() != owner)... */\n      tag_101\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_99\n        /* \"erc721a/contracts/ERC721A.sol\":12794:12799  owner */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_76\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_99:\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_101\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12848:12883  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_101:\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12923  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12937  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":12673:12987  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_47:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22211  uint256 prevOwnershipPacked */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      tag_106\n        /* \"erc721a/contracts/ERC721A.sol\":22233:22240  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22232  _packedOwnershipOf */\n      tag_107\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22241  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22297:22301  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22272:22291  prevOwnershipPacked */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_108\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22310:22338  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_108:\n        /* \"erc721a/contracts/ERC721A.sol\":22350:22377  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20821:20842  mstore(0x00, tokenId) */\n      dup3\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20652:20667  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":20862:20866  0x20 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":20855:20891  mstore(0x20, tokenApprovalsPtr.slot) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20943:20947  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":20927:20948  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":21031:21057  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":21766:21796  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":21468:21494  and(from, BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21745:21764  eq(msgSender, from) */\n      swap1\n      swap2\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":21742:21797  or(eq(msgSender, from), eq(msgSender, approvedAddress)) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":22526:22699  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_117\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_115\n        /* \"erc721a/contracts/ERC721A.sol\":22629:22633  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_76\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_115:\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_117\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22664:22699  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22730  to == address(0) */\n      dup6\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_118\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22739:22762  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_118:\n        /* \"erc721a/contracts/ERC721A.sol\":22905:22920  approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":23043:23044  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23022:23041  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":23015:23045  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23447  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23427:23453  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23519  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23495:23519  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":10863:10874  timestamp() */\n      timestamp\n        /* \"erc721a/contracts/ERC721A.sol\":10839:10861  BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":10835:10875  shl(BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":10822:10884  or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23800  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23954  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24117  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24122  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_126\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24174:24175  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":24164:24175  tokenId + 1 */\n      dup5\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":24142:24161  uint256 nextTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24312  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24330  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":24291:24669  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_128\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24431:24444  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24427  nextTokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24444  nextTokenId != _currentIndex */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n      tag_128\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24593  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24628  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n    tag_128:\n        /* \"erc721a/contracts/ERC721A.sol\":24124:24683  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_126:\n        /* \"erc721a/contracts/ERC721A.sol\":24727:24734  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24723:24725  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24717:24721  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":22174:24794  {... */\n      pop\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_50:\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      tag_132\n        /* \"erc721a/contracts/ERC721A.sol\":14062:14066  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14068:14070  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14072:14079  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14061  safeTransferFrom */\n      tag_70\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_132:\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_53:\n        /* \"erc721a/contracts/ERC721A.sol\":11021:11028  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      tag_82\n        /* \"erc721a/contracts/ERC721A.sol\":11082:11089  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11081  _packedOwnershipOf */\n      tag_107\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_58:\n        /* \"erc721a/contracts/ERC721A.sol\":6383:6390  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6425  owner == address(0) */\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_136\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":6434:6462  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_136:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6497  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":1022:1035  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6533  _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_61:\n        /* \"erc721a/contracts/ERC721A.sol\":11379:11392  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11411:11418  _symbol */\n      0x03\n        /* \"erc721a/contracts/ERC721A.sol\":11404:11418  return _symbol */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_66:\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13444  operator == _msgSenderERC721A() */\n      dup4\n      and\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n      tag_145\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13453:13470  ApproveToCaller() */\n      mload(0x40)\n      shl(0xe0, 0xb06307db)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n    tag_145:\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13499  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13541  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      swap2\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_70:\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      tag_150\n        /* \"erc721a/contracts/ERC721A.sol\":14331:14335  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14337:14339  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14341:14348  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14330  transferFrom */\n      tag_47\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14377  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14382  to.code.length != 0 */\n      iszero\n        /* \"erc721a/contracts/ERC721A.sol\":14359:14539  if (to.code.length != 0)... */\n      tag_154\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_152\n        /* \"erc721a/contracts/ERC721A.sol\":14432:14436  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14438:14440  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14442:14449  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14451:14456  _data */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14431  _checkContractOnERC721Received */\n      tag_153\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_152:\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_154\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14484:14524  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_154:\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"erc721a/contracts/ERC721A.sol\":11564:11577  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11610  _exists(tokenId) */\n      tag_156\n        /* \"erc721a/contracts/ERC721A.sol\":11602:11609  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11601  _exists */\n      tag_92\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11610  _exists(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"erc721a/contracts/ERC721A.sol\":11589:11648  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_157\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":11619:11648  URIQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe4, 0x0a14c4b5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":11589:11648  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_157:\n        /* \"erc721a/contracts/ERC721A.sol\":11659:11680  string memory baseURI */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11693  _baseURI() */\n      tag_158\n        /* \"erc721a/contracts/ERC721A.sol\":12125:12134  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":12049:12141  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11693  _baseURI() */\n    tag_158:\n        /* \"erc721a/contracts/ERC721A.sol\":11659:11693  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11716:11723  baseURI */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11731  bytes(baseURI).length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":11735:11736  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11736  bytes(baseURI).length != 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11797  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_160\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_161)\n    tag_160:\n        /* \"erc721a/contracts/ERC721A.sol\":11763:11770  baseURI */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11790  _toString(tokenId) */\n      tag_162\n        /* \"erc721a/contracts/ERC721A.sol\":11782:11789  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11781  _toString */\n      tag_163\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11790  _toString(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"erc721a/contracts/ERC721A.sol\":11746:11791  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_164\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11797  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_161:\n        /* \"erc721a/contracts/ERC721A.sol\":11703:11797  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_92:\n        /* \"erc721a/contracts/ERC721A.sol\":14848:14852  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":14935:14948  _currentIndex */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14932  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14948  tokenId < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":14883:15033  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_82\n      jumpi\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15002  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15028  _packedOwnerships[tokenId] & BITMASK_BURNED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15033  _packedOwnerships[tokenId] & BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":7949:9054  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_107:\n        /* \"erc721a/contracts/ERC721A.sol\":8016:8023  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8050:8057  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8148:8161  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8145  curr */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8161  curr < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8185:8199  uint256 packed */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8219  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n      shl(0xe0, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8312  packed & BITMASK_BURNED */\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8317  packed & BITMASK_BURNED == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n      tag_177\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n    tag_178:\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8813  packed */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8817:8818  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8818  packed == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      tag_161\n      jumpi\n      pop\n      not(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":8877:8883  --curr */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8876  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      jump(tag_178)\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n    tag_177:\n        /* \"erc721a/contracts/ERC721A.sol\":8163:8990  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n    tag_176:\n        /* \"erc721a/contracts/ERC721A.sol\":9016:9047  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n    tag_153:\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":28807:28811  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28872  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_190\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28894:28898  from */\n      dup10\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28900:28907  tokenId */\n      dup9\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28909:28914  _data */\n      dup9\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_191\n      jump\t// in\n    tag_190:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_193\n      swap2\n      dup2\n      add\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x01\n    tag_192:\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_195\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_200\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_199)\n    tag_200:\n      0x60\n      swap2\n      pop\n    tag_199:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29111  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29118  reason.length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29122:29123  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29123  reason.length == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n      tag_201\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":29150:29190  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n    tag_201:\n        /* \"erc721a/contracts/ERC721A.sol\":29290:29296  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":29284:29297  mload(reason) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29275:29281  reason */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29271:29273  32 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":29267:29282  add(32, reason) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":29260:29298  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_195:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":28983:29047  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":33078:34998  function _toString(uint256 value) internal pure returns (string memory ptr) {... */\n    tag_163:\n        /* \"erc721a/contracts/ERC721A.sol\":33541:33545  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":33535:33546  mload(0x40) */\n      dup1\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":33548:33551  128 */\n      0x80\n        /* \"erc721a/contracts/ERC721A.sol\":33531:33552  add(mload(0x40), 128) */\n      dup2\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":33624:33641  mstore(0x40, ptr) */\n      swap2\n      dup3\n      swap1\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":34307:34318  sub(ptr, 1) */\n      0x7f\n      add\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":34188:34193  value */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":34437:34439  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":34451:34453  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34441:34454  mod(temp, 10) */\n      dup3\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":34433:34455  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34307:34318  sub(ptr, 1) */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34420:34456  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":34491:34493  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34481:34494  div(temp, 10) */\n      swap1\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n    tag_206:\n        /* \"erc721a/contracts/ERC721A.sol\":34509:34513  temp */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":34695:34696  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":34690:34693  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34686:34697  sub(ptr, 1) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34679:34697  ptr := sub(ptr, 1) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34745:34747  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34739:34743  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34735:34748  mod(temp, 10) */\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":34731:34733  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":34727:34749  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34722:34725  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34714:34750  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":34602:34604  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34592:34605  div(temp, 10) */\n      swap1\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n      jump(tag_206)\n    tag_208:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34792:34805  sub(end, ptr) */\n      dup2\n      swap1\n      sub\n      not(0x1f)\n        /* \"erc721a/contracts/ERC721A.sol\":34905:34917  sub(ptr, 32) */\n      swap1\n      swap2\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34963:34982  mstore(ptr, length) */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":34905:34917  sub(ptr, 32) */\n      swap2\n        /* \"erc721a/contracts/ERC721A.sol\":33078:34998  function _toString(uint256 value) internal pure returns (string memory ptr) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_210:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":68:139   */\n    tag_217:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:395   */\n    tag_22:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_219:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_161\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_210\n      jump\t// in\n        /* \"#utility.yul\":592:850   */\n    tag_211:\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":674:787   */\n    tag_223:\n        /* \"#utility.yul\":688:694   */\n      dup4\n        /* \"#utility.yul\":685:686   */\n      dup2\n        /* \"#utility.yul\":682:695   */\n      lt\n        /* \"#utility.yul\":674:787   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":764:775   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":758:776   */\n      mload\n        /* \"#utility.yul\":745:756   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":738:777   */\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x20\n        /* \"#utility.yul\":703:713   */\n      add\n        /* \"#utility.yul\":674:787   */\n      jump(tag_223)\n    tag_225:\n        /* \"#utility.yul\":805:811   */\n      dup4\n        /* \"#utility.yul\":802:803   */\n      dup2\n        /* \"#utility.yul\":799:812   */\n      gt\n        /* \"#utility.yul\":796:844   */\n      iszero\n      tag_154\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":822:838   */\n      swap2\n      add\n        /* \"#utility.yul\":815:842   */\n      mstore\n        /* \"#utility.yul\":592:850   */\n      jump\t// out\n        /* \"#utility.yul\":855:1113   */\n    tag_212:\n        /* \"#utility.yul\":897:900   */\n      0x00\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":929:941   */\n      mload\n        /* \"#utility.yul\":962:968   */\n      dup1\n        /* \"#utility.yul\":957:960   */\n      dup5\n        /* \"#utility.yul\":950:969   */\n      mstore\n        /* \"#utility.yul\":978:1041   */\n      tag_228\n        /* \"#utility.yul\":1034:1040   */\n      dup2\n        /* \"#utility.yul\":1027:1031   */\n      0x20\n        /* \"#utility.yul\":1022:1025   */\n      dup7\n        /* \"#utility.yul\":1018:1032   */\n      add\n        /* \"#utility.yul\":1011:1015   */\n      0x20\n        /* \"#utility.yul\":1004:1009   */\n      dup7\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":978:1041   */\n      tag_211\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1095:1097   */\n      0x1f\n        /* \"#utility.yul\":1074:1089   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1070:1099   */\n      and\n        /* \"#utility.yul\":1061:1100   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1102:1106   */\n      0x20\n        /* \"#utility.yul\":1057:1107   */\n      add\n      swap3\n        /* \"#utility.yul\":855:1113   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1338   */\n    tag_29:\n        /* \"#utility.yul\":1267:1269   */\n      0x20\n        /* \"#utility.yul\":1256:1265   */\n      dup2\n        /* \"#utility.yul\":1249:1270   */\n      mstore\n        /* \"#utility.yul\":1230:1234   */\n      0x00\n        /* \"#utility.yul\":1287:1332   */\n      tag_161\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1317:1326   */\n      dup4\n        /* \"#utility.yul\":1313:1331   */\n      add\n        /* \"#utility.yul\":1305:1311   */\n      dup5\n        /* \"#utility.yul\":1287:1332   */\n      tag_212\n      jump\t// in\n        /* \"#utility.yul\":1343:1523   */\n    tag_32:\n        /* \"#utility.yul\":1402:1408   */\n      0x00\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1443:1452   */\n      dup3\n        /* \"#utility.yul\":1434:1441   */\n      dup5\n        /* \"#utility.yul\":1430:1453   */\n      sub\n        /* \"#utility.yul\":1426:1458   */\n      slt\n        /* \"#utility.yul\":1423:1475   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1468:1469   */\n      dup1\n        /* \"#utility.yul\":1461:1473   */\n      revert\n        /* \"#utility.yul\":1423:1475   */\n    tag_232:\n      pop\n        /* \"#utility.yul\":1494:1517   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1343:1523   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:1909   */\n    tag_213:\n        /* \"#utility.yul\":1804:1824   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1853:1884   */\n      dup2\n      and\n        /* \"#utility.yul\":1843:1885   */\n      dup2\n      eq\n        /* \"#utility.yul\":1833:1903   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1896:1897   */\n      dup1\n        /* \"#utility.yul\":1889:1901   */\n      revert\n        /* \"#utility.yul\":1833:1903   */\n    tag_235:\n        /* \"#utility.yul\":1736:1909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1914:2168   */\n    tag_38:\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":1990:1996   */\n      dup1\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2022:2029   */\n      dup6\n        /* \"#utility.yul\":2018:2041   */\n      sub\n        /* \"#utility.yul\":2014:2046   */\n      slt\n        /* \"#utility.yul\":2011:2063   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2056:2057   */\n      dup1\n        /* \"#utility.yul\":2049:2061   */\n      revert\n        /* \"#utility.yul\":2011:2063   */\n    tag_237:\n        /* \"#utility.yul\":2082:2111   */\n      tag_238\n        /* \"#utility.yul\":2101:2110   */\n      dup4\n        /* \"#utility.yul\":2082:2111   */\n      tag_213\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2072:2111   */\n      swap5\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2143:2161   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2130:2162   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1914:2168   */\n      jump\t// out\n        /* \"#utility.yul\":2355:2683   */\n    tag_46:\n        /* \"#utility.yul\":2432:2438   */\n      0x00\n        /* \"#utility.yul\":2440:2446   */\n      dup1\n        /* \"#utility.yul\":2448:2454   */\n      0x00\n        /* \"#utility.yul\":2501:2503   */\n      0x60\n        /* \"#utility.yul\":2489:2498   */\n      dup5\n        /* \"#utility.yul\":2480:2487   */\n      dup7\n        /* \"#utility.yul\":2476:2499   */\n      sub\n        /* \"#utility.yul\":2472:2504   */\n      slt\n        /* \"#utility.yul\":2469:2521   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":2517:2518   */\n      0x00\n        /* \"#utility.yul\":2514:2515   */\n      dup1\n        /* \"#utility.yul\":2507:2519   */\n      revert\n        /* \"#utility.yul\":2469:2521   */\n    tag_241:\n        /* \"#utility.yul\":2540:2569   */\n      tag_242\n        /* \"#utility.yul\":2559:2568   */\n      dup5\n        /* \"#utility.yul\":2540:2569   */\n      tag_213\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2530:2569   */\n      swap3\n      pop\n        /* \"#utility.yul\":2588:2626   */\n      tag_243\n        /* \"#utility.yul\":2622:2624   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup6\n        /* \"#utility.yul\":2607:2625   */\n      add\n        /* \"#utility.yul\":2588:2626   */\n      tag_213\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2578:2626   */\n      swap2\n      pop\n        /* \"#utility.yul\":2673:2675   */\n      0x40\n        /* \"#utility.yul\":2662:2671   */\n      dup5\n        /* \"#utility.yul\":2658:2676   */\n      add\n        /* \"#utility.yul\":2645:2677   */\n      calldataload\n        /* \"#utility.yul\":2635:2677   */\n      swap1\n      pop\n        /* \"#utility.yul\":2355:2683   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2688:2874   */\n    tag_57:\n        /* \"#utility.yul\":2747:2753   */\n      0x00\n        /* \"#utility.yul\":2800:2802   */\n      0x20\n        /* \"#utility.yul\":2788:2797   */\n      dup3\n        /* \"#utility.yul\":2779:2786   */\n      dup5\n        /* \"#utility.yul\":2775:2798   */\n      sub\n        /* \"#utility.yul\":2771:2803   */\n      slt\n        /* \"#utility.yul\":2768:2820   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":2816:2817   */\n      0x00\n        /* \"#utility.yul\":2813:2814   */\n      dup1\n        /* \"#utility.yul\":2806:2818   */\n      revert\n        /* \"#utility.yul\":2768:2820   */\n    tag_245:\n        /* \"#utility.yul\":2839:2868   */\n      tag_161\n        /* \"#utility.yul\":2858:2867   */\n      dup3\n        /* \"#utility.yul\":2839:2868   */\n      tag_213\n      jump\t// in\n        /* \"#utility.yul\":2879:3226   */\n    tag_65:\n        /* \"#utility.yul\":2944:2950   */\n      0x00\n        /* \"#utility.yul\":2952:2958   */\n      dup1\n        /* \"#utility.yul\":3005:3007   */\n      0x40\n        /* \"#utility.yul\":2993:3002   */\n      dup4\n        /* \"#utility.yul\":2984:2991   */\n      dup6\n        /* \"#utility.yul\":2980:3003   */\n      sub\n        /* \"#utility.yul\":2976:3008   */\n      slt\n        /* \"#utility.yul\":2973:3025   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":3021:3022   */\n      0x00\n        /* \"#utility.yul\":3018:3019   */\n      dup1\n        /* \"#utility.yul\":3011:3023   */\n      revert\n        /* \"#utility.yul\":2973:3025   */\n    tag_248:\n        /* \"#utility.yul\":3044:3073   */\n      tag_249\n        /* \"#utility.yul\":3063:3072   */\n      dup4\n        /* \"#utility.yul\":3044:3073   */\n      tag_213\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3034:3073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3123:3125   */\n      0x20\n        /* \"#utility.yul\":3112:3121   */\n      dup4\n        /* \"#utility.yul\":3108:3126   */\n      add\n        /* \"#utility.yul\":3095:3127   */\n      calldataload\n        /* \"#utility.yul\":3170:3175   */\n      dup1\n        /* \"#utility.yul\":3163:3176   */\n      iszero\n        /* \"#utility.yul\":3156:3177   */\n      iszero\n        /* \"#utility.yul\":3149:3154   */\n      dup2\n        /* \"#utility.yul\":3146:3178   */\n      eq\n        /* \"#utility.yul\":3136:3196   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":3192:3193   */\n      0x00\n        /* \"#utility.yul\":3189:3190   */\n      dup1\n        /* \"#utility.yul\":3182:3194   */\n      revert\n        /* \"#utility.yul\":3136:3196   */\n    tag_250:\n        /* \"#utility.yul\":3215:3220   */\n      dup1\n        /* \"#utility.yul\":3205:3220   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2879:3226   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3231:3358   */\n    tag_214:\n        /* \"#utility.yul\":3292:3302   */\n      0x4e487b71\n        /* \"#utility.yul\":3287:3290   */\n      0xe0\n        /* \"#utility.yul\":3283:3303   */\n      shl\n        /* \"#utility.yul\":3280:3281   */\n      0x00\n        /* \"#utility.yul\":3273:3304   */\n      mstore\n        /* \"#utility.yul\":3323:3327   */\n      0x41\n        /* \"#utility.yul\":3320:3321   */\n      0x04\n        /* \"#utility.yul\":3313:3328   */\n      mstore\n        /* \"#utility.yul\":3347:3351   */\n      0x24\n        /* \"#utility.yul\":3344:3345   */\n      0x00\n        /* \"#utility.yul\":3337:3352   */\n      revert\n        /* \"#utility.yul\":3363:4501   */\n    tag_69:\n        /* \"#utility.yul\":3458:3464   */\n      0x00\n        /* \"#utility.yul\":3466:3472   */\n      dup1\n        /* \"#utility.yul\":3474:3480   */\n      0x00\n        /* \"#utility.yul\":3482:3488   */\n      dup1\n        /* \"#utility.yul\":3535:3538   */\n      0x80\n        /* \"#utility.yul\":3523:3532   */\n      dup6\n        /* \"#utility.yul\":3514:3521   */\n      dup8\n        /* \"#utility.yul\":3510:3533   */\n      sub\n        /* \"#utility.yul\":3506:3539   */\n      slt\n        /* \"#utility.yul\":3503:3556   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":3552:3553   */\n      0x00\n        /* \"#utility.yul\":3549:3550   */\n      dup1\n        /* \"#utility.yul\":3542:3554   */\n      revert\n        /* \"#utility.yul\":3503:3556   */\n    tag_253:\n        /* \"#utility.yul\":3575:3604   */\n      tag_254\n        /* \"#utility.yul\":3594:3603   */\n      dup6\n        /* \"#utility.yul\":3575:3604   */\n      tag_213\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3565:3604   */\n      swap4\n      pop\n        /* \"#utility.yul\":3623:3661   */\n      tag_255\n        /* \"#utility.yul\":3657:3659   */\n      0x20\n        /* \"#utility.yul\":3646:3655   */\n      dup7\n        /* \"#utility.yul\":3642:3660   */\n      add\n        /* \"#utility.yul\":3623:3661   */\n      tag_213\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3613:3661   */\n      swap3\n      pop\n        /* \"#utility.yul\":3708:3710   */\n      0x40\n        /* \"#utility.yul\":3697:3706   */\n      dup6\n        /* \"#utility.yul\":3693:3711   */\n      add\n        /* \"#utility.yul\":3680:3712   */\n      calldataload\n        /* \"#utility.yul\":3670:3712   */\n      swap2\n      pop\n        /* \"#utility.yul\":3763:3765   */\n      0x60\n        /* \"#utility.yul\":3752:3761   */\n      dup6\n        /* \"#utility.yul\":3748:3766   */\n      add\n        /* \"#utility.yul\":3735:3767   */\n      calldataload\n        /* \"#utility.yul\":3786:3804   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3827:3829   */\n      dup1\n        /* \"#utility.yul\":3819:3825   */\n      dup3\n        /* \"#utility.yul\":3816:3830   */\n      gt\n        /* \"#utility.yul\":3813:3847   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":3843:3844   */\n      0x00\n        /* \"#utility.yul\":3840:3841   */\n      dup1\n        /* \"#utility.yul\":3833:3845   */\n      revert\n        /* \"#utility.yul\":3813:3847   */\n    tag_256:\n        /* \"#utility.yul\":3881:3887   */\n      dup2\n        /* \"#utility.yul\":3870:3879   */\n      dup8\n        /* \"#utility.yul\":3866:3888   */\n      add\n        /* \"#utility.yul\":3856:3888   */\n      swap2\n      pop\n        /* \"#utility.yul\":3926:3933   */\n      dup8\n        /* \"#utility.yul\":3919:3923   */\n      0x1f\n        /* \"#utility.yul\":3915:3917   */\n      dup4\n        /* \"#utility.yul\":3911:3924   */\n      add\n        /* \"#utility.yul\":3907:3934   */\n      slt\n        /* \"#utility.yul\":3897:3952   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3945:3946   */\n      dup1\n        /* \"#utility.yul\":3938:3950   */\n      revert\n        /* \"#utility.yul\":3897:3952   */\n    tag_257:\n        /* \"#utility.yul\":3984:3986   */\n      dup2\n        /* \"#utility.yul\":3971:3987   */\n      calldataload\n        /* \"#utility.yul\":4006:4008   */\n      dup2\n        /* \"#utility.yul\":4002:4004   */\n      dup2\n        /* \"#utility.yul\":3999:4009   */\n      gt\n        /* \"#utility.yul\":3996:4032   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":4012:4030   */\n      tag_259\n      tag_214\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4087:4089   */\n      0x40\n        /* \"#utility.yul\":4081:4090   */\n      mload\n        /* \"#utility.yul\":4055:4057   */\n      0x1f\n        /* \"#utility.yul\":4141:4154   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4137:4159   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4161:4163   */\n      0x3f\n        /* \"#utility.yul\":4133:4164   */\n      add\n        /* \"#utility.yul\":4129:4169   */\n      and\n        /* \"#utility.yul\":4117:4170   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4185:4203   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4205:4227   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4182:4228   */\n      or\n        /* \"#utility.yul\":4179:4251   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":4231:4249   */\n      tag_261\n      tag_214\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4271:4281   */\n      dup2\n        /* \"#utility.yul\":4267:4269   */\n      0x40\n        /* \"#utility.yul\":4260:4282   */\n      mstore\n        /* \"#utility.yul\":4306:4308   */\n      dup3\n        /* \"#utility.yul\":4298:4304   */\n      dup2\n        /* \"#utility.yul\":4291:4309   */\n      mstore\n        /* \"#utility.yul\":4346:4353   */\n      dup11\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4336:4338   */\n      dup5\n        /* \"#utility.yul\":4332:4334   */\n      dup8\n        /* \"#utility.yul\":4328:4339   */\n      add\n        /* \"#utility.yul\":4324:4344   */\n      add\n        /* \"#utility.yul\":4321:4354   */\n      gt\n        /* \"#utility.yul\":4318:4371   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":4367:4368   */\n      0x00\n        /* \"#utility.yul\":4364:4365   */\n      dup1\n        /* \"#utility.yul\":4357:4369   */\n      revert\n        /* \"#utility.yul\":4318:4371   */\n    tag_262:\n        /* \"#utility.yul\":4423:4425   */\n      dup3\n        /* \"#utility.yul\":4418:4420   */\n      0x20\n        /* \"#utility.yul\":4414:4416   */\n      dup7\n        /* \"#utility.yul\":4410:4421   */\n      add\n        /* \"#utility.yul\":4405:4407   */\n      0x20\n        /* \"#utility.yul\":4397:4403   */\n      dup4\n        /* \"#utility.yul\":4393:4408   */\n      add\n        /* \"#utility.yul\":4380:4426   */\n      calldatacopy\n        /* \"#utility.yul\":4468:4469   */\n      0x00\n        /* \"#utility.yul\":4463:4465   */\n      0x20\n        /* \"#utility.yul\":4458:4460   */\n      dup5\n        /* \"#utility.yul\":4450:4456   */\n      dup4\n        /* \"#utility.yul\":4446:4461   */\n      add\n        /* \"#utility.yul\":4442:4466   */\n      add\n        /* \"#utility.yul\":4435:4470   */\n      mstore\n        /* \"#utility.yul\":4489:4495   */\n      dup1\n        /* \"#utility.yul\":4479:4495   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3363:4501   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4506:4766   */\n    tag_77:\n        /* \"#utility.yul\":4574:4580   */\n      0x00\n        /* \"#utility.yul\":4582:4588   */\n      dup1\n        /* \"#utility.yul\":4635:4637   */\n      0x40\n        /* \"#utility.yul\":4623:4632   */\n      dup4\n        /* \"#utility.yul\":4614:4621   */\n      dup6\n        /* \"#utility.yul\":4610:4633   */\n      sub\n        /* \"#utility.yul\":4606:4638   */\n      slt\n        /* \"#utility.yul\":4603:4655   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":4651:4652   */\n      0x00\n        /* \"#utility.yul\":4648:4649   */\n      dup1\n        /* \"#utility.yul\":4641:4653   */\n      revert\n        /* \"#utility.yul\":4603:4655   */\n    tag_264:\n        /* \"#utility.yul\":4674:4703   */\n      tag_265\n        /* \"#utility.yul\":4693:4702   */\n      dup4\n        /* \"#utility.yul\":4674:4703   */\n      tag_213\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4664:4703   */\n      swap2\n      pop\n        /* \"#utility.yul\":4722:4760   */\n      tag_266\n        /* \"#utility.yul\":4756:4758   */\n      0x20\n        /* \"#utility.yul\":4745:4754   */\n      dup5\n        /* \"#utility.yul\":4741:4759   */\n      add\n        /* \"#utility.yul\":4722:4760   */\n      tag_213\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4712:4760   */\n      swap1\n      pop\n        /* \"#utility.yul\":4506:4766   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4771:5151   */\n    tag_85:\n        /* \"#utility.yul\":4850:4851   */\n      0x01\n        /* \"#utility.yul\":4846:4858   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4893:4905   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4914:4975   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":4968:4972   */\n      0x7f\n        /* \"#utility.yul\":4960:4966   */\n      dup3\n        /* \"#utility.yul\":4956:4973   */\n      and\n        /* \"#utility.yul\":4946:4973   */\n      swap2\n      pop\n        /* \"#utility.yul\":4914:4975   */\n    tag_268:\n        /* \"#utility.yul\":5021:5023   */\n      0x20\n        /* \"#utility.yul\":5013:5019   */\n      dup3\n        /* \"#utility.yul\":5010:5024   */\n      lt\n        /* \"#utility.yul\":4990:5008   */\n      dup2\n        /* \"#utility.yul\":4987:5025   */\n      sub\n        /* \"#utility.yul\":4984:5145   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":5067:5077   */\n      0x4e487b71\n        /* \"#utility.yul\":5062:5065   */\n      0xe0\n        /* \"#utility.yul\":5058:5078   */\n      shl\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5048:5079   */\n      mstore\n        /* \"#utility.yul\":5102:5106   */\n      0x22\n        /* \"#utility.yul\":5099:5100   */\n      0x04\n        /* \"#utility.yul\":5092:5107   */\n      mstore\n        /* \"#utility.yul\":5130:5134   */\n      0x24\n        /* \"#utility.yul\":5127:5128   */\n      0x00\n        /* \"#utility.yul\":5120:5135   */\n      revert\n        /* \"#utility.yul\":4984:5145   */\n    tag_269:\n      pop\n        /* \"#utility.yul\":4771:5151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5626   */\n    tag_165:\n        /* \"#utility.yul\":5335:5338   */\n      0x00\n        /* \"#utility.yul\":5373:5379   */\n      dup4\n        /* \"#utility.yul\":5367:5380   */\n      mload\n        /* \"#utility.yul\":5389:5442   */\n      tag_271\n        /* \"#utility.yul\":5435:5441   */\n      dup2\n        /* \"#utility.yul\":5430:5433   */\n      dup5\n        /* \"#utility.yul\":5423:5427   */\n      0x20\n        /* \"#utility.yul\":5415:5421   */\n      dup9\n        /* \"#utility.yul\":5411:5428   */\n      add\n        /* \"#utility.yul\":5389:5442   */\n      tag_211\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5505:5518   */\n      dup4\n      mload\n        /* \"#utility.yul\":5464:5480   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":5527:5584   */\n      tag_272\n        /* \"#utility.yul\":5505:5518   */\n      dup2\n        /* \"#utility.yul\":5464:5480   */\n      dup4\n        /* \"#utility.yul\":5561:5565   */\n      0x20\n        /* \"#utility.yul\":5549:5566   */\n      dup9\n      add\n        /* \"#utility.yul\":5527:5584   */\n      tag_211\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5600:5620   */\n      add\n      swap5\n        /* \"#utility.yul\":5156:5626   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5631:6120   */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5900:5915   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":5882:5916   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5952:5967   */\n      dup5\n      and\n        /* \"#utility.yul\":5947:5949   */\n      0x20\n        /* \"#utility.yul\":5932:5950   */\n      dup3\n      add\n        /* \"#utility.yul\":5925:5968   */\n      mstore\n        /* \"#utility.yul\":5999:6001   */\n      0x40\n        /* \"#utility.yul\":5984:6002   */\n      dup2\n      add\n        /* \"#utility.yul\":5977:6011   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6047:6050   */\n      0x80\n        /* \"#utility.yul\":6042:6044   */\n      0x60\n        /* \"#utility.yul\":6027:6045   */\n      dup3\n      add\n        /* \"#utility.yul\":6020:6051   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5825:5829   */\n      0x00\n      swap1\n        /* \"#utility.yul\":6068:6114   */\n      tag_274\n      swap1\n        /* \"#utility.yul\":6094:6113   */\n      dup4\n      add\n        /* \"#utility.yul\":6086:6092   */\n      dup5\n        /* \"#utility.yul\":6068:6114   */\n      tag_212\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":6060:6114   */\n      swap7\n        /* \"#utility.yul\":5631:6120   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6125:6374   */\n    tag_194:\n        /* \"#utility.yul\":6194:6200   */\n      0x00\n        /* \"#utility.yul\":6247:6249   */\n      0x20\n        /* \"#utility.yul\":6235:6244   */\n      dup3\n        /* \"#utility.yul\":6226:6233   */\n      dup5\n        /* \"#utility.yul\":6222:6245   */\n      sub\n        /* \"#utility.yul\":6218:6250   */\n      slt\n        /* \"#utility.yul\":6215:6267   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":6263:6264   */\n      0x00\n        /* \"#utility.yul\":6260:6261   */\n      dup1\n        /* \"#utility.yul\":6253:6265   */\n      revert\n        /* \"#utility.yul\":6215:6267   */\n    tag_276:\n        /* \"#utility.yul\":6295:6304   */\n      dup2\n        /* \"#utility.yul\":6289:6305   */\n      mload\n        /* \"#utility.yul\":6314:6344   */\n      tag_161\n        /* \"#utility.yul\":6338:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_210\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220113b81d1a5a20c7fe0271c8de1004c0e4d3861dd04dc4ef941abcd61c7145f4b64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_714": {
									"entryPoint": null,
									"id": 714,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_723": {
									"entryPoint": null,
									"id": 723,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 94,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4189:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:10"
															},
															"nodeType": "YulIf",
															"src": "220:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:10"
															},
															"nodeType": "YulIf",
															"src": "353:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:10"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:10"
															},
															"nodeType": "YulIf",
															"src": "536:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:10"
															},
															"nodeType": "YulIf",
															"src": "698:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:10"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:10"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:10",
																"statements": []
															},
															"src": "779:133:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:10"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:10"
															},
															"nodeType": "YulIf",
															"src": "921:80:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:10",
														"type": ""
													}
												],
												"src": "146:885:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:10"
															},
															"nodeType": "YulIf",
															"src": "1164:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:10"
															},
															"nodeType": "YulIf",
															"src": "1301:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:10"
															},
															"nodeType": "YulIf",
															"src": "1474:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:10",
														"type": ""
													}
												],
												"src": "1036:562:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:10"
															},
															"nodeType": "YulIf",
															"src": "1746:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:10"
															},
															"nodeType": "YulIf",
															"src": "1816:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:10",
														"type": ""
													}
												],
												"src": "1603:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2044:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2064:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2054:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2095:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2085:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2027:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2035:4:10",
														"type": ""
													}
												],
												"src": "1988:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2195:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2228:425:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2242:11:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2252:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2246:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2277:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2266:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2266:17:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2266:17:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2296:31:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2318:2:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2322:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2308:9:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2308:19:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2300:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2340:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2363:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2373:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2380:10:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2392:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2376:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2376:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2369:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2369:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2359:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2359:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2344:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2434:23:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2436:19:10",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2451:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2436:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2416:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2428:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2413:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2413:20:10"
																		},
																		"nodeType": "YulIf",
																		"src": "2410:47:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2470:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2484:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2494:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2501:3:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2506:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2497:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2497:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2490:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2490:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2480:31:10"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2474:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2524:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2537:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2528:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2622:21:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2631:5:10"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2638:2:10"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2624:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2624:17:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2624:17:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2572:5:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2579:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2569:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2569:13:10"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2583:26:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2585:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2598:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2605:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2594:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2594:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2585:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2565:3:10",
																			"statements": []
																		},
																		"src": "2561:82:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2211:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2208:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2208:11:10"
															},
															"nodeType": "YulIf",
															"src": "2205:448:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2167:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2174:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2179:10:10",
														"type": ""
													}
												],
												"src": "2114:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2749:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2759:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2774:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2792:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2795:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2788:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2788:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2805:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2801:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2801:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2784:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2784:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2780:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2780:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2816:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2819:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2767:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2767:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2759:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2726:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2732:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2740:4:10",
														"type": ""
													}
												],
												"src": "2664:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:1256:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2941:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2961:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2955:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2945:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3008:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3010:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3010:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3010:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2980:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2996:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3000:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2992:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2992:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3004:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2988:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2977:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2977:30:10"
															},
															"nodeType": "YulIf",
															"src": "2974:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3083:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3121:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3115:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3115:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3089:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:38:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3129:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3039:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:97:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3039:97:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3145:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3162:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3149:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3172:23:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3191:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3176:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3204:24:10",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3217:11:10"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3204:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3274:656:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3288:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3307:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3319:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3315:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3315:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3303:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3303:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3292:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3336:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3380:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3350:29:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3350:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3340:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3398:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3407:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3402:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3485:172:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3510:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3528:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3533:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3524:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3524:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3518:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3518:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3503:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3503:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3503:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3562:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3576:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3584:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3572:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3572:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3562:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3603:40:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3620:9:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3631:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3616:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3616:27:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3603:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3432:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3435:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3429:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3429:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3444:28:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3446:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3455:1:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3458:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3451:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3451:19:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3446:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3425:3:10",
																					"statements": []
																				},
																				"src": "3421:236:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3705:166:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3723:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3750:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3755:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3746:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3746:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3740:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3740:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3727:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3790:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3802:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3829:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3832:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3825:3:10"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3825:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3841:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3821:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3821:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3851:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3847:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3847:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3817:3:10"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3817:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3813:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3813:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3798:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3798:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3783:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3783:74:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3783:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3676:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3685:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3673:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3673:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "3670:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3891:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3905:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3908:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3901:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3901:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3917:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3897:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3897:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3884:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3884:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3884:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3267:663:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3272:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3947:234:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3961:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3974:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3965:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4010:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4028:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4047:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4052:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4043:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4043:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4037:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4037:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4028:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3991:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "3988:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4097:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4156:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4163:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4103:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4103:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4090:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4090:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4090:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3939:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3247:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3255:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3244:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3244:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "3237:944:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2916:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2922:3:10",
														"type": ""
													}
												],
												"src": "2835:1352:10"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x101D CODESIZE SUB DUP1 PUSH3 0x101D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x12B JUMP JUMPDEST PUSH1 0x2 PUSH3 0x42 DUP4 DUP3 PUSH3 0x224 JUMP JUMPDEST POP PUSH1 0x3 PUSH3 0x51 DUP3 DUP3 PUSH3 0x224 JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SSTORE POP PUSH3 0x2F0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xA3 JUMPI PUSH3 0xA3 PUSH3 0x5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCE JUMPI PUSH3 0xCE PUSH3 0x5E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10F JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xF0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x121 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x165 DUP7 DUP4 DUP8 ADD PUSH3 0x74 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x18B DUP6 DUP3 DUP7 ADD PUSH3 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x21F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1FA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x21B JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x206 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x240 JUMPI PUSH3 0x240 PUSH3 0x5E JUMP JUMPDEST PUSH3 0x258 DUP2 PUSH3 0x251 DUP5 SLOAD PUSH3 0x195 JUMP JUMPDEST DUP5 PUSH3 0x1D1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x290 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x277 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x21B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2C1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2A0 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2E0 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD1D DUP1 PUSH3 0x300 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x625 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x27C JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x297 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC24 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xC24 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP3 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x5CB JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x3B7 JUMPI PUSH2 0x39A DUP2 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E DUP3 PUSH2 0x7CB JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x49E JUMPI PUSH2 0x481 DUP7 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x562 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x560 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x560 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5C6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297 DUP3 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC24 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06307DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6D4 DUP5 DUP5 DUP5 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x70D JUMPI PUSH2 0x6F0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x71E DUP3 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x73B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x752 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x79D JUMP JUMPDEST DUP1 PUSH2 0x77C DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78D SWAP3 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x297 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0x817 JUMPI JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x79D JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7F6 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x867 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8A2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x89F SWAP2 DUP2 ADD SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x900 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x8D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x7F ADD SWAP1 DUP3 PUSH1 0x30 PUSH1 0xA DUP3 MOD ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV JUMPDEST DUP1 ISZERO PUSH2 0x95A JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV PUSH2 0x93C JUMP JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x79D DUP2 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9BD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9A5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x70D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x9E6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x79D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA5E DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8A DUP5 PUSH2 0xA26 JUMP JUMPDEST SWAP3 POP PUSH2 0xA98 PUSH1 0x20 DUP6 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79D DUP3 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xADF DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB34 DUP6 PUSH2 0xA26 JUMP JUMPDEST SWAP4 POP PUSH2 0xB42 PUSH1 0x20 DUP7 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB8C JUMPI PUSH2 0xB8C PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0xAFF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xBCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0D DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH2 0xC1B PUSH1 0x20 DUP5 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC38 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC58 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xC70 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x9A2 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xC84 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x9A2 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xCC0 SWAP1 DUP4 ADD DUP5 PUSH2 0x9CE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x79D DUP2 PUSH2 0x96C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT EXTCODESIZE DUP2 0xD1 0xA5 LOG2 0xC PUSH32 0xE0271C8DE1004C0E4D3861DD04DC4EF941ABCD61C7145F4B64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "885:34115:4:-:0;;;3986:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4052:5;:13;4060:5;4052;:13;:::i;:::-;-1:-1:-1;4075:7:4;:17;4085:7;4075;:17;:::i;:::-;-1:-1:-1;;4332:7:4;4102:31;;-1:-1:-1;885:34115:4;;14:127:10;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:10;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:10;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:10:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:10;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;2114:545::-;2216:2;2211:3;2208:11;2205:448;;;2252:1;2277:5;2273:2;2266:17;2322:4;2318:2;2308:19;2392:2;2380:10;2376:19;2373:1;2369:27;2363:4;2359:38;2428:4;2416:10;2413:20;2410:47;;;-1:-1:-1;2451:4:10;2410:47;2506:2;2501:3;2497:12;2494:1;2490:20;2484:4;2480:31;2470:41;;2561:82;2579:2;2572:5;2569:13;2561:82;;;2624:17;;;2605:1;2594:13;2561:82;;;2565:3;;;2205:448;2114:545;;;:::o;2835:1352::-;2955:10;;-1:-1:-1;;;;;2977:30:10;;2974:56;;;3010:18;;:::i;:::-;3039:97;3129:6;3089:38;3121:4;3115:11;3089:38;:::i;:::-;3083:4;3039:97;:::i;:::-;3191:4;;3255:2;3244:14;;3272:1;3267:663;;;;3974:1;3991:6;3988:89;;;-1:-1:-1;4043:19:10;;;4037:26;3988:89;-1:-1:-1;;2792:1:10;2788:11;;;2784:24;2780:29;2770:40;2816:1;2812:11;;;2767:57;4090:81;;3237:944;;3267:663;2061:1;2054:14;;;2098:4;2085:18;;-1:-1:-1;;3303:20:10;;;3421:236;3435:7;3432:1;3429:14;3421:236;;;3524:19;;;3518:26;3503:42;;3616:27;;;;3584:1;3572:14;;;;3451:19;;3421:236;;;3425:3;3685:6;3676:7;3673:19;3670:201;;;3746:19;;;3740:26;-1:-1:-1;;3829:1:10;3825:14;;;3841:3;3821:24;3817:37;3813:42;3798:58;3783:74;;3670:201;-1:-1:-1;;;;;3917:1:10;3901:14;;;3897:22;3884:36;;-1:-1:-1;2835:1352:10:o;:::-;885:34115:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_2201": {
									"entryPoint": null,
									"id": 2201,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_1175": {
									"entryPoint": null,
									"id": 1175,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_2188": {
									"entryPoint": null,
									"id": 2188,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2085": {
									"entryPoint": 2098,
									"id": 2085,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1386": {
									"entryPoint": 1956,
									"id": 1386,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_2175": {
									"entryPoint": null,
									"id": 2175,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedAddress_1707": {
									"entryPoint": null,
									"id": 1707,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isOwnerOrApproved_1721": {
									"entryPoint": null,
									"id": 1721,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_2211": {
									"entryPoint": null,
									"id": 2211,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2162": {
									"entryPoint": null,
									"id": 2162,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_1083": {
									"entryPoint": null,
									"id": 1083,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_963": {
									"entryPoint": 1995,
									"id": 963,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_723": {
									"entryPoint": null,
									"id": 723,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_2221": {
									"entryPoint": 2333,
									"id": 2221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_1229": {
									"entryPoint": 883,
									"id": 1229,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_818": {
									"entryPoint": 1494,
									"id": 818,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1251": {
									"entryPoint": 815,
									"id": 1251,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1303": {
									"entryPoint": null,
									"id": 1303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1113": {
									"entryPoint": 669,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1103": {
									"entryPoint": 1483,
									"id": 1103,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1322": {
									"entryPoint": 1451,
									"id": 1322,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1360": {
									"entryPoint": 1737,
									"id": 1360,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1285": {
									"entryPoint": 1588,
									"id": 1285,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_792": {
									"entryPoint": 587,
									"id": 792,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1123": {
									"entryPoint": 1573,
									"id": 1123,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_1166": {
									"entryPoint": 1811,
									"id": 1166,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_748": {
									"entryPoint": null,
									"id": 748,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1866": {
									"entryPoint": 1043,
									"id": 1866,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 2837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 2510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3166,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 2466,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2815,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 2412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6376:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:10"
															},
															"nodeType": "YulIf",
															"src": "68:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:10",
														"type": ""
													}
												],
												"src": "14:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:10"
															},
															"nodeType": "YulIf",
															"src": "229:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:10",
														"type": ""
													}
												],
												"src": "150:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:10",
														"type": ""
													}
												],
												"src": "400:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "645:205:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "664:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "659:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "724:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "754:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "745:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "745:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "768:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "773:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "764:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "764:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "758:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "685:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "688:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "682:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "696:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "698:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "707:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "703:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "698:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "678:3:10",
																"statements": []
															},
															"src": "674:113:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:31:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "826:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "831:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "822:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "822:16:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "815:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:27:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "802:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "805:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "799:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:13:10"
															},
															"nodeType": "YulIf",
															"src": "796:48:10"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "623:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "628:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "633:6:10",
														"type": ""
													}
												],
												"src": "592:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:208:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "915:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "919:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:19:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1004:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1011:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1022:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1027:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1018:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1018:14:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1034:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "978:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:63:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:63:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1050:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1078:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1086:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1074:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1074:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1095:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1091:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1091:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1050:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "882:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "889:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "897:3:10",
														"type": ""
													}
												],
												"src": "855:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1279:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1305:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1317:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1328:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1287:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1279:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1208:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1219:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:10",
														"type": ""
													}
												],
												"src": "1118:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1413:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1459:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1468:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1471:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1461:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1461:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1434:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:32:10"
															},
															"nodeType": "YulIf",
															"src": "1423:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1484:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1507:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1494:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1379:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1390:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1402:6:10",
														"type": ""
													}
												],
												"src": "1343:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1639:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1651:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1639:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1681:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1696:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1712:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1708:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1708:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1721:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1704:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1598:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1609:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1620:4:10",
														"type": ""
													}
												],
												"src": "1528:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1795:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1795:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1887:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1889:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1846:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1857:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1872:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1868:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1868:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1881:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1864:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1864:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1853:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1853:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1843:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:50:10"
															},
															"nodeType": "YulIf",
															"src": "1833:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1764:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:10",
														"type": ""
													}
												],
												"src": "1736:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2047:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2049:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2049:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2022:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:32:10"
															},
															"nodeType": "YulIf",
															"src": "2011:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2072:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2082:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2120:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2147:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2158:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2130:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1959:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1970:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1982:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1990:6:10",
														"type": ""
													}
												],
												"src": "1914:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2274:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2284:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2296:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2307:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2284:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2326:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2337:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2319:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2319:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2243:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2254:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2265:4:10",
														"type": ""
													}
												],
												"src": "2173:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2459:224:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2505:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2514:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2507:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2507:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2507:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2480:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2489:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2501:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2472:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:32:10"
															},
															"nodeType": "YulIf",
															"src": "2469:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2530:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2559:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2540:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2578:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2622:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2607:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2588:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2635:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2662:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2673:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2645:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2635:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2409:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2420:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2432:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2440:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2448:6:10",
														"type": ""
													}
												],
												"src": "2355:328:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2758:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2804:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2813:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2816:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2806:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2806:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2779:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2788:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2775:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2775:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2800:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2771:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:32:10"
															},
															"nodeType": "YulIf",
															"src": "2768:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2829:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2858:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2839:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2839:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2724:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2735:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2747:6:10",
														"type": ""
													}
												],
												"src": "2688:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2963:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3009:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3018:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3021:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3011:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3011:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3011:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2984:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2993:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2980:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3005:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2976:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:32:10"
															},
															"nodeType": "YulIf",
															"src": "2973:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3034:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3063:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3044:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3034:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3082:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3112:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3123:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3095:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3086:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3180:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3189:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3192:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3182:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3182:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3182:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3149:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3170:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3163:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3163:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3156:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3156:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3146:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3146:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3139:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:40:10"
															},
															"nodeType": "YulIf",
															"src": "3136:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3205:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3215:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3205:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2921:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2932:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2944:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2952:6:10",
														"type": ""
													}
												],
												"src": "2879:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3263:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3280:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3287:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3283:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3283:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3320:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3344:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3347:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3337:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3337:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3231:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3493:1008:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3540:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3552:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3542:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3542:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3514:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3523:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3510:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3535:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:33:10"
															},
															"nodeType": "YulIf",
															"src": "3503:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3565:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3594:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3575:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3565:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3613:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3646:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3657:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3642:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3623:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3623:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3670:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3697:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3708:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3693:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3693:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3680:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3680:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3721:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3752:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3763:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3748:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3748:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3735:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3725:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3776:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3786:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3780:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3831:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3840:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3843:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3833:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3833:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3833:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3827:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3816:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:14:10"
															},
															"nodeType": "YulIf",
															"src": "3813:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3856:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3870:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3881:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3866:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3860:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3936:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3945:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3948:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3938:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3938:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3938:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3915:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3919:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3911:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3911:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3926:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3907:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3907:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3900:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:35:10"
															},
															"nodeType": "YulIf",
															"src": "3897:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3961:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3984:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3971:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3965:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4010:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4012:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4012:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4012:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4002:2:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4006:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3999:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:10:10"
															},
															"nodeType": "YulIf",
															"src": "3996:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4041:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4051:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4051:7:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4045:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4067:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4087:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4081:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4071:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4099:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4121:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4145:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4149:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4141:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4141:13:10"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4156:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4137:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4137:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4161:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4133:31:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4166:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4129:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4129:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4117:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4117:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4103:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4229:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4231:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4231:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4231:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4188:10:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4200:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4185:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4185:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4208:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4220:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4205:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4205:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4182:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:46:10"
															},
															"nodeType": "YulIf",
															"src": "4179:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4267:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4271:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4260:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4298:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4306:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4291:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4291:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4291:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4355:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4364:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4367:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4357:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4357:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4357:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4332:2:10"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4336:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4328:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4328:11:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4341:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4324:20:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4346:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4321:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:33:10"
															},
															"nodeType": "YulIf",
															"src": "4318:53:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4397:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4405:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4393:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4393:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4414:2:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4410:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4410:11:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4423:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4380:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4380:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4380:46:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4450:6:10"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4458:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4446:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4446:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4463:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:24:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4479:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4489:6:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3435:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3446:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3458:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3466:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3474:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3482:6:10",
														"type": ""
													}
												],
												"src": "3363:1138:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4593:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4639:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4648:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4651:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4641:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4641:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4641:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4614:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4623:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4610:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4635:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4606:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4606:32:10"
															},
															"nodeType": "YulIf",
															"src": "4603:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4664:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4674:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4664:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4712:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4745:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4756:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4741:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4741:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4722:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4722:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4551:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4562:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4574:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4582:6:10",
														"type": ""
													}
												],
												"src": "4506:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4826:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4836:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4850:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4853:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4846:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4836:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4867:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4897:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4903:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4893:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4893:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4871:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4944:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4946:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4960:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4968:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4956:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4956:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4946:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4924:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4917:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4917:26:10"
															},
															"nodeType": "YulIf",
															"src": "4914:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5034:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5055:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5062:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5058:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5058:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5048:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5048:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5048:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5099:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5102:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5092:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5092:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5092:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5127:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5130:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5120:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5120:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5120:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4990:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5013:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5021:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5010:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4987:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:38:10"
															},
															"nodeType": "YulIf",
															"src": "4984:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4806:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4815:6:10",
														"type": ""
													}
												],
												"src": "4771:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5343:283:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5353:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5373:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5367:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5357:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5415:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5423:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5411:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5411:17:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5430:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5435:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5389:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5389:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5389:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5451:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5468:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5473:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5464:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5464:16:10"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "5455:5:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5489:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5511:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5505:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5505:13:10"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "5493:8:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5553:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5561:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5549:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5549:17:10"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5568:5:10"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5575:8:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5527:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5527:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5527:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5593:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5604:5:10"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5611:8:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:20:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5593:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5311:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5316:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5324:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5335:3:10",
														"type": ""
													}
												],
												"src": "5156:470:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5834:286:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5844:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5862:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5867:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5858:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5858:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5871:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5854:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5854:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5848:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5889:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5904:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5912:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5900:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5900:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5882:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5882:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5882:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5936:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5947:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5932:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5932:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5956:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5964:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5952:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5999:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5984:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5984:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6004:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5977:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5977:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6031:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6042:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6027:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6027:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6047:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6020:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6020:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6020:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6060:54:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6086:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6098:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6109:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6094:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6094:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "6068:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6068:46:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6060:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5779:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5790:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5798:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5806:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5814:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5825:4:10",
														"type": ""
													}
												],
												"src": "5631:489:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6205:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6251:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6260:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6263:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6253:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6253:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6253:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6226:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6235:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6222:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6222:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6247:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6218:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:32:10"
															},
															"nodeType": "YulIf",
															"src": "6215:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6276:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6295:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6289:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6289:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6280:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "6314:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6314:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6314:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6353:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6363:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6353:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6171:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6182:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6194:6:10",
														"type": ""
													}
												],
												"src": "6125:249:10"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d6578063b88d4fde146101e9578063c87b56dd146101fc578063e985e9c51461020f57600080fd5b80636352211e146101a857806370a08231146101bb57806395d89b41146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806318160ddd1461016c57806323b872dd1461018257806342842e0e1461019557600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610985565b61024b565b60405190151581526020015b60405180910390f35b61011f61029d565b60405161010e91906109fa565b61013f61013a366004610a0d565b61032f565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610a42565b610373565b005b600154600054035b60405190815260200161010e565b61016a610190366004610a6c565b610413565b61016a6101a3366004610a6c565b6105ab565b61013f6101b6366004610a0d565b6105cb565b6101746101c9366004610aa8565b6105d6565b61011f610625565b61016a6101e4366004610ac3565b610634565b61016a6101f7366004610b15565b6106c9565b61011f61020a366004610a0d565b610713565b61010261021d366004610bf1565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061027c57506380ac58cd60e01b6001600160e01b03198316145b806102975750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546102ac90610c24565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610c24565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061033a826107a4565b610357576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061037e826105cb565b9050336001600160a01b038216146103b75761039a813361021d565b6103b7576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061041e826107cb565b9050836001600160a01b0316816001600160a01b0316146104515760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761049e57610481863361021d565b61049e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166104c557604051633a954ecd60e21b815260040160405180910390fd5b80156104d057600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610562576001840160008181526004602052604081205490036105605760005481146105605760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6105c6838383604051806020016040528060008152506106c9565b505050565b6000610297826107cb565b60006001600160a01b0382166105ff576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102ac90610c24565b336001600160a01b0383160361065d5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106d4848484610413565b6001600160a01b0383163b1561070d576106f084848484610832565b61070d576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061071e826107a4565b61073b57604051630a14c4b560e41b815260040160405180910390fd5b600061075260408051602081019091526000815290565b90508051600003610772576040518060200160405280600081525061079d565b8061077c8461091d565b60405160200161078d929190610c5e565b6040516020818303038152906040525b9392505050565b6000805482108015610297575050600090815260046020526040902054600160e01b161590565b6000816000548110156108195760008181526004602052604081205490600160e01b82169003610817575b8060000361079d5750600019016000818152600460205260409020546107f6565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610867903390899088908890600401610c8d565b6020604051808303816000875af19250505080156108a2575060408051601f3d908101601f1916820190925261089f91810190610cca565b60015b610900573d8080156108d0576040519150601f19603f3d011682016040523d82523d6000602084013e6108d5565b606091505b5080516000036108f8576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080810191829052607f0190826030600a8206018353600a90045b801561095a57600183039250600a81066030018353600a900461093c565b50819003601f19909101908152919050565b6001600160e01b03198116811461098257600080fd5b50565b60006020828403121561099757600080fd5b813561079d8161096c565b60005b838110156109bd5781810151838201526020016109a5565b8381111561070d5750506000910152565b600081518084526109e68160208601602086016109a2565b601f01601f19169290920160200192915050565b60208152600061079d60208301846109ce565b600060208284031215610a1f57600080fd5b5035919050565b80356001600160a01b0381168114610a3d57600080fd5b919050565b60008060408385031215610a5557600080fd5b610a5e83610a26565b946020939093013593505050565b600080600060608486031215610a8157600080fd5b610a8a84610a26565b9250610a9860208501610a26565b9150604084013590509250925092565b600060208284031215610aba57600080fd5b61079d82610a26565b60008060408385031215610ad657600080fd5b610adf83610a26565b915060208301358015158114610af457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610b2b57600080fd5b610b3485610a26565b9350610b4260208601610a26565b925060408501359150606085013567ffffffffffffffff80821115610b6657600080fd5b818701915087601f830112610b7a57600080fd5b813581811115610b8c57610b8c610aff565b604051601f8201601f19908116603f01168101908382118183101715610bb457610bb4610aff565b816040528281528a6020848701011115610bcd57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610c0457600080fd5b610c0d83610a26565b9150610c1b60208401610a26565b90509250929050565b600181811c90821680610c3857607f821691505b602082108103610c5857634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610c708184602088016109a2565b835190830190610c848183602088016109a2565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610cc0908301846109ce565b9695505050505050565b600060208284031215610cdc57600080fd5b815161079d8161096c56fea2646970667358221220113b81d1a5a20c7fe0271c8de1004c0e4d3861dd04dc4ef941abcd61c7145f4b64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x625 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x27C JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x297 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC24 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xC24 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP3 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x5CB JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x3B7 JUMPI PUSH2 0x39A DUP2 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E DUP3 PUSH2 0x7CB JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x49E JUMPI PUSH2 0x481 DUP7 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x562 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x560 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x560 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5C6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297 DUP3 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC24 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06307DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6D4 DUP5 DUP5 DUP5 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x70D JUMPI PUSH2 0x6F0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x71E DUP3 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x73B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x752 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x79D JUMP JUMPDEST DUP1 PUSH2 0x77C DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78D SWAP3 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x297 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0x817 JUMPI JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x79D JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7F6 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x867 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8A2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x89F SWAP2 DUP2 ADD SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x900 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x8D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x7F ADD SWAP1 DUP3 PUSH1 0x30 PUSH1 0xA DUP3 MOD ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV JUMPDEST DUP1 ISZERO PUSH2 0x95A JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV PUSH2 0x93C JUMP JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x79D DUP2 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9BD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9A5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x70D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x9E6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x79D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA5E DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8A DUP5 PUSH2 0xA26 JUMP JUMPDEST SWAP3 POP PUSH2 0xA98 PUSH1 0x20 DUP6 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79D DUP3 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xADF DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB34 DUP6 PUSH2 0xA26 JUMP JUMPDEST SWAP4 POP PUSH2 0xB42 PUSH1 0x20 DUP7 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB8C JUMPI PUSH2 0xB8C PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0xAFF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xBCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0D DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH2 0xC1B PUSH1 0x20 DUP5 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC38 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC58 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xC70 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x9A2 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xC84 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x9A2 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xCC0 SWAP1 DUP4 ADD DUP5 PUSH2 0x9CE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x79D DUP2 PUSH2 0x96C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT EXTCODESIZE DUP2 0xD1 0xA5 LOG2 0xC PUSH32 0xE0271C8DE1004C0E4D3861DD04DC4EF941ABCD61C7145F4B64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "885:34115:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5653:607;;;;;;:::i;:::-;;:::i;:::-;;;565:14:10;;558:22;540:41;;528:2;513:18;5653:607:4;;;;;;;;11161:98;;;:::i;:::-;;;;;;;:::i;13048:200::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:10;;;1674:51;;1662:2;1647:18;13048:200:4;1528:203:10;12611:376:4;;;;;;:::i;:::-;;:::i;:::-;;4736:309;4998:12;;4789:7;4982:13;:28;4736:309;;;2319:25:10;;;2307:2;2292:18;4736:309:4;2173:177:10;22055:2739:4;;;;;;:::i;:::-;;:::i;13912:179::-;;;;;;:::i;:::-;;:::i;10957:142::-;;;;;;:::i;:::-;;:::i;6319:221::-;;;;;;:::i;:::-;;:::i;11323:102::-;;;:::i;13315:303::-;;;;;;:::i;:::-;;:::i;14157:388::-;;;;;;:::i;:::-;;:::i;11491:313::-;;;;;;:::i;:::-;;:::i;13684:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;13804:25:4;;;13781:4;13804:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;13684:162;5653:607;5738:4;-1:-1:-1;;;;;;;;;6033:25:4;;;;:101;;-1:-1:-1;;;;;;;;;;6109:25:4;;;6033:101;:177;;;-1:-1:-1;;;;;;;;;;6185:25:4;;;6033:177;6014:196;5653:607;-1:-1:-1;;5653:607:4:o;11161:98::-;11215:13;11247:5;11240:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11161:98;:::o;13048:200::-;13116:7;13140:16;13148:7;13140;:16::i;:::-;13135:64;;13165:34;;-1:-1:-1;;;13165:34:4;;;;;;;;;;;13135:64;-1:-1:-1;13217:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;13217:24:4;;13048:200::o;12611:376::-;12683:13;12699:16;12707:7;12699;:16::i;:::-;12683:32;-1:-1:-1;32960:10:4;-1:-1:-1;;;;;12730:28:4;;;12726:172;;12777:44;12794:5;32960:10;13684:162;:::i;12777:44::-;12772:126;;12848:35;;-1:-1:-1;;;12848:35:4;;;;;;;;;;;12772:126;12908:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;12908:29:4;-1:-1:-1;;;;;12908:29:4;;;;;;;;;12952:28;;12908:24;;12952:28;;;;;;;12673:314;12611:376;;:::o;22055:2739::-;22184:27;22214;22233:7;22214:18;:27::i;:::-;22184:57;;22297:4;-1:-1:-1;;;;;22256:45:4;22272:19;-1:-1:-1;;;;;22256:45:4;;22252:86;;22310:28;;-1:-1:-1;;;22310:28:4;;;;;;;;;;;22252:86;22350:27;20821:21;;;20652:15;20862:4;20855:36;20943:4;20927:21;;21031:26;;32960:10;21766:30;;;-1:-1:-1;;;;;21468:26:4;;21745:19;;;21742:55;22526:173;;22612:43;22629:4;32960:10;13684:162;:::i;22612:43::-;22607:92;;22664:35;;-1:-1:-1;;;22664:35:4;;;;;;;;;;;22607:92;-1:-1:-1;;;;;22714:16:4;;22710:52;;22739:23;;-1:-1:-1;;;22739:23:4;;;;;;;;;;;22710:52;22905:15;22902:157;;;23043:1;23022:19;23015:30;22902:157;-1:-1:-1;;;;;23429:24:4;;;;;;;:18;:24;;;;;;23427:26;;-1:-1:-1;;23427:26:4;;;23497:22;;;;;;;;;23495:24;;-1:-1:-1;23495:24:4;;;10863:11;10839:22;10835:40;10822:62;-1:-1:-1;;;10822:62:4;23783:26;;;;:17;:26;;;;;:171;;;;-1:-1:-1;;;24071:46:4;;:51;;24067:616;;24174:1;24164:11;;24142:19;24295:30;;;:17;:30;;;;;;:35;;24291:378;;24431:13;;24416:11;:28;24412:239;;24576:30;;;;:17;:30;;;;;:52;;;24412:239;24124:559;24067:616;24727:7;24723:2;-1:-1:-1;;;;;24708:27:4;24717:4;-1:-1:-1;;;;;24708:27:4;;;;;;;;;;;22174:2620;;;22055:2739;;;:::o;13912:179::-;14045:39;14062:4;14068:2;14072:7;14045:39;;;;;;;;;;;;:16;:39::i;:::-;13912:179;;;:::o;10957:142::-;11021:7;11063:27;11082:7;11063:18;:27::i;6319:221::-;6383:7;-1:-1:-1;;;;;6406:19:4;;6402:60;;6434:28;;-1:-1:-1;;;6434:28:4;;;;;;;;;;;6402:60;-1:-1:-1;;;;;;6479:25:4;;;;;:18;:25;;;;;;1022:13;6479:54;;6319:221::o;11323:102::-;11379:13;11411:7;11404:14;;;;;:::i;13315:303::-;32960:10;-1:-1:-1;;;;;13413:31:4;;;13409:61;;13453:17;;-1:-1:-1;;;13453:17:4;;;;;;;;;;;13409:61;32960:10;13481:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;13481:49:4;;;;;;;;;;;;:60;;-1:-1:-1;;13481:60:4;;;;;;;;;;13556:55;;540:41:10;;;13481:49:4;;32960:10;13556:55;;513:18:10;13556:55:4;;;;;;;13315:303;;:::o;14157:388::-;14318:31;14331:4;14337:2;14341:7;14318:12;:31::i;:::-;-1:-1:-1;;;;;14363:14:4;;;:19;14359:180;;14401:56;14432:4;14438:2;14442:7;14451:5;14401:30;:56::i;:::-;14396:143;;14484:40;;-1:-1:-1;;;14484:40:4;;;;;;;;;;;14396:143;14157:388;;;;:::o;11491:313::-;11564:13;11594:16;11602:7;11594;:16::i;:::-;11589:59;;11619:29;;-1:-1:-1;;;11619:29:4;;;;;;;;;;;11589:59;11659:21;11683:10;12125:9;;;;;;;;;-1:-1:-1;12125:9:4;;;12049:92;11683:10;11659:34;;11716:7;11710:21;11735:1;11710:26;:87;;;;;;;;;;;;;;;;;11763:7;11772:18;11782:7;11772:9;:18::i;:::-;11746:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11710:87;11703:94;11491:313;-1:-1:-1;;;11491:313:4:o;14791:268::-;14848:4;14935:13;;14925:7;:23;14883:150;;;;-1:-1:-1;;14985:26:4;;;;:17;:26;;;;;;-1:-1:-1;;;14985:43:4;:48;;14791:268::o;7949:1105::-;8016:7;8050;8148:13;;8141:4;:20;8137:853;;;8185:14;8202:23;;;:17;:23;;;;;;;-1:-1:-1;;;8289:23:4;;:28;;8285:687;;8800:111;8807:6;8817:1;8807:11;8800:111;;-1:-1:-1;;;8877:6:4;8859:25;;;;:17;:25;;;;;;8800:111;;8285:687;8163:827;8137:853;9016:31;;-1:-1:-1;;;9016:31:4;;;;;;;;;;;28649:697;28827:88;;-1:-1:-1;;;28827:88:4;;28807:4;;-1:-1:-1;;;;;28827:45:4;;;;;:88;;32960:10;;28894:4;;28900:7;;28909:5;;28827:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28827:88:4;;;;;;;;-1:-1:-1;;28827:88:4;;;;;;;;;;;;:::i;:::-;;;28823:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29105:6;:13;29122:1;29105:18;29101:229;;29150:40;;-1:-1:-1;;;29150:40:4;;;;;;;;;;;29101:229;29290:6;29284:13;29275:6;29271:2;29267:15;29260:38;28823:517;-1:-1:-1;;;;;;28983:64:4;-1:-1:-1;;;28983:64:4;;-1:-1:-1;28649:697:4;;;;;;:::o;33078:1920::-;33541:4;33535:11;;33548:3;33531:21;;33624:17;;;;34307:11;;;34188:5;34437:2;34451;34441:13;;34433:22;34307:11;34420:36;34491:2;34481:13;;34082:682;34509:4;34082:682;;;34695:1;34690:3;34686:11;34679:18;;34745:2;34739:4;34735:13;34731:2;34727:22;34722:3;34714:36;34602:2;34592:13;;34082:682;;;-1:-1:-1;34792:13:4;;;-1:-1:-1;;34905:12:4;;;34963:19;;;34905:12;33078:1920;-1:-1:-1;33078:1920:4:o;14:131:10:-;-1:-1:-1;;;;;;88:32:10;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:10;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:10;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:10:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:10;;1343:180;-1:-1:-1;1343:180:10:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:10;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:10:o;2355:328::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2540:29;2559:9;2540:29;:::i;:::-;2530:39;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2673:2;2662:9;2658:18;2645:32;2635:42;;2355:328;;;;;:::o;2688:186::-;2747:6;2800:2;2788:9;2779:7;2775:23;2771:32;2768:52;;;2816:1;2813;2806:12;2768:52;2839:29;2858:9;2839:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:10;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;5156:470::-;5335:3;5373:6;5367:13;5389:53;5435:6;5430:3;5423:4;5415:6;5411:17;5389:53;:::i;:::-;5505:13;;5464:16;;;;5527:57;5505:13;5464:16;5561:4;5549:17;;5527:57;:::i;:::-;5600:20;;5156:470;-1:-1:-1;;;;5156:470:10:o;5631:489::-;-1:-1:-1;;;;;5900:15:10;;;5882:34;;5952:15;;5947:2;5932:18;;5925:43;5999:2;5984:18;;5977:34;;;6047:3;6042:2;6027:18;;6020:31;;;5825:4;;6068:46;;6094:19;;6086:6;6068:46;:::i;:::-;6060:54;5631:489;-1:-1:-1;;;;;;5631:489:10:o;6125:249::-;6194:6;6247:2;6235:9;6226:7;6222:23;6218:32;6215:52;;;6263:1;6260;6253:12;6215:52;6295:9;6289:16;6314:30;6338:5;6314:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "671400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2640",
								"getApproved(uint256)": "6925",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26647",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4432",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4337",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isOwnerOrApproved(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3986,
									"end": 4140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4057,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 4060,
									"end": 4065,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4057,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 4052,
									"end": 4065,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4075,
									"end": 4082,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 4085,
									"end": 4092,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4075,
									"end": 4082,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 4075,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4332,
									"end": 4339,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1354,
									"end": 1415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1529,
									"end": 1592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2216,
									"end": 2218,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2211,
									"end": 2214,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2208,
									"end": 2219,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2252,
									"end": 2253,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2282,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2283,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2322,
									"end": 2326,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2318,
									"end": 2320,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2327,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2390,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2395,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2373,
									"end": 2374,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2369,
									"end": 2396,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2363,
									"end": 2367,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2359,
									"end": 2397,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2428,
									"end": 2432,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2416,
									"end": 2426,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2413,
									"end": 2433,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2451,
									"end": 2455,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2506,
									"end": 2508,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2501,
									"end": 2504,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2497,
									"end": 2509,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2494,
									"end": 2495,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2490,
									"end": 2510,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2484,
									"end": 2488,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2480,
									"end": 2511,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2470,
									"end": 2511,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2470,
									"end": 2511,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2581,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2577,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2569,
									"end": 2582,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2605,
									"end": 2606,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2594,
									"end": 2607,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2114,
									"end": 2659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2955,
									"end": 2965,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2955,
									"end": 2965,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2977,
									"end": 3007,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2977,
									"end": 3007,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 3010,
									"end": 3028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 3129,
									"end": 3135,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 3121,
									"end": 3125,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3115,
									"end": 3126,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 3089,
									"end": 3127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3083,
									"end": 3087,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 3039,
									"end": 3136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3195,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3191,
									"end": 3195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3255,
									"end": 3257,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 3244,
									"end": 3258,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3244,
									"end": 3258,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3272,
									"end": 3273,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3991,
									"end": 3997,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4037,
									"end": 4063,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2792,
									"end": 2793,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2784,
									"end": 2808,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2809,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2770,
									"end": 2810,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2816,
									"end": 2817,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2767,
									"end": 2824,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4090,
									"end": 4171,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4090,
									"end": 4171,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3237,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 3237,
									"end": 4181,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2061,
									"end": 2062,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2098,
									"end": 2102,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2103,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2085,
									"end": 2103,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3435,
									"end": 3442,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3432,
									"end": 3433,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3429,
									"end": 3443,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3518,
									"end": 3544,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3503,
									"end": 3545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3503,
									"end": 3545,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3584,
									"end": 3585,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3451,
									"end": 3470,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3451,
									"end": 3470,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3425,
									"end": 3428,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3685,
									"end": 3691,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3676,
									"end": 3683,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3673,
									"end": 3692,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3740,
									"end": 3766,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3829,
									"end": 3830,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3841,
									"end": 3844,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 3821,
									"end": 3845,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3817,
									"end": 3854,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3813,
									"end": 3855,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3798,
									"end": 3856,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3783,
									"end": 3857,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3783,
									"end": 3857,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3917,
									"end": 3918,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3884,
									"end": 3920,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3884,
									"end": 3920,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2835,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220113b81d1a5a20c7fe0271c8de1004c0e4d3861dd04dc4ef941abcd61c7145f4b64736f6c634300080f0033",
									".code": [
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "A22CB465"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "A22CB465"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "B88D4FDE"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "C87B56DD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "E985E9C5"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "42842E0E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "81812FC"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1528,
											"end": 1731,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 4995,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5010,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2309,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2173,
											"end": 2350,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 11323,
											"end": 11425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13781,
											"end": 13785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13822,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6014,
											"end": 6210,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11215,
											"end": 11228,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11247,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 11240,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 11240,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13116,
											"end": 13123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 13148,
											"end": 13155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13140,
											"end": 13147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 13140,
											"end": 13156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13232,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12683,
											"end": 12696,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 12707,
											"end": 12714,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 12699,
											"end": 12715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12683,
											"end": 12715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 12794,
											"end": 12799,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12923,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 12673,
											"end": 12987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22184,
											"end": 22211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 22233,
											"end": 22240,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 22214,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 22214,
											"end": 22241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22297,
											"end": 22301,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 22272,
											"end": 22291,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22350,
											"end": 22377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 20652,
											"end": 20667,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 20862,
											"end": 20866,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 20855,
											"end": 20891,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 20943,
											"end": 20947,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 21742,
											"end": 21797,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 22629,
											"end": 22633,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 22905,
											"end": 22920,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 23043,
											"end": 23044,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 23022,
											"end": 23041,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 23015,
											"end": 23045,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23447,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10863,
											"end": 10874,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 10839,
											"end": 10861,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 10835,
											"end": 10875,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23800,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24071,
											"end": 24117,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 24071,
											"end": 24117,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 24071,
											"end": 24122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24071,
											"end": 24122,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 24174,
											"end": 24175,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 24142,
											"end": 24161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24312,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24295,
											"end": 24330,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 24416,
											"end": 24427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24416,
											"end": 24444,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24593,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 24124,
											"end": 24683,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 24727,
											"end": 24734,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 24723,
											"end": 24725,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 24717,
											"end": 24721,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 14062,
											"end": 14066,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14068,
											"end": 14070,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14072,
											"end": 14079,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 14045,
											"end": 14084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 11082,
											"end": 11089,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11063,
											"end": 11081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 11063,
											"end": 11090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6383,
											"end": 6390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6497,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1035,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6533,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11379,
											"end": 11392,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11411,
											"end": 11418,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 11404,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B06307DB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 14331,
											"end": 14335,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14337,
											"end": 14339,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14341,
											"end": 14348,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14318,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 14318,
											"end": 14349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 14363,
											"end": 14382,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 14432,
											"end": 14436,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14438,
											"end": 14440,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14442,
											"end": 14449,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14451,
											"end": 14456,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14401,
											"end": 14431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 14401,
											"end": 14457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11564,
											"end": 11577,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 11602,
											"end": 11609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11594,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 11594,
											"end": 11610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A14C4B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11659,
											"end": 11680,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11659,
											"end": 11693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11659,
											"end": 11693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11716,
											"end": 11723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11731,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11735,
											"end": 11736,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11736,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11763,
											"end": 11770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 11782,
											"end": 11789,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11772,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 11772,
											"end": 11790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 11746,
											"end": 11791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14848,
											"end": 14852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14925,
											"end": 14932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14925,
											"end": 14948,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15002,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14985,
											"end": 15028,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15033,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14985,
											"end": 15033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14791,
											"end": 15059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8141,
											"end": 8145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8185,
											"end": 8199,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8289,
											"end": 8312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8312,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8289,
											"end": 8317,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8813,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8817,
											"end": 8818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8818,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8876,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 28807,
											"end": 28811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 28807,
											"end": 28811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28894,
											"end": 28898,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 28894,
											"end": 28898,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28900,
											"end": 28907,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 28900,
											"end": 28907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28909,
											"end": 28914,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 28909,
											"end": 28914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 28827,
											"end": 28915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 28827,
											"end": 28915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 29105,
											"end": 29111,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 29105,
											"end": 29118,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 29122,
											"end": 29123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 29105,
											"end": 29123,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 29290,
											"end": 29296,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 29284,
											"end": 29297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 29275,
											"end": 29281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 29271,
											"end": 29273,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 29267,
											"end": 29282,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 29260,
											"end": 29298,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 28649,
											"end": 29346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 33541,
											"end": 33545,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 33535,
											"end": 33546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 33535,
											"end": 33546,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 33548,
											"end": 33551,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 33531,
											"end": 33552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 33531,
											"end": 33552,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 34188,
											"end": 34193,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 34437,
											"end": 34439,
											"name": "PUSH",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 34451,
											"end": 34453,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 34441,
											"end": 34454,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 34441,
											"end": 34454,
											"name": "MOD",
											"source": 4
										},
										{
											"begin": 34433,
											"end": 34455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 34420,
											"end": 34456,
											"name": "MSTORE8",
											"source": 4
										},
										{
											"begin": 34491,
											"end": 34493,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 34481,
											"end": 34494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 34481,
											"end": 34494,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 34509,
											"end": 34513,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 34695,
											"end": 34696,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 34690,
											"end": 34693,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 34686,
											"end": 34697,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 34679,
											"end": 34697,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 34679,
											"end": 34697,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 34745,
											"end": 34747,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 34739,
											"end": 34743,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 34735,
											"end": 34748,
											"name": "MOD",
											"source": 4
										},
										{
											"begin": 34731,
											"end": 34733,
											"name": "PUSH",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 34727,
											"end": 34749,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 34722,
											"end": 34725,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 34714,
											"end": 34750,
											"name": "MSTORE8",
											"source": 4
										},
										{
											"begin": 34602,
											"end": 34604,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 34592,
											"end": 34605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 34592,
											"end": 34605,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34792,
											"end": 34805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 34792,
											"end": 34805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 34792,
											"end": 34805,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 34963,
											"end": 34982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 34963,
											"end": 34982,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 34963,
											"end": 34982,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33078,
											"end": 34998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 68,
											"end": 139,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 592,
											"end": 850,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 688,
											"end": 694,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 682,
											"end": 695,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 674,
											"end": 787,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 764,
											"end": 775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 776,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 745,
											"end": 756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 738,
											"end": 777,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 713,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 805,
											"end": 811,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 799,
											"end": 812,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 796,
											"end": 844,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 796,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 796,
											"end": 844,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 838,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 822,
											"end": 838,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 815,
											"end": 842,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 592,
											"end": 850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 897,
											"end": 900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 929,
											"end": 941,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 950,
											"end": 969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1025,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1018,
											"end": 1032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1015,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 978,
											"end": 1041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1074,
											"end": 1089,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1099,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1106,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1249,
											"end": 1270,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 1287,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1453,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1458,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1461,
											"end": 1473,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2041,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2046,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 2082,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2111,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 2168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2503,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2504,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 2540,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 2588,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2626,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2671,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2677,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 2874,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2688,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2747,
											"end": 2753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2802,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2788,
											"end": 2797,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2779,
											"end": 2786,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2775,
											"end": 2798,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2803,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2817,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2813,
											"end": 2814,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2839,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 2858,
											"end": 2867,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2839,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 2839,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2958,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3002,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 2991,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2980,
											"end": 3003,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2976,
											"end": 3008,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3022,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3011,
											"end": 3023,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3044,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3125,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3121,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3095,
											"end": 3127,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3170,
											"end": 3175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3163,
											"end": 3176,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3146,
											"end": 3178,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3220,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3231,
											"end": 3358,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 3231,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3302,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3283,
											"end": 3303,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3304,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3327,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3313,
											"end": 3328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3344,
											"end": 3345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3535,
											"end": 3538,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3523,
											"end": 3532,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3575,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 3657,
											"end": 3659,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3655,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3623,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3661,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3613,
											"end": 3661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3708,
											"end": 3710,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3712,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3752,
											"end": 3761,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3748,
											"end": 3766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3735,
											"end": 3767,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3825,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3830,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3888,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 3923,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3911,
											"end": 3924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3907,
											"end": 3934,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3946,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 3986,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 3987,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4006,
											"end": 4008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4002,
											"end": 4004,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3999,
											"end": 4009,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4012,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4087,
											"end": 4089,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4081,
											"end": 4090,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4163,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 4133,
											"end": 4164,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4129,
											"end": 4169,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4228,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4231,
											"end": 4249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4281,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4267,
											"end": 4269,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4260,
											"end": 4282,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4304,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4291,
											"end": 4309,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4346,
											"end": 4353,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4332,
											"end": 4334,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4324,
											"end": 4344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4354,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4367,
											"end": 4368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4365,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4357,
											"end": 4369,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4405,
											"end": 4407,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4380,
											"end": 4426,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4461,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4442,
											"end": 4466,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4470,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4489,
											"end": 4495,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 4501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4637,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4632,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4614,
											"end": 4621,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4633,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4638,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4652,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4649,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4693,
											"end": 4702,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4674,
											"end": 4703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 4756,
											"end": 4758,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4722,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4968,
											"end": 4972,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4956,
											"end": 4973,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5021,
											"end": 5023,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5013,
											"end": 5019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5010,
											"end": 5024,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 5025,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5077,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5062,
											"end": 5065,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5058,
											"end": 5078,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5079,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5092,
											"end": 5107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5134,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5135,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5156,
											"end": 5626,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 5156,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5367,
											"end": 5380,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 5435,
											"end": 5441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5433,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5423,
											"end": 5427,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5415,
											"end": 5421,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5411,
											"end": 5428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 5389,
											"end": 5442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5518,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5518,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 5505,
											"end": 5518,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5565,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5549,
											"end": 5566,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5566,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 5527,
											"end": 5584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5156,
											"end": 5626,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5156,
											"end": 5626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 6120,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 5631,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5882,
											"end": 5916,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5882,
											"end": 5916,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5967,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5967,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5947,
											"end": 5949,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6001,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6042,
											"end": 6044,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6027,
											"end": 6045,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6027,
											"end": 6045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6020,
											"end": 6051,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6020,
											"end": 6051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6020,
											"end": 6051,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5825,
											"end": 5829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5825,
											"end": 5829,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6086,
											"end": 6092,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 6068,
											"end": 6114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6060,
											"end": 6114,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 6120,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5631,
											"end": 6120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6125,
											"end": 6374,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 6125,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6194,
											"end": 6200,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6249,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6226,
											"end": 6233,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6245,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6218,
											"end": 6250,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6263,
											"end": 6264,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6253,
											"end": 6265,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6295,
											"end": 6304,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6305,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 6314,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"ERC721A/NagaKidsERC721A.sol",
								"erc721a/contracts/ERC721A.sol",
								"erc721a/contracts/IERC721A.sol",
								"erc721a/contracts/extensions/ERC721ABurnable.sol",
								"erc721a/contracts/extensions/ERC721AQueryable.sol",
								"erc721a/contracts/extensions/IERC721ABurnable.sol",
								"erc721a/contracts/extensions/IERC721AQueryable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at `_startTokenId()` (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 669,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 671,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 673,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 675,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 679,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 683,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 687,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 693,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token receiver interface.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token receiver interface.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/extensions/ERC721ABurnable.sol": {
				"ERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721A Token that can be irreversibly burned (destroyed).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721A Token that can be irreversibly burned (destroyed).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event.\"}},\"title\":\"ERC721A Burnable Token\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/extensions/ERC721ABurnable.sol\":\"ERC721ABurnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/ERC721ABurnable.sol\":{\"keccak256\":\"0x19ba9af16e4159db5e89cecf3288eefa8bd8dff0dbd0ca2560d9da05adb2728e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00c6045054fca386d5646c017c932759eb821b29363cd7c5ad3e3a1896e68d5f\",\"dweb:/ipfs/QmNuvnZ5spjAkPFfTKy6mzWSUFtgdkhJfGU6ZU9HgVov3u\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 669,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 671,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 673,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 675,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 679,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 683,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 687,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 693,
								"contract": "erc721a/contracts/extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/extensions/ERC721AQueryable.sol": {
				"ERC721AQueryable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721A subclass with convenience query functions.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false`   - `extraData` = `0` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true`   - `extraData` = `<Extra data when token was burned>` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`   - `extraData` = `<Extra data at start of ownership>`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`"
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A Queryable",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"explicitOwnershipOf(uint256)": "c23dc68f",
							"explicitOwnershipsOf(uint256[])": "5bbb2177",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"tokensOfOwner(address)": "8462151c",
							"tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721A subclass with convenience query functions.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false`   - `extraData` = `0` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true`   - `extraData` = `<Extra data when token was burned>` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`   - `extraData` = `<Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event.\"}},\"title\":\"ERC721A Queryable\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/extensions/ERC721AQueryable.sol\":\"ERC721AQueryable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xfeeda22932d93d1b3ec71fa0d700f1bd5bd4e1979fa250156b82581e9591c5cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3bb3c16d7d01cfabc6d4d723dece47e8a6e8a6ef42188d5be213d43d70c2e87\",\"dweb:/ipfs/QmNrbZnzeUEbfcoamdexJsni1jUFbDMend8kjausHnpBSL\"]},\"erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x55e6863d273b676d65797fee7aac1b520848a0e31c0dd2e5a29887457043b7a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8477b7c9788e36787f79ef9b1580c46bdadc13da4c8ef85ce82d42a754743\",\"dweb:/ipfs/QmQvqKtF8YyJKqpEiNh1KkeC1Q5JmvEkQmP2ZCPYSW72BS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 669,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 671,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 673,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 675,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 679,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 683,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 687,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 693,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"IERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721ABurnable compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721ABurnable compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/extensions/IERC721ABurnable.sol\":\"IERC721ABurnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"IERC721AQueryable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721AQueryable compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`"
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"explicitOwnershipOf(uint256)": "c23dc68f",
							"explicitOwnershipsOf(uint256[])": "5bbb2177",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"tokensOfOwner(address)": "8462151c",
							"tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721AQueryable compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/extensions/IERC721AQueryable.sol\":\"IERC721AQueryable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x55e6863d273b676d65797fee7aac1b520848a0e31c0dd2e5a29887457043b7a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8477b7c9788e36787f79ef9b1580c46bdadc13da4c8ef85ce82d42a754743\",\"dweb:/ipfs/QmQvqKtF8YyJKqpEiNh1KkeC1Q5JmvEkQmP2ZCPYSW72BS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							329
						]
					},
					"id": 330,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 129,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:2",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "Strings",
							"nameLocation": "154:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 132,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 329,
									"src": "168:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 130,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 131,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "399:632:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 140,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "601:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "IfStatement",
												"src": "597:51:2",
												"trueBody": {
													"id": 145,
													"nodeType": "Block",
													"src": "613:35:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 139,
															"id": 144,
															"nodeType": "Return",
															"src": "627:10:2"
														}
													]
												}
											},
											{
												"assignments": [
													148
												],
												"declarations": [
													{
														"constant": false,
														"id": 148,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 210,
														"src": "657:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 147,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"id": 149,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 135,
													"src": "672:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:2"
											},
											{
												"assignments": [
													152
												],
												"declarations": [
													{
														"constant": false,
														"id": 152,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 210,
														"src": "687:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 151,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 153,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:2"
											},
											{
												"body": {
													"id": 164,
													"nodeType": "Block",
													"src": "729:57:2",
													"statements": [
														{
															"expression": {
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:2",
																"subExpression": {
																	"id": 157,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "743:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 159,
															"nodeType": "ExpressionStatement",
															"src": "743:8:2"
														},
														{
															"expression": {
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 160,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "765:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 163,
															"nodeType": "ExpressionStatement",
															"src": "765:10:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 154,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "718:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "WhileStatement",
												"src": "711:75:2"
											},
											{
												"assignments": [
													167
												],
												"declarations": [
													{
														"constant": false,
														"id": 167,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 210,
														"src": "795:19:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 166,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 172,
												"initialValue": {
													"arguments": [
														{
															"id": 170,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "827:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 168,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:2"
											},
											{
												"body": {
													"id": 203,
													"nodeType": "Block",
													"src": "863:131:2",
													"statements": [
														{
															"expression": {
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 176,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "877:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 179,
															"nodeType": "ExpressionStatement",
															"src": "877:11:2"
														},
														{
															"expression": {
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 180,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "902:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 182,
																	"indexExpression": {
																		"id": 181,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 152,
																		"src": "909:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 187,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 192,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 190,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 135,
																									"src": "945:5:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 191,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 189,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 188,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 193,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 185,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 183,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 198,
															"nodeType": "ExpressionStatement",
															"src": "902:56:2"
														},
														{
															"expression": {
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 199,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "972:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 202,
															"nodeType": "ExpressionStatement",
															"src": "972:11:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 173,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "851:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"nodeType": "WhileStatement",
												"src": "844:150:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 207,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1017:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 205,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 139,
												"id": 209,
												"nodeType": "Return",
												"src": "1003:21:2"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "346:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "384:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 137,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:2"
									},
									"scope": 329,
									"src": "328:703:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "1210:255:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 219,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "1224:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 225,
												"nodeType": "IfStatement",
												"src": "1220:54:2",
												"trueBody": {
													"id": 224,
													"nodeType": "Block",
													"src": "1236:38:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 218,
															"id": 223,
															"nodeType": "Return",
															"src": "1250:13:2"
														}
													]
												}
											},
											{
												"assignments": [
													227
												],
												"declarations": [
													{
														"constant": false,
														"id": 227,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 251,
														"src": "1283:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 226,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 229,
												"initialValue": {
													"id": 228,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 214,
													"src": "1298:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:2"
											},
											{
												"assignments": [
													231
												],
												"declarations": [
													{
														"constant": false,
														"id": 231,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 251,
														"src": "1313:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 230,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"hexValue": "30",
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:2"
											},
											{
												"body": {
													"id": 244,
													"nodeType": "Block",
													"src": "1359:57:2",
													"statements": [
														{
															"expression": {
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:2",
																"subExpression": {
																	"id": 237,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "1373:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 239,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:2"
														},
														{
															"expression": {
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 240,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "1395:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 243,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 234,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1348:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 245,
												"nodeType": "WhileStatement",
												"src": "1341:75:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 247,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "1444:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 248,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "1451:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 246,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															328
														],
														"referencedDeclaration": 328,
														"src": "1432:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 218,
												"id": 250,
												"nodeType": "Return",
												"src": "1425:33:2"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1157:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1195:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:2"
									},
									"scope": 329,
									"src": "1136:329:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "1678:351:2",
										"statements": [
											{
												"assignments": [
													263
												],
												"declarations": [
													{
														"constant": false,
														"id": 263,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "1688:19:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 262,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 272,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 267,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "1724:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 264,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:2"
											},
											{
												"expression": {
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 273,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1745:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 275,
														"indexExpression": {
															"hexValue": "30",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:2"
											},
											{
												"expression": {
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 279,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1770:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 281,
														"indexExpression": {
															"hexValue": "31",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:2"
											},
											{
												"body": {
													"id": 313,
													"nodeType": "Block",
													"src": "1840:87:2",
													"statements": [
														{
															"expression": {
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 299,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "1854:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 301,
																	"indexExpression": {
																		"id": 300,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "1861:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 302,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "1866:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 306,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 303,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 255,
																			"src": "1879:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 308,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:2"
														},
														{
															"expression": {
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 309,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "1905:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 312,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "1828:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 314,
												"initializationExpression": {
													"assignments": [
														286
													],
													"declarations": [
														{
															"constant": false,
															"id": 286,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 314,
															"src": "1800:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 285,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 292,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 288,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "1816:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:2"
												},
												"loopExpression": {
													"expression": {
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:2",
														"subExpression": {
															"id": 296,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "1837:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 298,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:2"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 316,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "1944:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 324,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2015:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 322,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 261,
												"id": 326,
												"nodeType": "Return",
												"src": "2001:21:2"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1609:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1624:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:2"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1663:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 259,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:2"
									},
									"scope": 329,
									"src": "1588:441:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 330,
							"src": "146:1885:2",
							"usedErrors": []
						}
					],
					"src": "86:1946:2"
				},
				"id": 2
			},
			"ERC721A/NagaKidsERC721A.sol": {
				"ast": {
					"absolutePath": "ERC721A/NagaKidsERC721A.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"ERC721A": [
							2222
						],
						"ERC721ABurnable": [
							2454
						],
						"ERC721AQueryable": [
							2829
						],
						"ERC721A__IERC721Receiver": [
							601
						],
						"IERC721A": [
							2431
						],
						"IERC721ABurnable": [
							2842
						],
						"IERC721AQueryable": [
							2894
						],
						"NagaKids": [
							583
						],
						"Ownable": [
							104
						],
						"Strings": [
							329
						]
					},
					"id": 584,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 331,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "erc721a/contracts/ERC721A.sol",
							"file": "erc721a/contracts/ERC721A.sol",
							"id": 332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 584,
							"sourceUnit": 2223,
							"src": "61:39:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721a/contracts/extensions/ERC721ABurnable.sol",
							"file": "erc721a/contracts/extensions/ERC721ABurnable.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 584,
							"sourceUnit": 2455,
							"src": "102:58:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721a/contracts/extensions/ERC721AQueryable.sol",
							"file": "erc721a/contracts/extensions/ERC721AQueryable.sol",
							"id": 334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 584,
							"sourceUnit": 2830,
							"src": "162:59:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 335,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 584,
							"sourceUnit": 330,
							"src": "223:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 336,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 584,
							"sourceUnit": 105,
							"src": "276:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 337,
										"name": "ERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2222,
										"src": "353:7:3"
									},
									"id": 338,
									"nodeType": "InheritanceSpecifier",
									"src": "353:7:3"
								},
								{
									"baseName": {
										"id": 339,
										"name": "ERC721ABurnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2454,
										"src": "362:15:3"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "362:15:3"
								},
								{
									"baseName": {
										"id": 341,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "379:7:3"
									},
									"id": 342,
									"nodeType": "InheritanceSpecifier",
									"src": "379:7:3"
								}
							],
							"canonicalName": "NagaKids",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 583,
							"linearizedBaseContracts": [
								583,
								104,
								126,
								2454,
								2842,
								2222,
								2431
							],
							"name": "NagaKids",
							"nameLocation": "341:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 344,
									"libraryName": {
										"id": 343,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 329,
										"src": "402:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "396:20:3"
								},
								{
									"constant": false,
									"id": 348,
									"mutability": "mutable",
									"name": "_allowMinter",
									"nameLocation": "457:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 583,
									"src": "424:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 347,
										"keyType": {
											"id": 345,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "432:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "424:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 346,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "443:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 350,
									"mutability": "mutable",
									"name": "baseURI",
									"nameLocation": "493:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 583,
									"src": "478:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 349,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "478:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c6682862",
									"id": 353,
									"mutability": "mutable",
									"name": "baseExtension",
									"nameLocation": "521:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 583,
									"src": "507:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 351,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "507:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2e6a736f6e",
										"id": 352,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "537:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
											"typeString": "literal_string \".json\""
										},
										"value": ".json"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d5abeb01",
									"id": 356,
									"mutability": "constant",
									"name": "maxSupply",
									"nameLocation": "575:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 583,
									"src": "551:40:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 354,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "551:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31313131",
										"id": 355,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "587:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1111_by_1",
											"typeString": "int_const 1111"
										},
										"value": "1111"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "3c49a0d2dcd603245c20eb1985825d770748295cd570de6d24861080451bbd41",
									"id": 364,
									"name": "SetAllowMinter",
									"nameLocation": "606:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "637:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "621:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "661:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "645:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": false,
												"mutability": "mutable",
												"name": "allowed",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "669:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "669:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:62:3"
									},
									"src": "600:83:3"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "724:80:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 370,
																	"name": "_minter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "752:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 369,
																"name": "isMinter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "743:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "743:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f742061206d696e746572",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "761:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1674c41eb6a9ac78253fcbf95cc0d71c5cdee9bff21d93fc58259b4842cfce65",
																"typeString": "literal_string \"You are not a minter\""
															},
															"value": "You are not a minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1674c41eb6a9ac78253fcbf95cc0d71c5cdee9bff21d93fc58259b4842cfce65",
																"typeString": "literal_string \"You are not a minter\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "735:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "735:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "735:49:3"
											},
											{
												"id": 375,
												"nodeType": "PlaceholderStatement",
												"src": "795:1:3"
											}
										]
									},
									"id": 377,
									"name": "Minter",
									"nameLocation": "700:6:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "_minter",
												"nameLocation": "715:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "707:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:17:3"
									},
									"src": "691:113:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "931:215:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 389,
															"name": "_initBaseURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "955:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 388,
														"name": "setBaseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "944:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "944:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "944:24:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 393,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1031:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1031:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1042:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 392,
														"name": "setAllowMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1016:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1016:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "1016:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 399,
															"name": "_preMintAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "1118:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "313131",
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1134:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_111_by_1",
																"typeString": "int_const 111"
															},
															"value": "111"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_111_by_1",
																"typeString": "int_const 111"
															}
														],
														"id": 398,
														"name": "safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "1109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1109:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "1109:29:3"
											}
										]
									},
									"id": 404,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4e414741204b494453",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "910:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f95d1ef44716a9527af3ec2504849ec6d8ac40f0f92f222d9f849ab417dc29fc",
														"typeString": "literal_string \"NAGA KIDS\""
													},
													"value": "NAGA KIDS"
												},
												{
													"hexValue": "4e41474b",
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "923:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_88063bee45ee121b010195ec607c66e2eb8a271bdc1df5c865fc1a6dd0932857",
														"typeString": "literal_string \"NAGK\""
													},
													"value": "NAGK"
												}
											],
											"id": 386,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 383,
												"name": "ERC721A",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2222,
												"src": "902:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "902:28:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "_initBaseURI",
												"nameLocation": "848:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "834:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 378,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "834:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "_preMintAddress",
												"nameLocation": "879:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "871:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:78:3"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "931:0:3"
									},
									"scope": 583,
									"src": "812:334:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "1225:108:3",
										"statements": [
											{
												"expression": {
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 413,
															"name": "_allowMinter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "1236:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 415,
														"indexExpression": {
															"id": 414,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1249:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1236:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 416,
														"name": "allowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "1259:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1236:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "1236:30:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 420,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1297:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1297:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 422,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1309:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "1317:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 419,
														"name": "SetAllowMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "1282:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1282:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "EmitStatement",
												"src": "1277:48:3"
											}
										]
									},
									"functionSelector": "3c713026",
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 411,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 410,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1215:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1215:9:3"
										}
									],
									"name": "setAllowMinter",
									"nameLocation": "1163:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "1186:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1178:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "allowed",
												"nameLocation": "1199:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1194:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 407,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1194:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:30:3"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1225:0:3"
									},
									"scope": 583,
									"src": "1154:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1175
									],
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "1408:33:3",
										"statements": [
											{
												"expression": {
													"id": 433,
													"name": "baseURI",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 350,
													"src": "1426:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 432,
												"id": 434,
												"nodeType": "Return",
												"src": "1419:14:3"
											}
										]
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "1350:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 429,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1375:8:3"
									},
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:2:3"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1393:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 430,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:15:3"
									},
									"scope": 583,
									"src": "1341:100:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "1512:39:3",
										"statements": [
											{
												"expression": {
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 443,
														"name": "baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "1523:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 444,
														"name": "newBaseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "1533:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1523:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "1523:20:3"
											}
										]
									},
									"functionSelector": "55f804b3",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 441,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 440,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1502:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1502:9:3"
										}
									],
									"name": "setBaseURI",
									"nameLocation": "1458:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "newBaseURI",
												"nameLocation": "1483:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1469:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1469:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:26:3"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1512:0:3"
									},
									"scope": 583,
									"src": "1449:102:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1166,
										2419
									],
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "1664:339:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 460,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "1705:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 459,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "1697:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1697:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1728:49:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1675:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1675:113:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "1675:113:3"
											},
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "currentBaseURI",
														"nameLocation": "1815:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "1801:28:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 465,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1801:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 469,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 467,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															436
														],
														"referencedDeclaration": 436,
														"src": "1832:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1832:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1801:41:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 472,
																		"name": "currentBaseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "1866:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1860:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 470,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1860:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1860:21:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1860:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1891:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1860:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1993:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1860:135:3",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 481,
																		"name": "currentBaseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "1929:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 482,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 450,
																				"src": "1945:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 211,
																			"src": "1945:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1945:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 485,
																		"name": "baseExtension",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "1965:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	],
																	"expression": {
																		"id": 479,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1912:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "1912:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1912:67:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1905:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 477,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1905:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1905:75:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 457,
												"id": 490,
												"nodeType": "Return",
												"src": "1853:142:3"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1568:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 454,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 452,
												"name": "ERC721A",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2222,
												"src": "1623:7:3"
											},
											{
												"id": 453,
												"name": "IERC721A",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2431,
												"src": "1631:8:3"
											}
										],
										"src": "1614:26:3"
									},
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1585:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1577:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1576:17:3"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1650:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 455,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1650:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:15:3"
									},
									"scope": 583,
									"src": "1559:444:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "2080:158:3",
										"statements": [
											{
												"assignments": [
													504
												],
												"declarations": [
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "totalSupply",
														"nameLocation": "2099:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "2091:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 503,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2091:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 505,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "2113:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2113:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2091:35:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 509,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "2145:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 510,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "2159:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2145:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 512,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "2169:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f766572206d617820737570706c79",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2180:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fd3705cdcadbc4af957cb58f6277702ac5d4695fc8a6c35b8a695f8136ab44ac",
																"typeString": "literal_string \"Over max supply\""
															},
															"value": "Over max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fd3705cdcadbc4af957cb58f6277702ac5d4695fc8a6c35b8a695f8136ab44ac",
																"typeString": "literal_string \"Over max supply\""
															}
														],
														"id": 508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "2137:61:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "2219:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "2223:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1401,
															1463
														],
														"referencedDeclaration": 1401,
														"src": "2209:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2209:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "2209:21:3"
											}
										]
									},
									"functionSelector": "a1448194",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 499,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2068:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2068:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 501,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 498,
												"name": "Minter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 377,
												"src": "2061:6:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2061:18:3"
										}
									],
									"name": "safeMint",
									"nameLocation": "2021:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2038:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "2030:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2046:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "2041:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2041:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:24:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2080:0:3"
									},
									"scope": 583,
									"src": "2012:226:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "2306:46:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 530,
														"name": "_allowMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "2324:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 532,
													"indexExpression": {
														"id": 531,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2337:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2324:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 529,
												"id": 533,
												"nodeType": "Return",
												"src": "2317:27:3"
											}
										]
									},
									"functionSelector": "aa271e1a",
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isMinter",
									"nameLocation": "2255:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "2272:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2264:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2264:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2263:16:3"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2300:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 527,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2300:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2299:6:3"
									},
									"scope": 583,
									"src": "2246:106:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2188
									],
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "2518:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "2557:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "2563:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "2567:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 553,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "2580:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 547,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2529:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_NagaKids_$583_$",
																"typeString": "type(contract super NagaKids)"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfers",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2188,
														"src": "2529:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2529:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "2529:60:3"
											}
										]
									},
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "2369:21:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 545,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2509:8:3"
									},
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2409:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2401:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2401:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2432:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2424:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2424:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "2453:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2445:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "2484:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2476:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2476:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:109:3"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:0:3"
									},
									"scope": 583,
									"src": "2360:237:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										792,
										2290
									],
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "2815:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "2857:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 567,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2833:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_NagaKids_$583_$",
																"typeString": "type(contract super NagaKids)"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 792,
														"src": "2833:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2833:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 566,
												"id": 571,
												"nodeType": "Return",
												"src": "2826:43:3"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2682:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 563,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 561,
												"name": "ERC721A",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2222,
												"src": "2768:7:3"
											},
											{
												"id": 562,
												"name": "IERC721A",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2431,
												"src": "2776:8:3"
											}
										],
										"src": "2759:26:3"
									},
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2707:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "2700:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 558,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2700:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2699:20:3"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "2804:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2804:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2803:6:3"
									},
									"scope": 583,
									"src": "2673:204:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										723
									],
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "2959:27:3",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2977:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 578,
												"id": 580,
												"nodeType": "Return",
												"src": "2970:8:3"
											}
										]
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "2894:13:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 575,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2932:8:3"
									},
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2907:2:3"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2950:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2950:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2949:9:3"
									},
									"scope": 583,
									"src": "2885:101:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 584,
							"src": "332:2659:3",
							"usedErrors": [
								2228,
								2231,
								2234,
								2237,
								2240,
								2243,
								2246,
								2249,
								2252,
								2255,
								2258,
								2261,
								2264,
								2267
							]
						}
					],
					"src": "33:2960:3"
				},
				"id": 3
			},
			"erc721a/contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							2222
						],
						"ERC721A__IERC721Receiver": [
							601
						],
						"IERC721A": [
							2431
						]
					},
					"id": 2223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 585,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:4"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2223,
							"sourceUnit": 2432,
							"src": "109:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 587,
								"nodeType": "StructuredDocumentation",
								"src": "135:48:4",
								"text": " @dev ERC721 token receiver interface."
							},
							"fullyImplemented": false,
							"id": 601,
							"linearizedBaseContracts": [
								601
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "194:24:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "234:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "268:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "260:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "294:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "286:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "316:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "308:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "348:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "333:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "333:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:108:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "377:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 597,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "377:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:8:4"
									},
									"scope": 601,
									"src": "225:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2223,
							"src": "184:203:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 603,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2431,
										"src": "905:8:4"
									},
									"id": 604,
									"nodeType": "InheritanceSpecifier",
									"src": "905:8:4"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 602,
								"nodeType": "StructuredDocumentation",
								"src": "389:495:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard,\n including the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at `_startTokenId()`\n (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 2222,
							"linearizedBaseContracts": [
								2222,
								2431
							],
							"name": "ERC721A",
							"nameLocation": "894:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 612,
									"mutability": "constant",
									"name": "BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "993:26:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "968:67:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 605,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "968:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 611,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1023:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1028:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1023:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 609,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1022:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 610,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1034:1:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1022:13:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 615,
									"mutability": "constant",
									"name": "BITPOS_NUMBER_MINTED",
									"nameLocation": "1133:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "1108:50:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 613,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1108:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 614,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1156:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 618,
									"mutability": "constant",
									"name": "BITPOS_NUMBER_BURNED",
									"nameLocation": "1256:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "1231:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 616,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1231:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 617,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1279:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 621,
									"mutability": "constant",
									"name": "BITPOS_AUX",
									"nameLocation": "1371:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "1346:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 619,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1346:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 620,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1384:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 629,
									"mutability": "constant",
									"name": "BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1500:22:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "1475:64:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 622,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1475:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 628,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1526:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1531:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1526:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 626,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1525:10:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 627,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1538:1:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1525:14:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 632,
									"mutability": "constant",
									"name": "BITPOS_START_TIMESTAMP",
									"nameLocation": "1636:22:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "1611:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 630,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1611:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 631,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1661:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 637,
									"mutability": "constant",
									"name": "BITMASK_BURNED",
									"nameLocation": "1757:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "1732:50:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 633,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1732:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 636,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 634,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1774:1:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 635,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1779:3:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "1774:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 640,
									"mutability": "constant",
									"name": "BITPOS_NEXT_INITIALIZED",
									"nameLocation": "1888:23:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "1863:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 638,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1863:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 639,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1914:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 645,
									"mutability": "constant",
									"name": "BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2019:24:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "1994:60:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 641,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1994:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 644,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 642,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2046:1:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 643,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2051:3:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2046:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 648,
									"mutability": "constant",
									"name": "BITPOS_EXTRA_DATA",
									"nameLocation": "2146:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "2121:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 646,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2121:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 647,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2166:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 656,
									"mutability": "constant",
									"name": "BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2287:29:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "2262:71:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 649,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2262:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 655,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2320:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2325:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2320:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 653,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2319:10:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 654,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2332:1:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2319:14:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 664,
									"mutability": "constant",
									"name": "BITMASK_ADDRESS",
									"nameLocation": "2418:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "2393:57:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 657,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2393:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 663,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2437:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2442:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2437:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 661,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2436:10:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 662,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2449:1:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2436:14:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 667,
									"mutability": "constant",
									"name": "MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "2758:31:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "2733:63:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 665,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2733:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 666,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2792:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 669,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "2870:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "2854:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 668,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2854:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 671,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "2942:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "2926:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 670,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2926:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 673,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2994:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "2979:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 672,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2979:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 675,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3041:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "3026:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 674,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3026:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 679,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "3468:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "3432:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 678,
										"keyType": {
											"id": 676,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3440:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3432:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 677,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3451:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 683,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "3727:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "3691:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 682,
										"keyType": {
											"id": 680,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3699:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3691:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 681,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3710:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 687,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "3838:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "3802:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 686,
										"keyType": {
											"id": 684,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3810:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3802:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 685,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3821:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 693,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "3961:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 2222,
									"src": "3908:71:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 692,
										"keyType": {
											"id": 688,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3916:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3908:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 691,
											"keyType": {
												"id": 689,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3935:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3927:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 690,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3946:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "4042:98:4",
										"statements": [
											{
												"expression": {
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 700,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "4052:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 701,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "4060:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4052:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "4052:13:4"
											},
											{
												"expression": {
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 704,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "4075:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 705,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "4085:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4075:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "4075:17:4"
											},
											{
												"expression": {
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 708,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "4102:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 709,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "4118:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4118:15:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4102:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "4102:31:4"
											}
										]
									},
									"id": 714,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "4012:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "3998:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 694,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3998:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "4033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4019:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 696,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4019:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3997:44:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4042:0:4"
									},
									"scope": 2222,
									"src": "3986:154:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "4341:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4358:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 719,
												"id": 721,
												"nodeType": "Return",
												"src": "4351:8:4"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "4146:125:4",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "4285:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4298:2:4"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4332:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4331:9:4"
									},
									"scope": 2222,
									"src": "4276:90:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "4496:37:4",
										"statements": [
											{
												"expression": {
													"id": 729,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 669,
													"src": "4513:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 728,
												"id": 730,
												"nodeType": "Return",
												"src": "4506:20:4"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "4372:63:4",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "4449:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4461:2:4"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "4487:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4487:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4486:9:4"
									},
									"scope": 2222,
									"src": "4440:93:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2282
									],
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "4798:247:4",
										"statements": [
											{
												"id": 746,
												"nodeType": "UncheckedBlock",
												"src": "4951:88:4",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 739,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "4982:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 740,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "4998:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4982:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 742,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "5013:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5013:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4982:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 738,
														"id": 745,
														"nodeType": "Return",
														"src": "4975:53:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "4539:192:4",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see `_totalMinted`."
									},
									"functionSelector": "18160ddd",
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4745:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 735,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4771:8:4"
									},
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4756:2:4"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "4789:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:9:4"
									},
									"scope": 2222,
									"src": "4736:309:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "5194:223:4",
										"statements": [
											{
												"id": 759,
												"nodeType": "UncheckedBlock",
												"src": "5338:73:4",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "5369:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 755,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "5385:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5385:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5369:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 753,
														"id": 758,
														"nodeType": "Return",
														"src": "5362:38:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "5051:82:4",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "5147:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5159:2:4"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "5185:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5185:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5184:9:4"
									},
									"scope": 2222,
									"src": "5138:279:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "5550:36:4",
										"statements": [
											{
												"expression": {
													"id": 767,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "5567:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 766,
												"id": 768,
												"nodeType": "Return",
												"src": "5560:19:4"
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "5423:66:4",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "5503:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5515:2:4"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "5541:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5541:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5540:9:4"
									},
									"scope": 2222,
									"src": "5494:92:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2290
									],
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "5744:516:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "6033:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6048:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "6033:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 782,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "6109:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6124:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "6109:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6033:101:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 786,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "6185:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6200:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "6185:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6033:177:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 778,
												"id": 790,
												"nodeType": "Return",
												"src": "6014:196:4"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "5592:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "5662:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 775,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5720:8:4"
									},
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "5687:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "5680:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 772,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5680:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5679:20:4"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "5738:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 776,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5738:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5737:6:4"
									},
									"scope": 2222,
									"src": "5653:607:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2325
									],
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "6392:148:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 801,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "6406:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6423:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6415:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 802,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6415:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6415:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6406:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 810,
												"nodeType": "IfStatement",
												"src": "6402:60:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 807,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "6434:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6434:28:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 809,
													"nodeType": "RevertStatement",
													"src": "6427:35:4"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 811,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "6479:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 813,
														"indexExpression": {
															"id": 812,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "6498:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6479:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 814,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "6507:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6479:54:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 800,
												"id": 816,
												"nodeType": "Return",
												"src": "6472:61:4"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "6266:48:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "6328:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 797,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6365:8:4"
									},
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6346:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "6338:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:15:4"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "6383:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6382:9:4"
									},
									"scope": 2222,
									"src": "6319:221:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "6687:104:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 826,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "6705:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 828,
																	"indexExpression": {
																		"id": 827,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "6724:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6705:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 829,
																	"name": "BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "6734:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6705:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 831,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6704:51:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 832,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "6758:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6704:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 825,
												"id": 834,
												"nodeType": "Return",
												"src": "6697:87:4"
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "6546:66:4",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "6626:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6648:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "6640:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6640:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6639:15:4"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "6678:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6678:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6677:9:4"
									},
									"scope": 2222,
									"src": "6617:174:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "6954:104:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 844,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "6972:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 846,
																	"indexExpression": {
																		"id": 845,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "6991:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6972:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 847,
																	"name": "BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "7001:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6972:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 849,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6971:51:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 850,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "7025:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6971:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 843,
												"id": 852,
												"nodeType": "Return",
												"src": "6964:87:4"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "6797:82:4",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "6893:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6915:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "6907:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6907:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6906:15:4"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "6945:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6945:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6944:9:4"
									},
									"scope": 2222,
									"src": "6884:174:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "7234:71:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 864,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "7258:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 866,
																"indexExpression": {
																	"id": 865,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "7277:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7258:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 867,
																"name": "BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "7287:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7258:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7251:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 862,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7251:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7251:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 861,
												"id": 870,
												"nodeType": "Return",
												"src": "7244:54:4"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "7064:102:4",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "7180:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7196:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "7188:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7188:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7187:15:4"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "7226:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 859,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7226:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7225:8:4"
									},
									"scope": 2222,
									"src": "7171:134:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "7540:332:4",
										"statements": [
											{
												"assignments": [
													881
												],
												"declarations": [
													{
														"constant": false,
														"id": 881,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "7558:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 908,
														"src": "7550:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 880,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7550:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 885,
												"initialValue": {
													"baseExpression": {
														"id": 882,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "7567:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 884,
													"indexExpression": {
														"id": 883,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "7586:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7567:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7550:42:4"
											},
											{
												"assignments": [
													887
												],
												"declarations": [
													{
														"constant": false,
														"id": 887,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "7610:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 908,
														"src": "7602:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 886,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7602:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 888,
												"nodeType": "VariableDeclarationStatement",
												"src": "7602:17:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7702:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7716:16:4",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "7729:3:4"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "7716:9:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 877,
														"isOffset": false,
														"isSlot": false,
														"src": "7729:3:4",
														"valueSize": 1
													},
													{
														"declaration": 887,
														"isOffset": false,
														"isSlot": false,
														"src": "7716:9:4",
														"valueSize": 1
													}
												],
												"id": 889,
												"nodeType": "InlineAssembly",
												"src": "7693:49:4"
											},
											{
												"expression": {
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 890,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "7751:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 891,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "7761:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 892,
																		"name": "BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 629,
																		"src": "7770:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7761:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 894,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7760:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 895,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 887,
																		"src": "7797:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 896,
																		"name": "BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 621,
																		"src": "7810:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7797:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 898,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7796:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7760:61:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7751:70:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "7751:70:4"
											},
											{
												"expression": {
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 902,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "7831:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 904,
														"indexExpression": {
															"id": 903,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "7850:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7831:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 905,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "7859:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7831:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "7831:34:4"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "7311:171:4",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "7496:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7512:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7504:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7504:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "7526:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7519:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 876,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7519:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7503:27:4"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7540:0:4"
									},
									"scope": 2222,
									"src": "7487:385:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "8025:1029:4",
										"statements": [
											{
												"assignments": [
													918
												],
												"declarations": [
													{
														"constant": false,
														"id": 918,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "8043:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 962,
														"src": "8035:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8035:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"id": 919,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 912,
													"src": "8050:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8035:22:4"
											},
											{
												"id": 958,
												"nodeType": "UncheckedBlock",
												"src": "8068:932:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 921,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "8096:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8096:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 923,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "8115:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8096:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 957,
														"nodeType": "IfStatement",
														"src": "8092:898:4",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 925,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "8141:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 926,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "8148:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8141:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 956,
															"nodeType": "IfStatement",
															"src": "8137:853:4",
															"trueBody": {
																"id": 955,
																"nodeType": "Block",
																"src": "8163:827:4",
																"statements": [
																	{
																		"assignments": [
																			929
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 929,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "8193:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 955,
																				"src": "8185:14:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 928,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8185:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 933,
																		"initialValue": {
																			"baseExpression": {
																				"id": 930,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 679,
																				"src": "8202:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 932,
																			"indexExpression": {
																				"id": 931,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 918,
																				"src": "8220:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8202:23:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8185:40:4"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 936,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 934,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 929,
																					"src": "8289:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 935,
																					"name": "BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 637,
																					"src": "8298:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8289:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 937,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8316:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "8289:28:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 954,
																		"nodeType": "IfStatement",
																		"src": "8285:687:4",
																		"trueBody": {
																			"id": 953,
																			"nodeType": "Block",
																			"src": "8319:653:4",
																			"statements": [
																				{
																					"body": {
																						"id": 949,
																						"nodeType": "Block",
																						"src": "8820:91:4",
																						"statements": [
																							{
																								"expression": {
																									"id": 947,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 942,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 929,
																										"src": "8850:6:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 943,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 679,
																											"src": "8859:17:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 946,
																										"indexExpression": {
																											"id": 945,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "8877:6:4",
																											"subExpression": {
																												"id": 944,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 918,
																												"src": "8879:4:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "8859:25:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "8850:34:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 948,
																								"nodeType": "ExpressionStatement",
																								"src": "8850:34:4"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 941,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 939,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 929,
																							"src": "8807:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 940,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8817:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "8807:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 950,
																					"nodeType": "WhileStatement",
																					"src": "8800:111:4"
																				},
																				{
																					"expression": {
																						"id": 951,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 929,
																						"src": "8943:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 916,
																					"id": 952,
																					"nodeType": "Return",
																					"src": "8936:13:4"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 959,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2246,
														"src": "9016:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9016:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "RevertStatement",
												"src": "9009:38:4"
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "7878:66:4",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "7958:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7985:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "7977:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7977:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7976:17:4"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "8016:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8015:9:4"
									},
									"scope": 2222,
									"src": "7949:1105:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "9242:259:4",
										"statements": [
											{
												"expression": {
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 972,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "9252:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2269,
														"src": "9252:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 979,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "9285:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9277:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 977,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "9277:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9269:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 975,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9269:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9269:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9252:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "9252:41:4"
											},
											{
												"expression": {
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 984,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "9303:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2271,
														"src": "9303:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 989,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "9337:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 990,
																	"name": "BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "9347:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9337:32:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9330:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 987,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "9330:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9330:40:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "9303:67:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "9303:67:4"
											},
											{
												"expression": {
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 995,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "9380:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2273,
														"src": "9380:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 998,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "9399:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 999,
																"name": "BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "9408:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9399:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9426:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9399:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9380:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "9380:47:4"
											},
											{
												"expression": {
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1005,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "9437:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2275,
														"src": "9437:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1010,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "9466:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1011,
																	"name": "BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "9476:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9466:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9459:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 1008,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "9459:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9459:35:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "9437:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "9437:57:4"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "9060:78:4",
										"text": " Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "9152:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "9179:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "9171:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9170:16:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "9231:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "9209:31:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 969,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 968,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2276,
														"src": "9209:14:4"
													},
													"referencedDeclaration": 2276,
													"src": "9209:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2276_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9208:33:4"
									},
									"scope": 2222,
									"src": "9143:358:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "9670:68:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1027,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "9706:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1029,
															"indexExpression": {
																"id": 1028,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "9724:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9706:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "9687:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2276_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9687:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 1025,
												"id": 1031,
												"nodeType": "Return",
												"src": "9680:51:4"
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "9507:75:4",
										"text": " Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "9596:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9617:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "9609:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9609:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9608:15:4"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "9647:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1023,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1022,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2276,
														"src": "9647:14:4"
													},
													"referencedDeclaration": 2276,
													"src": "9647:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2276_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9646:23:4"
									},
									"scope": 2222,
									"src": "9587:151:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "9902:128:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1039,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9916:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1041,
														"indexExpression": {
															"id": 1040,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "9934:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9916:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9944:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9916:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1053,
												"nodeType": "IfStatement",
												"src": "9912:112:4",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "9947:77:4",
													"statements": [
														{
															"expression": {
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1044,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "9961:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1046,
																	"indexExpression": {
																		"id": 1045,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "9979:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9961:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1048,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1036,
																			"src": "10007:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1047,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "9988:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9988:25:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9961:52:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1051,
															"nodeType": "ExpressionStatement",
															"src": "9961:52:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "9744:97:4",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "9855:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9886:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "9878:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9878:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9877:15:4"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9902:0:4"
									},
									"scope": 2222,
									"src": "9846:184:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "10311:71:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1066,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "10366:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1065,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "10347:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10347:27:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "10328:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2276_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10328:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 1063,
												"id": 1069,
												"nodeType": "Return",
												"src": "10321:54:4"
											}
										]
									},
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "10036:185:4",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "10235:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10256:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "10248:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10248:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10247:17:4"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "10288:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1061,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1060,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2276,
														"src": "10288:14:4"
													},
													"referencedDeclaration": 2276,
													"src": "10288:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2276_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10287:23:4"
									},
									"scope": 2222,
									"src": "10226:156:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "10556:344:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10575:319:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10685:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "10698:5:4"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "10705:15:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10694:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10694:27:4"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "10685:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10812:72:4",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "10825:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "10839:22:4"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "10863:9:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10863:11:4"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "10835:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10835:40:4"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "10877:5:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10832:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10832:51:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10822:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10822:62:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10812:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 664,
														"isOffset": false,
														"isSlot": false,
														"src": "10705:15:4",
														"valueSize": 1
													},
													{
														"declaration": 632,
														"isOffset": false,
														"isSlot": false,
														"src": "10839:22:4",
														"valueSize": 1
													},
													{
														"declaration": 1076,
														"isOffset": false,
														"isSlot": false,
														"src": "10877:5:4",
														"valueSize": 1
													},
													{
														"declaration": 1074,
														"isOffset": false,
														"isSlot": false,
														"src": "10685:5:4",
														"valueSize": 1
													},
													{
														"declaration": 1074,
														"isOffset": false,
														"isSlot": false,
														"src": "10698:5:4",
														"valueSize": 1
													},
													{
														"declaration": 1074,
														"isOffset": false,
														"isSlot": false,
														"src": "10825:5:4",
														"valueSize": 1
													},
													{
														"declaration": 1079,
														"isOffset": false,
														"isSlot": false,
														"src": "10812:6:4",
														"valueSize": 1
													}
												],
												"id": 1081,
												"nodeType": "InlineAssembly",
												"src": "10566:328:4"
											}
										]
									},
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "10388:67:4",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "10469:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10496:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "10488:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "10511:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "10503:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10487:30:4"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "10548:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "10540:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10540:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10539:16:4"
									},
									"scope": 2222,
									"src": "10460:440:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2333
									],
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "11030:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1097,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1086,
																			"src": "11082:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1096,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "11063:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11063:27:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11055:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1094,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11055:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11055:36:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11047:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1092,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11047:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11047:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1091,
												"id": 1101,
												"nodeType": "Return",
												"src": "11040:52:4"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "10906:46:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "10966:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1088,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11003:8:4"
									},
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10982:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "10974:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10974:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10973:17:4"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "11021:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11021:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11020:9:4"
									},
									"scope": 2222,
									"src": "10957:142:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2405
									],
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "11230:29:4",
										"statements": [
											{
												"expression": {
													"id": 1110,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 673,
													"src": "11247:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1109,
												"id": 1111,
												"nodeType": "Return",
												"src": "11240:12:4"
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "11105:51:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "11170:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1106,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11197:8:4"
									},
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11174:2:4"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "11215:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1107,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11215:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11214:15:4"
									},
									"scope": 2222,
									"src": "11161:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2411
									],
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "11394:31:4",
										"statements": [
											{
												"expression": {
													"id": 1120,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 675,
													"src": "11411:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1119,
												"id": 1121,
												"nodeType": "Return",
												"src": "11404:14:4"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "11265:53:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "11332:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1116,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11361:8:4"
									},
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11338:2:4"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "11379:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11379:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11378:15:4"
									},
									"scope": 2222,
									"src": "11323:102:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2419
									],
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "11579:225:4",
										"statements": [
											{
												"condition": {
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11593:17:4",
													"subExpression": {
														"arguments": [
															{
																"id": 1133,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "11602:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1132,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "11594:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11594:16:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1139,
												"nodeType": "IfStatement",
												"src": "11589:59:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1136,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "11619:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11619:29:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1138,
													"nodeType": "RevertStatement",
													"src": "11612:36:4"
												}
											},
											{
												"assignments": [
													1141
												],
												"declarations": [
													{
														"constant": false,
														"id": 1141,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "11673:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1165,
														"src": "11659:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1140,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "11659:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1144,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1142,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "11683:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11683:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11659:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1147,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "11716:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11710:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1145,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "11710:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11710:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11710:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11735:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11710:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11795:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11710:87:4",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1156,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "11763:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1158,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1126,
																				"src": "11782:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1157,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2221,
																			"src": "11772:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11772:18:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1154,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "11746:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "11746:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11746:45:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11739:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1152,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "11739:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11739:53:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1131,
												"id": 1164,
												"nodeType": "Return",
												"src": "11703:94:4"
											}
										]
									},
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "11431:55:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "11500:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1128,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11546:8:4"
									},
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "11509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11508:17:4"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "11564:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1129,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11564:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11563:15:4"
									},
									"scope": 2222,
									"src": "11491:313:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "12115:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12132:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1171,
												"id": 1173,
												"nodeType": "Return",
												"src": "12125:9:4"
											}
										]
									},
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "11810:234:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "12058:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12066:2:4"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "12100:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1169,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12100:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12099:15:4"
									},
									"scope": 2222,
									"src": "12049:92:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "12324:230:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12408:140:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12483:55:4",
															"value": {
																"arguments": [
																	{
																		"name": "BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "12497:23:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "12525:8:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12535:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12522:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12522:15:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "12493:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12493:45:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12483:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 640,
														"isOffset": false,
														"isSlot": false,
														"src": "12497:23:4",
														"valueSize": 1
													},
													{
														"declaration": 1178,
														"isOffset": false,
														"isSlot": false,
														"src": "12525:8:4",
														"valueSize": 1
													},
													{
														"declaration": 1181,
														"isOffset": false,
														"isSlot": false,
														"src": "12483:6:4",
														"valueSize": 1
													}
												],
												"id": 1183,
												"nodeType": "InlineAssembly",
												"src": "12399:149:4"
											}
										]
									},
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "12147:86:4",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "12247:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "12276:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "12268:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12268:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12267:18:4"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "12316:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "12308:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12307:16:4"
									},
									"scope": 2222,
									"src": "12238:316:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2373
									],
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "12673:314:4",
										"statements": [
											{
												"assignments": [
													1195
												],
												"declarations": [
													{
														"constant": false,
														"id": 1195,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "12691:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1228,
														"src": "12683:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1194,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12683:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1199,
												"initialValue": {
													"arguments": [
														{
															"id": 1197,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "12707:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1196,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "12699:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12699:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12683:32:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1200,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "12730:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12730:19:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1202,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "12753:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12730:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "12726:172:4",
												"trueBody": {
													"condition": {
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "12776:45:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 1205,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "12794:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1206,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2211,
																		"src": "12801:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12801:19:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1204,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "12777:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12777:44:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1214,
													"nodeType": "IfStatement",
													"src": "12772:126:4",
													"trueBody": {
														"id": 1213,
														"nodeType": "Block",
														"src": "12823:75:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1210,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2228,
																		"src": "12848:33:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12848:35:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1212,
																"nodeType": "RevertStatement",
																"src": "12841:42:4"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1216,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "12908:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1218,
														"indexExpression": {
															"id": 1217,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "12924:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12908:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1219,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "12935:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12908:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "12908:29:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1223,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "12961:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "12968:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1225,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "12972:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1222,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2308,
														"src": "12952:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12952:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "EmitStatement",
												"src": "12947:33:4"
											}
										]
									},
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "12560:46:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "12620:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1192,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12664:8:4"
									},
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12636:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "12628:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12628:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "12640:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12627:29:4"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12673:0:4"
									},
									"scope": 2222,
									"src": "12611:376:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2389
									],
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "13125:123:4",
										"statements": [
											{
												"condition": {
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13139:17:4",
													"subExpression": {
														"arguments": [
															{
																"id": 1239,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "13148:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1238,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "13140:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13140:16:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1245,
												"nodeType": "IfStatement",
												"src": "13135:64:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1242,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "13165:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13165:34:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1244,
													"nodeType": "RevertStatement",
													"src": "13158:41:4"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1246,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "13217:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1248,
													"indexExpression": {
														"id": 1247,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "13233:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13217:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1237,
												"id": 1249,
												"nodeType": "Return",
												"src": "13210:31:4"
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "12993:50:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "13057:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1234,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13098:8:4"
									},
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13077:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "13069:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13068:17:4"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "13116:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13115:9:4"
									},
									"scope": 2222,
									"src": "13048:200:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2381
									],
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "13399:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1260,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "13413:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1261,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "13425:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13425:19:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13413:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1267,
												"nodeType": "IfStatement",
												"src": "13409:61:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1264,
															"name": "ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "13453:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13453:17:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1266,
													"nodeType": "RevertStatement",
													"src": "13446:24:4"
												}
											},
											{
												"expression": {
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1268,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "13481:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1272,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1269,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2211,
																	"src": "13500:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13500:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13481:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1273,
														"indexExpression": {
															"id": 1271,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "13521:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13481:49:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1274,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "13533:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13481:60:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "13481:60:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1278,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2211,
																"src": "13571:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13571:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1280,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "13592:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1281,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "13602:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1277,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2317,
														"src": "13556:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13556:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1283,
												"nodeType": "EmitStatement",
												"src": "13551:60:4"
											}
										]
									},
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "13254:56:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "13324:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1258,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13390:8:4"
									},
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13350:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "13342:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13342:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13365:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "13360:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13360:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13341:33:4"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13399:0:4"
									},
									"scope": 2222,
									"src": "13315:303:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2399
									],
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "13787:59:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1296,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "13804:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1298,
														"indexExpression": {
															"id": 1297,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "13823:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13804:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1300,
													"indexExpression": {
														"id": 1299,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1290,
														"src": "13830:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13804:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1295,
												"id": 1301,
												"nodeType": "Return",
												"src": "13797:42:4"
											}
										]
									},
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "13624:55:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "13693:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1292,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13763:8:4"
									},
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13718:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "13710:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13710:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13733:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "13725:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13709:33:4"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "13781:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13781:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13780:6:4"
									},
									"scope": 2222,
									"src": "13684:162:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2355
									],
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "14035:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1315,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "14062:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1316,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "14068:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "14072:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14081:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1314,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1322,
															1360
														],
														"referencedDeclaration": 1360,
														"src": "14045:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14045:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "14045:39:4"
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "13852:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "13921:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1312,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14026:8:4"
									},
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13955:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "13947:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13947:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13977:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "13969:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13969:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13997:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "13989:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13989:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13937:73:4"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14035:0:4"
									},
									"scope": 2222,
									"src": "13912:179:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2345
									],
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "14308:237:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1336,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "14331:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1337,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "14337:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1338,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "14341:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1335,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "14318:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14318:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "14318:31:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1341,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "14363:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "14363:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14363:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14381:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14363:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1358,
												"nodeType": "IfStatement",
												"src": "14359:180:4",
												"trueBody": {
													"condition": {
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "14400:57:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 1347,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1325,
																	"src": "14432:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1348,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1327,
																	"src": "14438:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1349,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1329,
																	"src": "14442:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1350,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "14451:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1346,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2085,
																"src": "14401:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14401:56:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1357,
													"nodeType": "IfStatement",
													"src": "14396:143:4",
													"trueBody": {
														"id": 1356,
														"nodeType": "Block",
														"src": "14459:80:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1353,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2255,
																		"src": "14484:38:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14484:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1355,
																"nodeType": "RevertStatement",
																"src": "14477:47:4"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "14097:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "14166:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1333,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14299:8:4"
									},
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14200:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "14192:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14222:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "14214:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14214:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14242:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "14234:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "14272:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "14259:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14259:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14182:101:4"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14308:0:4"
									},
									"scope": 2222,
									"src": "14157:388:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "14854:205:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1368,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "14883:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14883:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1370,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "14902:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14883:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1372,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "14925:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1373,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "14935:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14925:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "14883:65:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1376,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "14985:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1378,
																"indexExpression": {
																	"id": 1377,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1363,
																	"src": "15003:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14985:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1379,
																"name": "BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "15014:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14985:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15032:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14985:48:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14883:150:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1367,
												"id": 1384,
												"nodeType": "Return",
												"src": "14864:169:4"
											}
										]
									},
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "14551:235:4",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "14800:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14816:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "14808:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14808:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14807:17:4"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "14848:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1365,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14848:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14847:6:4"
									},
									"scope": 2222,
									"src": "14791:268:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "15196:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1395,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "15216:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "15220:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15230:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1394,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1401,
															1463
														],
														"referencedDeclaration": 1463,
														"src": "15206:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15206:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "15206:27:4"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "15065:68:4",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "15147:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15165:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "15157:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15157:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15177:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "15169:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15169:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15156:30:4"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15196:0:4"
									},
									"scope": 2222,
									"src": "15138:102:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "15749:553:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1412,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "15765:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1413,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "15769:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1411,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "15759:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15759:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "15759:19:4"
											},
											{
												"id": 1461,
												"nodeType": "UncheckedBlock",
												"src": "15789:507:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1416,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1404,
																		"src": "15817:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "15817:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "15817:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15835:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15817:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1460,
														"nodeType": "IfStatement",
														"src": "15813:473:4",
														"trueBody": {
															"id": 1459,
															"nodeType": "Block",
															"src": "15838:448:4",
															"statements": [
																{
																	"assignments": [
																		1422
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1422,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "15864:3:4",
																			"nodeType": "VariableDeclaration",
																			"scope": 1459,
																			"src": "15856:11:4",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1421,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "15856:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1424,
																	"initialValue": {
																		"id": 1423,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "15870:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "15856:27:4"
																},
																{
																	"assignments": [
																		1426
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1426,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "15909:5:4",
																			"nodeType": "VariableDeclaration",
																			"scope": 1459,
																			"src": "15901:13:4",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1425,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "15901:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1430,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1427,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "15917:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1428,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1406,
																			"src": "15923:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15917:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "15901:30:4"
																},
																{
																	"body": {
																		"id": 1447,
																		"nodeType": "Block",
																		"src": "15952:205:4",
																		"statements": [
																			{
																				"condition": {
																					"id": 1441,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "15978:63:4",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1434,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16018:1:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1433,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "16010:7:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1432,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "16010:7:4",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1435,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16010:10:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1436,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1404,
																								"src": "16022:2:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1438,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "16026:7:4",
																								"subExpression": {
																									"id": 1437,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1426,
																									"src": "16026:5:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1439,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1408,
																								"src": "16035:5:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1431,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2085,
																							"src": "15979:30:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1440,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15979:62:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1446,
																				"nodeType": "IfStatement",
																				"src": "15974:165:4",
																				"trueBody": {
																					"id": 1445,
																					"nodeType": "Block",
																					"src": "16043:96:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1442,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2255,
																									"src": "16076:38:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 1443,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16076:40:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1444,
																							"nodeType": "RevertStatement",
																							"src": "16069:47:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1448,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "16165:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1449,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "16173:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16165:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1451,
																	"nodeType": "DoWhileStatement",
																	"src": "15949:229:4"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1452,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 669,
																			"src": "16241:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1453,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "16258:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16241:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1458,
																	"nodeType": "IfStatement",
																	"src": "16237:34:4",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1455,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "16263:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16263:8:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1457,
																		"nodeType": "ExpressionStatement",
																		"src": "16263:8:4"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "15246:390:4",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "15650:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15677:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "15669:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15697:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "15689:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15689:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "15728:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "15715:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15715:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15659:80:4"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15749:0:4"
									},
									"scope": 2222,
									"src": "15641:661:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "16617:1438:4",
										"statements": [
											{
												"assignments": [
													1472
												],
												"declarations": [
													{
														"constant": false,
														"id": 1472,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "16635:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1576,
														"src": "16627:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1471,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16627:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"id": 1473,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 669,
													"src": "16650:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16627:36:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1475,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "16677:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16691:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16683:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1476,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16683:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16683:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16677:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1484,
												"nodeType": "IfStatement",
												"src": "16673:48:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1481,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "16702:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16702:19:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1483,
													"nodeType": "RevertStatement",
													"src": "16695:26:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1485,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "16735:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16747:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16735:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1491,
												"nodeType": "IfStatement",
												"src": "16731:44:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1488,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "16757:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16757:18:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1490,
													"nodeType": "RevertStatement",
													"src": "16750:25:4"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16816:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16808:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1493,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16808:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16808:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "16820:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1498,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "16824:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1499,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "16838:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1492,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2188,
														"src": "16786:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16786:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "16786:61:4"
											},
											{
												"id": 1565,
												"nodeType": "UncheckedBlock",
												"src": "17030:949:4",
												"statements": [
													{
														"expression": {
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1502,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "17250:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1504,
																"indexExpression": {
																	"id": 1503,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "17269:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "17250:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1505,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "17276:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1508,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1506,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17289:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1507,
																							"name": "BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 615,
																							"src": "17294:20:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "17289:25:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1509,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "17288:27:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1510,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17318:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "17288:31:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1512,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17287:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17276:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17250:70:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1515,
														"nodeType": "ExpressionStatement",
														"src": "17250:70:4"
													},
													{
														"expression": {
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1516,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "17556:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1518,
																"indexExpression": {
																	"id": 1517,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "17574:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "17556:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1520,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "17626:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1522,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1468,
																					"src": "17667:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1521,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1185,
																				"src": "17646:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17646:30:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1527,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17702:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1526,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17694:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1525,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17694:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1528,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17694:10:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1529,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1466,
																					"src": "17706:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1530,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "17710:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1524,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2162,
																				"src": "17679:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17679:33:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17646:66:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1519,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "17590:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17590:136:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17556:170:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1535,
														"nodeType": "ExpressionStatement",
														"src": "17556:170:4"
													},
													{
														"assignments": [
															1537
														],
														"declarations": [
															{
																"constant": false,
																"id": 1537,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "17749:7:4",
																"nodeType": "VariableDeclaration",
																"scope": 1565,
																"src": "17741:15:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1536,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17741:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1539,
														"initialValue": {
															"id": 1538,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "17759:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17741:30:4"
													},
													{
														"assignments": [
															1541
														],
														"declarations": [
															{
																"constant": false,
																"id": 1541,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "17793:3:4",
																"nodeType": "VariableDeclaration",
																"scope": 1565,
																"src": "17785:11:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1540,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17785:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1545,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1542,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "17799:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1543,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "17814:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17799:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17785:37:4"
													},
													{
														"body": {
															"id": 1556,
															"nodeType": "Block",
															"src": "17839:73:4",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 1549,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17879:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 1548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "17871:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1547,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "17871:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17871:10:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1551,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1466,
																				"src": "17883:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1553,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "17887:9:4",
																				"subExpression": {
																					"id": 1552,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1537,
																					"src": "17887:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1546,
																			"name": "Transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2299,
																			"src": "17862:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17862:35:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1555,
																	"nodeType": "EmitStatement",
																	"src": "17857:40:4"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1557,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1537,
																"src": "17920:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1558,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1541,
																"src": "17930:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17920:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1560,
														"nodeType": "DoWhileStatement",
														"src": "17836:99:4"
													},
													{
														"expression": {
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1561,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "17949:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1562,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1541,
																"src": "17965:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17949:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1564,
														"nodeType": "ExpressionStatement",
														"src": "17949:19:4"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18017:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18009:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1567,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18009:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18009:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1571,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "18021:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1572,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "18025:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1573,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "18039:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1566,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2201,
														"src": "17988:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17988:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "17988:60:4"
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "16308:250:4",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "16572:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16586:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "16578:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16578:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "16598:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "16590:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16590:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16577:30:4"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16617:0:4"
									},
									"scope": 2222,
									"src": "16563:1492:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "18956:1372:4",
										"statements": [
											{
												"assignments": [
													1586
												],
												"declarations": [
													{
														"constant": false,
														"id": 1586,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "18974:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1688,
														"src": "18966:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1585,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18966:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1588,
												"initialValue": {
													"id": 1587,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 669,
													"src": "18989:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18966:36:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1589,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "19016:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19030:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19022:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1590,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19022:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19022:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19016:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1598,
												"nodeType": "IfStatement",
												"src": "19012:48:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1595,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "19041:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19041:19:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1597,
													"nodeType": "RevertStatement",
													"src": "19034:26:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1599,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "19074:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19086:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19074:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1605,
												"nodeType": "IfStatement",
												"src": "19070:44:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1602,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "19096:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19096:18:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1604,
													"nodeType": "RevertStatement",
													"src": "19089:25:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1606,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "19128:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1607,
														"name": "MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "19139:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19128:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1612,
												"nodeType": "IfStatement",
												"src": "19124:88:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1609,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "19179:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19179:33:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1611,
													"nodeType": "RevertStatement",
													"src": "19172:40:4"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19253:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19245:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1614,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19245:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1618,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "19257:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1619,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "19261:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1620,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "19275:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1613,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2188,
														"src": "19223:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19223:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "19223:61:4"
											},
											{
												"id": 1677,
												"nodeType": "UncheckedBlock",
												"src": "19393:859:4",
												"statements": [
													{
														"expression": {
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1623,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "19613:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1625,
																"indexExpression": {
																	"id": 1624,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "19632:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19613:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1626,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1582,
																	"src": "19639:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1629,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1627,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "19652:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1628,
																							"name": "BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 615,
																							"src": "19657:20:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "19652:25:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1630,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19651:27:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1631,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19681:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "19651:31:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1633,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19650:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19639:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19613:70:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1636,
														"nodeType": "ExpressionStatement",
														"src": "19613:70:4"
													},
													{
														"expression": {
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1637,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "19919:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1639,
																"indexExpression": {
																	"id": 1638,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "19937:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19919:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1641,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1580,
																		"src": "19989:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1643,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1582,
																					"src": "20030:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1642,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1185,
																				"src": "20009:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20009:30:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1648,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "20065:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1647,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "20057:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1646,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "20057:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1649,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20057:10:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1650,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1580,
																					"src": "20069:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "20073:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1645,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2162,
																				"src": "20042:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20042:33:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20009:66:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1640,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "19953:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19953:136:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19919:170:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1656,
														"nodeType": "ExpressionStatement",
														"src": "19919:170:4"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1658,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "20129:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1659,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "20143:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1660,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "20158:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20143:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20169:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "20143:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20180:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20172:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1664,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20172:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20172:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1668,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "20184:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1657,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2430,
																"src": "20109:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20109:78:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1670,
														"nodeType": "EmitStatement",
														"src": "20104:83:4"
													},
													{
														"expression": {
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1671,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "20202:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1672,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "20218:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1673,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1582,
																	"src": "20233:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20218:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20202:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1676,
														"nodeType": "ExpressionStatement",
														"src": "20202:39:4"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20290:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20282:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1679,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20282:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20282:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1683,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "20294:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1684,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "20298:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1685,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "20312:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1678,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2201,
														"src": "20261:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20261:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1687,
												"nodeType": "ExpressionStatement",
												"src": "20261:60:4"
											}
										]
									},
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "18061:829:4",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "18904:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18925:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "18917:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18917:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "18937:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "18929:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18929:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18916:30:4"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18956:0:4"
									},
									"scope": 2222,
									"src": "18895:1433:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "20586:487:4",
										"statements": [
											{
												"assignments": [
													1702
												],
												"declarations": [
													{
														"constant": false,
														"id": 1702,
														"mutability": "mutable",
														"name": "tokenApprovalsPtr",
														"nameLocation": "20632:17:4",
														"nodeType": "VariableDeclaration",
														"scope": 1706,
														"src": "20596:53:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														},
														"typeName": {
															"id": 1701,
															"keyType": {
																"id": 1699,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "20604:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Mapping",
															"src": "20596:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															},
															"valueType": {
																"id": 1700,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20615:7:4",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1704,
												"initialValue": {
													"id": 1703,
													"name": "_tokenApprovals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 687,
													"src": "20652:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
														"typeString": "mapping(uint256 => address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20596:71:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20774:293:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20828:4:4",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "tokenId",
																		"nodeType": "YulIdentifier",
																		"src": "20834:7:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20821:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "20821:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20821:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20862:4:4",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "tokenApprovalsPtr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "20868:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20855:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "20855:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20855:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20904:44:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20937:4:4",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20943:4:4",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "20927:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "20927:21:4"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "20904:19:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21012:45:4",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "21037:19:4"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "21031:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "21031:26:4"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "21012:15:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1697,
														"isOffset": false,
														"isSlot": false,
														"src": "21012:15:4",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "20904:19:4",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "21037:19:4",
														"valueSize": 1
													},
													{
														"declaration": 1702,
														"isOffset": false,
														"isSlot": true,
														"src": "20868:22:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1692,
														"isOffset": false,
														"isSlot": false,
														"src": "20834:7:4",
														"valueSize": 1
													}
												],
												"id": 1705,
												"nodeType": "InlineAssembly",
												"src": "20765:302:4"
											}
										]
									},
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "20334:97:4",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 1707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedAddress",
									"nameLocation": "20445:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20473:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "20465:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20465:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20464:17:4"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "20536:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "20528:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "20565:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "20557:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20527:54:4"
									},
									"scope": 2222,
									"src": "20436:637:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "21332:481:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21351:456:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21460:34:4",
															"value": {
																"arguments": [
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "21472:4:4"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "21478:15:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21468:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "21468:26:4"
															},
															"variableNames": [
																{
																	"name": "from",
																	"nodeType": "YulIdentifier",
																	"src": "21460:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21607:44:4",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "21624:9:4"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "21635:15:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21620:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "21620:31:4"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "21607:9:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21732:65:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "21748:9:4"
																			},
																			{
																				"name": "from",
																				"nodeType": "YulIdentifier",
																				"src": "21759:4:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21745:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21745:19:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "21769:9:4"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "21780:15:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21766:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21766:30:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "21742:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "21742:55:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "21732:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 664,
														"isOffset": false,
														"isSlot": false,
														"src": "21478:15:4",
														"valueSize": 1
													},
													{
														"declaration": 664,
														"isOffset": false,
														"isSlot": false,
														"src": "21635:15:4",
														"valueSize": 1
													},
													{
														"declaration": 1710,
														"isOffset": false,
														"isSlot": false,
														"src": "21780:15:4",
														"valueSize": 1
													},
													{
														"declaration": 1712,
														"isOffset": false,
														"isSlot": false,
														"src": "21460:4:4",
														"valueSize": 1
													},
													{
														"declaration": 1712,
														"isOffset": false,
														"isSlot": false,
														"src": "21472:4:4",
														"valueSize": 1
													},
													{
														"declaration": 1712,
														"isOffset": false,
														"isSlot": false,
														"src": "21759:4:4",
														"valueSize": 1
													},
													{
														"declaration": 1714,
														"isOffset": false,
														"isSlot": false,
														"src": "21607:9:4",
														"valueSize": 1
													},
													{
														"declaration": 1714,
														"isOffset": false,
														"isSlot": false,
														"src": "21624:9:4",
														"valueSize": 1
													},
													{
														"declaration": 1714,
														"isOffset": false,
														"isSlot": false,
														"src": "21748:9:4",
														"valueSize": 1
													},
													{
														"declaration": 1714,
														"isOffset": false,
														"isSlot": false,
														"src": "21769:9:4",
														"valueSize": 1
													},
													{
														"declaration": 1717,
														"isOffset": false,
														"isSlot": false,
														"src": "21732:6:4",
														"valueSize": 1
													}
												],
												"id": 1719,
												"nodeType": "InlineAssembly",
												"src": "21342:465:4"
											}
										]
									},
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "21079:97:4",
										"text": " @dev Returns whether the `approvedAddress` is equals to `from` or `msgSender`."
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isOwnerOrApproved",
									"nameLocation": "21190:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "21226:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "21218:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21218:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21259:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "21251:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21251:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "21281:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "21273:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21273:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21208:88:4"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "21324:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "21319:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21319:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21318:13:4"
									},
									"scope": 2222,
									"src": "21181:632:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2365
									],
									"body": {
										"id": 1865,
										"nodeType": "Block",
										"src": "22174:2620:4",
										"statements": [
											{
												"assignments": [
													1733
												],
												"declarations": [
													{
														"constant": false,
														"id": 1733,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "22192:19:4",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "22184:27:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22184:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1737,
												"initialValue": {
													"arguments": [
														{
															"id": 1735,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "22233:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1734,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "22214:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22214:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22184:57:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1742,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1733,
																		"src": "22272:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22264:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1740,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "22264:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22264:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22256:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1738,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22256:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22256:37:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1745,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "22297:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22256:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1750,
												"nodeType": "IfStatement",
												"src": "22252:86:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1747,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "22310:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22310:28:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1749,
													"nodeType": "RevertStatement",
													"src": "22303:35:4"
												}
											},
											{
												"assignments": [
													1752,
													1754
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "22358:19:4",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "22350:27:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22350:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1754,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "22387:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "22379:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1753,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "22379:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1758,
												"initialValue": {
													"arguments": [
														{
															"id": 1756,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "22426:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1755,
														"name": "_getApprovedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "22406:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22406:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22349:85:4"
											},
											{
												"condition": {
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "22530:63:4",
													"subExpression": {
														"arguments": [
															{
																"id": 1760,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1754,
																"src": "22550:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1761,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "22567:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1762,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2211,
																	"src": "22573:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22573:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1759,
															"name": "_isOwnerOrApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "22531:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22531:62:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1776,
												"nodeType": "IfStatement",
												"src": "22526:173:4",
												"trueBody": {
													"condition": {
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "22611:44:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 1767,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1724,
																	"src": "22629:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1768,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2211,
																		"src": "22635:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22635:19:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1766,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "22612:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22612:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1775,
													"nodeType": "IfStatement",
													"src": "22607:92:4",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1772,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "22664:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22664:35:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1774,
														"nodeType": "RevertStatement",
														"src": "22657:42:4"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1777,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "22714:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22728:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22720:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1778,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22720:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22720:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22714:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1786,
												"nodeType": "IfStatement",
												"src": "22710:52:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1783,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2258,
															"src": "22739:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22739:23:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1785,
													"nodeType": "RevertStatement",
													"src": "22732:30:4"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1788,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "22795:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1789,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "22801:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1790,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "22805:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22814:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1787,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2188,
														"src": "22773:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22773:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "22773:43:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "22888:181:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22921:138:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "23022:19:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23043:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "23015:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23015:30:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23015:30:4"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "22905:15:4"
															},
															"nodeType": "YulIf",
															"src": "22902:157:4"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1754,
														"isOffset": false,
														"isSlot": false,
														"src": "22905:15:4",
														"valueSize": 1
													},
													{
														"declaration": 1752,
														"isOffset": false,
														"isSlot": false,
														"src": "23022:19:4",
														"valueSize": 1
													}
												],
												"id": 1794,
												"nodeType": "InlineAssembly",
												"src": "22879:190:4"
											},
											{
												"id": 1851,
												"nodeType": "UncheckedBlock",
												"src": "23334:1359:4",
												"statements": [
													{
														"expression": {
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "23427:26:4",
															"subExpression": {
																"baseExpression": {
																	"id": 1795,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "23429:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1797,
																"indexExpression": {
																	"id": 1796,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1724,
																	"src": "23448:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23429:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1799,
														"nodeType": "ExpressionStatement",
														"src": "23427:26:4"
													},
													{
														"expression": {
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "23495:24:4",
															"subExpression": {
																"baseExpression": {
																	"id": 1800,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "23497:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1802,
																"indexExpression": {
																	"id": 1801,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1726,
																	"src": "23516:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23497:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1804,
														"nodeType": "ExpressionStatement",
														"src": "23495:24:4"
													},
													{
														"expression": {
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1805,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "23783:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1807,
																"indexExpression": {
																	"id": 1806,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1728,
																	"src": "23801:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23783:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1809,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1726,
																		"src": "23848:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1810,
																			"name": "BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "23868:24:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1812,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1724,
																					"src": "23910:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1813,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1726,
																					"src": "23916:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1814,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1733,
																					"src": "23920:19:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1811,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2162,
																				"src": "23895:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23895:45:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23868:72:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1808,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "23812:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23812:142:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23783:171:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1819,
														"nodeType": "ExpressionStatement",
														"src": "23783:171:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1820,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1733,
																	"src": "24071:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1821,
																	"name": "BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "24093:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24071:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24121:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24071:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1850,
														"nodeType": "IfStatement",
														"src": "24067:616:4",
														"trueBody": {
															"id": 1849,
															"nodeType": "Block",
															"src": "24124:559:4",
															"statements": [
																{
																	"assignments": [
																		1826
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1826,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "24150:11:4",
																			"nodeType": "VariableDeclaration",
																			"scope": 1849,
																			"src": "24142:19:4",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1825,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24142:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1830,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1827,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1728,
																			"src": "24164:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24174:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24164:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24142:33:4"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1831,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 679,
																				"src": "24295:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1833,
																			"indexExpression": {
																				"id": 1832,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1826,
																				"src": "24313:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "24295:30:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24329:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24295:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1848,
																	"nodeType": "IfStatement",
																	"src": "24291:378:4",
																	"trueBody": {
																		"id": 1847,
																		"nodeType": "Block",
																		"src": "24332:337:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1838,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1836,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1826,
																						"src": "24416:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1837,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 669,
																						"src": "24431:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "24416:28:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1846,
																				"nodeType": "IfStatement",
																				"src": "24412:239:4",
																				"trueBody": {
																					"id": 1845,
																					"nodeType": "Block",
																					"src": "24446:205:4",
																					"statements": [
																						{
																							"expression": {
																								"id": 1843,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1839,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 679,
																										"src": "24576:17:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1841,
																									"indexExpression": {
																										"id": 1840,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1826,
																										"src": "24594:11:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "24576:30:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1842,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1733,
																									"src": "24609:19:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "24576:52:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1844,
																							"nodeType": "ExpressionStatement",
																							"src": "24576:52:4"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1853,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "24717:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "24723:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1855,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "24727:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1852,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2299,
														"src": "24708:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24708:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1857,
												"nodeType": "EmitStatement",
												"src": "24703:32:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1859,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "24766:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1860,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "24772:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1861,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "24776:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24785:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1858,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2201,
														"src": "24745:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24745:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1864,
												"nodeType": "ExpressionStatement",
												"src": "24745:42:4"
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "21819:231:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "22064:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1730,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22165:8:4"
									},
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22094:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "22086:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22086:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22116:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "22108:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22136:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "22128:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22128:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22076:73:4"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22174:0:4"
									},
									"scope": 2222,
									"src": "22055:2739:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "24916:38:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1873,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "24932:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24941:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1872,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1878,
															2030
														],
														"referencedDeclaration": 2030,
														"src": "24926:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24926:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1876,
												"nodeType": "ExpressionStatement",
												"src": "24926:21:4"
											}
										]
									},
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "24800:62:4",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "24876:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24890:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "24882:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24882:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24881:17:4"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24916:0:4"
									},
									"scope": 2222,
									"src": "24867:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "25240:2928:4",
										"statements": [
											{
												"assignments": [
													1887
												],
												"declarations": [
													{
														"constant": false,
														"id": 1887,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "25258:19:4",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "25250:27:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1886,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25250:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1891,
												"initialValue": {
													"arguments": [
														{
															"id": 1889,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "25299:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1888,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "25280:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25280:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25250:57:4"
											},
											{
												"assignments": [
													1893
												],
												"declarations": [
													{
														"constant": false,
														"id": 1893,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "25326:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "25318:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1892,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25318:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1901,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1898,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1887,
																	"src": "25349:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25341:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1896,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "25341:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25341:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "25333:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1894,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25333:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25333:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25318:52:4"
											},
											{
												"assignments": [
													1903,
													1905
												],
												"declarations": [
													{
														"constant": false,
														"id": 1903,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "25390:19:4",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "25382:27:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1902,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25382:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1905,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "25419:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "25411:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1904,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25411:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1909,
												"initialValue": {
													"arguments": [
														{
															"id": 1907,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "25458:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1906,
														"name": "_getApprovedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "25438:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25438:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25381:85:4"
											},
											{
												"condition": {
													"id": 1910,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1883,
													"src": "25481:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1930,
												"nodeType": "IfStatement",
												"src": "25477:306:4",
												"trueBody": {
													"id": 1929,
													"nodeType": "Block",
													"src": "25496:287:4",
													"statements": [
														{
															"condition": {
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "25599:63:4",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1912,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1905,
																			"src": "25619:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1913,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1893,
																			"src": "25636:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1914,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2211,
																				"src": "25642:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25642:19:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1911,
																		"name": "_isOwnerOrApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "25600:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25600:62:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1928,
															"nodeType": "IfStatement",
															"src": "25595:177:4",
															"trueBody": {
																"condition": {
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "25684:44:4",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1919,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1893,
																				"src": "25702:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1920,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2211,
																					"src": "25708:17:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1921,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "25708:19:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1918,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "25685:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25685:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1927,
																"nodeType": "IfStatement",
																"src": "25680:92:4",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1924,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2249,
																			"src": "25737:33:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25737:35:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1926,
																	"nodeType": "RevertStatement",
																	"src": "25730:42:4"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1932,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "25815:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25829:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25821:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1933,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25821:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25821:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1937,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "25833:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25842:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1931,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2188,
														"src": "25793:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25793:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "25793:51:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "25916:181:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25949:138:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "26050:19:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26071:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "26043:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26043:30:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26043:30:4"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "25933:15:4"
															},
															"nodeType": "YulIf",
															"src": "25930:157:4"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1905,
														"isOffset": false,
														"isSlot": false,
														"src": "25933:15:4",
														"valueSize": 1
													},
													{
														"declaration": 1903,
														"isOffset": false,
														"isSlot": false,
														"src": "26050:19:4",
														"valueSize": 1
													}
												],
												"id": 1941,
												"nodeType": "InlineAssembly",
												"src": "25907:190:4"
											},
											{
												"id": 2005,
												"nodeType": "UncheckedBlock",
												"src": "26364:1540:4",
												"statements": [
													{
														"expression": {
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1942,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "26675:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1944,
																"indexExpression": {
																	"id": 1943,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "26694:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "26675:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26704:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1946,
																				"name": "BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 618,
																				"src": "26709:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26704:25:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1948,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "26703:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26733:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26703:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26675:59:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1952,
														"nodeType": "ExpressionStatement",
														"src": "26675:59:4"
													},
													{
														"expression": {
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1953,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "26965:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1955,
																"indexExpression": {
																	"id": 1954,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1881,
																	"src": "26983:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "26965:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1957,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1893,
																		"src": "27030:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1960,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1958,
																						"name": "BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 637,
																						"src": "27053:14:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1959,
																						"name": "BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 645,
																						"src": "27070:24:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27053:41:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1961,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "27052:43:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1963,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1893,
																					"src": "27113:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1966,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27127:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1965,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "27119:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1964,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "27119:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1967,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27119:10:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1968,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1887,
																					"src": "27131:19:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1962,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2162,
																				"src": "27098:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27098:53:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "27052:99:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1956,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "26994:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26994:171:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26965:200:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1973,
														"nodeType": "ExpressionStatement",
														"src": "26965:200:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1974,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1887,
																	"src": "27282:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1975,
																	"name": "BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "27304:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27282:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27332:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27282:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2004,
														"nodeType": "IfStatement",
														"src": "27278:616:4",
														"trueBody": {
															"id": 2003,
															"nodeType": "Block",
															"src": "27335:559:4",
															"statements": [
																{
																	"assignments": [
																		1980
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1980,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "27361:11:4",
																			"nodeType": "VariableDeclaration",
																			"scope": 2003,
																			"src": "27353:19:4",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1979,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "27353:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1984,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1981,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1881,
																			"src": "27375:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27385:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "27375:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "27353:33:4"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1985,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 679,
																				"src": "27506:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1987,
																			"indexExpression": {
																				"id": 1986,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1980,
																				"src": "27524:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27506:30:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27540:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27506:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2002,
																	"nodeType": "IfStatement",
																	"src": "27502:378:4",
																	"trueBody": {
																		"id": 2001,
																		"nodeType": "Block",
																		"src": "27543:337:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1992,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1990,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1980,
																						"src": "27627:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1991,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 669,
																						"src": "27642:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27627:28:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2000,
																				"nodeType": "IfStatement",
																				"src": "27623:239:4",
																				"trueBody": {
																					"id": 1999,
																					"nodeType": "Block",
																					"src": "27657:205:4",
																					"statements": [
																						{
																							"expression": {
																								"id": 1997,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1993,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 679,
																										"src": "27787:17:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1995,
																									"indexExpression": {
																										"id": 1994,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1980,
																										"src": "27805:11:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "27787:30:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1996,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1887,
																									"src": "27820:19:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "27787:52:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1998,
																							"nodeType": "ExpressionStatement",
																							"src": "27787:52:4"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2007,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "27928:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27942:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27934:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2008,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27934:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27934:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2012,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "27946:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2006,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2299,
														"src": "27919:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27919:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2014,
												"nodeType": "EmitStatement",
												"src": "27914:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2016,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "27985:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27999:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27991:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2017,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27991:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27991:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2021,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "28003:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28012:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2015,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2201,
														"src": "27964:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27964:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2024,
												"nodeType": "ExpressionStatement",
												"src": "27964:50:4"
											},
											{
												"id": 2028,
												"nodeType": "UncheckedBlock",
												"src": "28113:49:4",
												"statements": [
													{
														"expression": {
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "28137:14:4",
															"subExpression": {
																"id": 2025,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "28137:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2027,
														"nodeType": "ExpressionStatement",
														"src": "28137:14:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "24960:206:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "25180:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25194:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "25186:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25186:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "25208:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "25203:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25203:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25185:37:4"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25240:0:4"
									},
									"scope": 2222,
									"src": "25171:2997:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "28813:533:4",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 2065,
															"nodeType": "Block",
															"src": "28962:96:4",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2057,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2055,
																			"src": "28983:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 2059,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2035,
																							"src": "29018:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2058,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 601,
																						"src": "28993:24:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$601_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 2060,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28993:28:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$601",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 2061,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 600,
																				"src": "28993:45:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 2062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "28993:54:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "28983:64:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 2043,
																	"id": 2064,
																	"nodeType": "Return",
																	"src": "28976:71:4"
																}
															]
														},
														"errorName": "",
														"id": 2066,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2056,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2055,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "28945:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 2066,
																	"src": "28938:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 2054,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "28938:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "28924:37:4"
														},
														"src": "28916:142:4"
													},
													{
														"block": {
															"id": 2081,
															"nodeType": "Block",
															"src": "29087:253:4",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2070,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "29105:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "29105:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29122:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "29105:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 2079,
																		"nodeType": "Block",
																		"src": "29211:119:4",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "29238:78:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "29271:2:4",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "29275:6:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "29267:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "29267:15:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "29290:6:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "29284:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "29284:13:4"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "29260:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "29260:38:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "29260:38:4"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 2068,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "29275:6:4",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2068,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "29290:6:4",
																						"valueSize": 1
																					}
																				],
																				"id": 2078,
																				"nodeType": "InlineAssembly",
																				"src": "29229:87:4"
																			}
																		]
																	},
																	"id": 2080,
																	"nodeType": "IfStatement",
																	"src": "29101:229:4",
																	"trueBody": {
																		"id": 2077,
																		"nodeType": "Block",
																		"src": "29125:80:4",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2074,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2255,
																						"src": "29150:38:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 2075,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29150:40:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2076,
																				"nodeType": "RevertStatement",
																				"src": "29143:47:4"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 2082,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2069,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2068,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "29079:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 2082,
																	"src": "29066:19:4",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2067,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "29066:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "29065:21:4"
														},
														"src": "29059:281:4"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2048,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2211,
																"src": "28873:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28873:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2050,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "28894:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2051,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "28900:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2052,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2039,
															"src": "28909:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2045,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2035,
																	"src": "28852:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2044,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "28827:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$601_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28827:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$601",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 2047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 600,
														"src": "28827:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28827:88:4",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 2083,
												"nodeType": "TryStatement",
												"src": "28823:517:4"
											}
										]
									},
									"documentation": {
										"id": 2031,
										"nodeType": "StructuredDocumentation",
										"src": "28174:470:4",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "28658:30:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28706:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "28698:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28698:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28728:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "28720:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28720:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28748:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "28740:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28740:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "28778:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "28765:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2038,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28765:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28688:101:4"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "28807:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28807:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28806:6:4"
									},
									"scope": 2222,
									"src": "28649:697:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2128,
										"nodeType": "Block",
										"src": "29508:445:4",
										"statements": [
											{
												"assignments": [
													2094
												],
												"declarations": [
													{
														"constant": false,
														"id": 2094,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "29526:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 2128,
														"src": "29518:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2093,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29518:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2098,
												"initialValue": {
													"baseExpression": {
														"id": 2095,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "29535:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2097,
													"indexExpression": {
														"id": 2096,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2088,
														"src": "29553:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29535:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29518:41:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2099,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "29573:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29583:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29573:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2105,
												"nodeType": "IfStatement",
												"src": "29569:61:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2102,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "29593:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29593:37:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2104,
													"nodeType": "RevertStatement",
													"src": "29586:44:4"
												}
											},
											{
												"assignments": [
													2107
												],
												"declarations": [
													{
														"constant": false,
														"id": 2107,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "29648:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 2128,
														"src": "29640:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29640:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2108,
												"nodeType": "VariableDeclarationStatement",
												"src": "29640:23:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "29752:52:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29766:28:4",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "29785:9:4"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "29766:15:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2090,
														"isOffset": false,
														"isSlot": false,
														"src": "29785:9:4",
														"valueSize": 1
													},
													{
														"declaration": 2107,
														"isOffset": false,
														"isSlot": false,
														"src": "29766:15:4",
														"valueSize": 1
													}
												],
												"id": 2109,
												"nodeType": "InlineAssembly",
												"src": "29743:61:4"
											},
											{
												"expression": {
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2110,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "29813:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2111,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "29823:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 2112,
																		"name": "BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 656,
																		"src": "29832:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29823:38:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2114,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "29822:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2115,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2107,
																		"src": "29866:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 2116,
																		"name": "BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 648,
																		"src": "29885:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29866:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2118,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "29865:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29822:81:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29813:90:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "29813:90:4"
											},
											{
												"expression": {
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2122,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "29913:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2124,
														"indexExpression": {
															"id": 2123,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "29931:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29913:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2125,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "29940:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29913:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2127,
												"nodeType": "ExpressionStatement",
												"src": "29913:33:4"
											}
										]
									},
									"documentation": {
										"id": 2086,
										"nodeType": "StructuredDocumentation",
										"src": "29352:84:4",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 2129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "29450:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "29474:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "29466:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29466:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "29488:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "29481:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2089,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "29481:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29465:33:4"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29508:0:4"
									},
									"scope": 2222,
									"src": "29441:512:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2161,
										"nodeType": "Block",
										"src": "30239:162:4",
										"statements": [
											{
												"assignments": [
													2142
												],
												"declarations": [
													{
														"constant": false,
														"id": 2142,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "30256:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 2161,
														"src": "30249:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 2141,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "30249:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2149,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2145,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2136,
																"src": "30275:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 2146,
																"name": "BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "30298:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30275:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "30268:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 2143,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "30268:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30268:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30249:67:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2153,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2132,
																		"src": "30352:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2154,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2134,
																		"src": "30358:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2155,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "30362:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 2152,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2175,
																	"src": "30341:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30341:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30333:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "30333:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 2157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30333:40:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 2158,
														"name": "BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "30377:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30333:61:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2140,
												"id": 2160,
												"nodeType": "Return",
												"src": "30326:68:4"
											}
										]
									},
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "29959:135:4",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 2162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "30108:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30140:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "30132:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30132:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30162:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "30154:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30154:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "30182:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "30174:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30174:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30122:85:4"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "30230:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30230:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30229:9:4"
									},
									"scope": 2222,
									"src": "30099:302:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2174,
										"nodeType": "Block",
										"src": "31102:2:4",
										"statements": []
									},
									"documentation": {
										"id": 2163,
										"nodeType": "StructuredDocumentation",
										"src": "30407:549:4",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "30970:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30998:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "30990:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30990:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31020:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "31012:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31012:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "31039:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "31032:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2168,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "31032:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30980:82:4"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "31094:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2171,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "31094:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31093:8:4"
									},
									"scope": 2222,
									"src": "30961:143:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2187,
										"nodeType": "Block",
										"src": "31894:2:4",
										"statements": []
									},
									"documentation": {
										"id": 2176,
										"nodeType": "StructuredDocumentation",
										"src": "31110:627:4",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred.\n This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "31751:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31790:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "31782:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31782:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31812:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "31804:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31804:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "31832:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "31824:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "31862:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "31854:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31854:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31772:104:4"
									},
									"returnParameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31894:0:4"
									},
									"scope": 2222,
									"src": "31742:154:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2200,
										"nodeType": "Block",
										"src": "32688:2:4",
										"statements": []
									},
									"documentation": {
										"id": 2189,
										"nodeType": "StructuredDocumentation",
										"src": "31902:630:4",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred.\n This includes minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "32546:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32584:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "32576:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32576:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32606:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "32598:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32598:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "32626:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "32618:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32618:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "32656:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "32648:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32648:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32566:104:4"
									},
									"returnParameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32688:0:4"
									},
									"scope": 2222,
									"src": "32537:153:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "32943:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2207,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "32960:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "32960:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2206,
												"id": 2209,
												"nodeType": "Return",
												"src": "32953:17:4"
											}
										]
									},
									"documentation": {
										"id": 2202,
										"nodeType": "StructuredDocumentation",
										"src": "32696:173:4",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "32883:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32900:2:4"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "32934:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32934:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:9:4"
									},
									"scope": 2222,
									"src": "32874:103:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2220,
										"nodeType": "Block",
										"src": "33154:1844:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "33173:1819:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33524:28:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33541:4:4",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "33535:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33535:11:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33548:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33531:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "33531:21:4"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "33524:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33631:4:4",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "33637:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "33624:17:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33624:17:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "33729:14:4",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "33740:3:4"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "33733:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34620:144:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "34679:18:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34690:3:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34695:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "34686:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34686:11:4"
																		},
																		"variableNames": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "34679:3:4"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34722:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "34731:2:4",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "34739:4:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "34745:2:4",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "34735:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "34735:13:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "34727:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "34727:22:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "34714:7:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34714:36:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34714:36:4"
																	}
																]
															},
															"condition": {
																"name": "temp",
																"nodeType": "YulIdentifier",
																"src": "34509:4:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "34514:105:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "34584:21:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "34596:4:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34602:2:4",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "34592:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34592:13:4"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "34584:4:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "34086:422:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "34176:17:4",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "34188:5:4"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "34180:4:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "34300:18:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34311:3:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34316:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "34307:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34307:11:4"
																		},
																		"variableNames": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "34300:3:4"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34428:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "34437:2:4",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "34445:4:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "34451:2:4",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "34441:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "34441:13:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "34433:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "34433:22:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "34420:7:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34420:36:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34420:36:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "34473:21:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "34485:4:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34491:2:4",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "34481:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34481:13:4"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "34473:4:4"
																			}
																		]
																	}
																]
															},
															"src": "34082:682:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34778:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "34796:3:4"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34801:3:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "34792:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "34792:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "34782:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "34898:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34909:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34914:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "34905:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "34905:12:4"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "34898:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34970:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "34975:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34963:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "34963:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34963:19:4"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2217,
														"isOffset": false,
														"isSlot": false,
														"src": "33524:3:4",
														"valueSize": 1
													},
													{
														"declaration": 2217,
														"isOffset": false,
														"isSlot": false,
														"src": "33637:3:4",
														"valueSize": 1
													},
													{
														"declaration": 2217,
														"isOffset": false,
														"isSlot": false,
														"src": "33740:3:4",
														"valueSize": 1
													},
													{
														"declaration": 2217,
														"isOffset": false,
														"isSlot": false,
														"src": "34300:3:4",
														"valueSize": 1
													},
													{
														"declaration": 2217,
														"isOffset": false,
														"isSlot": false,
														"src": "34311:3:4",
														"valueSize": 1
													},
													{
														"declaration": 2217,
														"isOffset": false,
														"isSlot": false,
														"src": "34428:3:4",
														"valueSize": 1
													},
													{
														"declaration": 2217,
														"isOffset": false,
														"isSlot": false,
														"src": "34679:3:4",
														"valueSize": 1
													},
													{
														"declaration": 2217,
														"isOffset": false,
														"isSlot": false,
														"src": "34690:3:4",
														"valueSize": 1
													},
													{
														"declaration": 2217,
														"isOffset": false,
														"isSlot": false,
														"src": "34722:3:4",
														"valueSize": 1
													},
													{
														"declaration": 2217,
														"isOffset": false,
														"isSlot": false,
														"src": "34801:3:4",
														"valueSize": 1
													},
													{
														"declaration": 2217,
														"isOffset": false,
														"isSlot": false,
														"src": "34898:3:4",
														"valueSize": 1
													},
													{
														"declaration": 2217,
														"isOffset": false,
														"isSlot": false,
														"src": "34909:3:4",
														"valueSize": 1
													},
													{
														"declaration": 2217,
														"isOffset": false,
														"isSlot": false,
														"src": "34970:3:4",
														"valueSize": 1
													},
													{
														"declaration": 2214,
														"isOffset": false,
														"isSlot": false,
														"src": "34188:5:4",
														"valueSize": 1
													}
												],
												"id": 2219,
												"nodeType": "InlineAssembly",
												"src": "33164:1828:4"
											}
										]
									},
									"documentation": {
										"id": 2212,
										"nodeType": "StructuredDocumentation",
										"src": "32983:90:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "33087:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33105:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "33097:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33097:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33096:15:4"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "ptr",
												"nameLocation": "33149:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "33135:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "33135:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33134:19:4"
									},
									"scope": 2222,
									"src": "33078:1920:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2223,
							"src": "885:34115:4",
							"usedErrors": [
								2228,
								2231,
								2234,
								2237,
								2240,
								2243,
								2246,
								2249,
								2252,
								2255,
								2258,
								2261,
								2264,
								2267
							]
						}
					],
					"src": "84:34917:4"
				},
				"id": 4
			},
			"erc721a/contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							2431
						]
					},
					"id": 2432,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2225,
								"nodeType": "StructuredDocumentation",
								"src": "109:59:5",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 2431,
							"linearizedBaseContracts": [
								2431
							],
							"name": "IERC721A",
							"nameLocation": "179:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2226,
										"nodeType": "StructuredDocumentation",
										"src": "194:76:5",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 2228,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "281:33:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:2:5"
									},
									"src": "275:42:5"
								},
								{
									"documentation": {
										"id": 2229,
										"nodeType": "StructuredDocumentation",
										"src": "323:44:5",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 2231,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "378:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:5"
									},
									"src": "372:41:5"
								},
								{
									"documentation": {
										"id": 2232,
										"nodeType": "StructuredDocumentation",
										"src": "419:66:5",
										"text": " The caller cannot approve to their own address."
									},
									"errorSelector": "b06307db",
									"id": 2234,
									"name": "ApproveToCaller",
									"nameLocation": "496:15:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:5"
									},
									"src": "490:24:5"
								},
								{
									"documentation": {
										"id": 2235,
										"nodeType": "StructuredDocumentation",
										"src": "520:65:5",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 2237,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "596:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:2:5"
									},
									"src": "590:35:5"
								},
								{
									"documentation": {
										"id": 2238,
										"nodeType": "StructuredDocumentation",
										"src": "631:51:5",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 2240,
									"name": "MintToZeroAddress",
									"nameLocation": "693:17:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:2:5"
									},
									"src": "687:26:5"
								},
								{
									"documentation": {
										"id": 2241,
										"nodeType": "StructuredDocumentation",
										"src": "719:72:5",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 2243,
									"name": "MintZeroQuantity",
									"nameLocation": "802:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:2:5"
									},
									"src": "796:25:5"
								},
								{
									"documentation": {
										"id": 2244,
										"nodeType": "StructuredDocumentation",
										"src": "827:44:5",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 2246,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "882:29:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:2:5"
									},
									"src": "876:38:5"
								},
								{
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "920:76:5",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 2249,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "1007:33:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:2:5"
									},
									"src": "1001:42:5"
								},
								{
									"documentation": {
										"id": 2250,
										"nodeType": "StructuredDocumentation",
										"src": "1049:53:5",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 2252,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1113:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:2:5"
									},
									"src": "1107:35:5"
								},
								{
									"documentation": {
										"id": 2253,
										"nodeType": "StructuredDocumentation",
										"src": "1148:109:5",
										"text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 2255,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1268:38:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:2:5"
									},
									"src": "1262:47:5"
								},
								{
									"documentation": {
										"id": 2256,
										"nodeType": "StructuredDocumentation",
										"src": "1315:55:5",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 2258,
									"name": "TransferToZeroAddress",
									"nameLocation": "1381:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1402:2:5"
									},
									"src": "1375:30:5"
								},
								{
									"documentation": {
										"id": 2259,
										"nodeType": "StructuredDocumentation",
										"src": "1411:44:5",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 2261,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1466:27:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:2:5"
									},
									"src": "1460:36:5"
								},
								{
									"documentation": {
										"id": 2262,
										"nodeType": "StructuredDocumentation",
										"src": "1502:79:5",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 2264,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1592:31:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1623:2:5"
									},
									"src": "1586:40:5"
								},
								{
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "1632:83:5",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 2267,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1726:35:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1761:2:5"
									},
									"src": "1720:44:5"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 2276,
									"members": [
										{
											"constant": false,
											"id": 2269,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1847:4:5",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "1839:12:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2268,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1839:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2271,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1960:14:5",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "1953:21:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2270,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1953:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2273,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2035:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "2030:11:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2272,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2030:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2275,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2150:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "2143:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2274,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2143:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1777:14:5",
									"nodeType": "StructDefinition",
									"scope": 2431,
									"src": "1770:396:5",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "2172:193:5",
										"text": " @dev Returns the total amount of tokens stored by the contract.\n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 2282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2379:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2390:2:5"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "2416:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2416:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:9:5"
									},
									"scope": 2431,
									"src": "2370:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2283,
										"nodeType": "StructuredDocumentation",
										"src": "2534:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2888:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2913:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "2906:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2284,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2906:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2905:20:5"
									},
									"returnParameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "2949:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2949:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:6:5"
									},
									"scope": 2431,
									"src": "2879:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2291,
										"nodeType": "StructuredDocumentation",
										"src": "3064:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2299,
									"name": "Transfer",
									"nameLocation": "3163:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3188:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "3172:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3210:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "3194:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3230:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "3214:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:67:5"
									},
									"src": "3157:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2300,
										"nodeType": "StructuredDocumentation",
										"src": "3245:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2308,
									"name": "Approval",
									"nameLocation": "3350:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3375:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "3359:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3398:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "3382:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3424:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "3408:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3358:74:5"
									},
									"src": "3344:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2309,
										"nodeType": "StructuredDocumentation",
										"src": "3439:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 2317,
									"name": "ApprovalForAll",
									"nameLocation": "3567:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3598:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "3582:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2313,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3621:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "3605:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3605:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3636:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "3631:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3631:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:64:5"
									},
									"src": "3561:85:5"
								},
								{
									"documentation": {
										"id": 2318,
										"nodeType": "StructuredDocumentation",
										"src": "3652:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 2325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3742:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3760:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "3752:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:15:5"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3798:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "3790:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:17:5"
									},
									"scope": 2431,
									"src": "3733:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2326,
										"nodeType": "StructuredDocumentation",
										"src": "3813:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 2333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "3958:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3974:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "3966:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3966:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3965:17:5"
									},
									"returnParameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "4006:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:15:5"
									},
									"scope": 2431,
									"src": "3949:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2334,
										"nodeType": "StructuredDocumentation",
										"src": "4027:556:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4597:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4631:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "4623:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4623:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4653:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "4645:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4673:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "4665:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4705:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "4690:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4690:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4613:102:5"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4724:0:5"
									},
									"scope": 2431,
									"src": "4588:137:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2346,
										"nodeType": "StructuredDocumentation",
										"src": "4731:690:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 2355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5435:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5469:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "5461:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5461:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5491:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "5483:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5483:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5511:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "5503:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5503:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5451:73:5"
									},
									"returnParameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5533:0:5"
									},
									"scope": 2431,
									"src": "5426:108:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2356,
										"nodeType": "StructuredDocumentation",
										"src": "5540:504:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6058:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6088:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "6080:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6080:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6110:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "6102:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6102:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6130:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "6122:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6122:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6070:73:5"
									},
									"returnParameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6152:0:5"
									},
									"scope": 2431,
									"src": "6049:104:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2366,
										"nodeType": "StructuredDocumentation",
										"src": "6159:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6625:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6641:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "6633:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6633:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6653:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "6645:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6645:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6632:29:5"
									},
									"returnParameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6670:0:5"
									},
									"scope": 2431,
									"src": "6616:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2374,
										"nodeType": "StructuredDocumentation",
										"src": "6677:309:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 2381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7000:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7026:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "7018:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7018:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7041:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "7036:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7036:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7017:34:5"
									},
									"returnParameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7060:0:5"
									},
									"scope": 2431,
									"src": "6991:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2382,
										"nodeType": "StructuredDocumentation",
										"src": "7067:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 2389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7220:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7240:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "7232:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7231:17:5"
									},
									"returnParameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7280:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "7272:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:18:5"
									},
									"scope": 2431,
									"src": "7211:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2390,
										"nodeType": "StructuredDocumentation",
										"src": "7296:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 2399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7448:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7473:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "7465:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7488:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "7480:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7480:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7464:33:5"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "7521:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7521:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7520:6:5"
									},
									"scope": 2431,
									"src": "7439:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2400,
										"nodeType": "StructuredDocumentation",
										"src": "7640:58:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7712:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7716:2:5"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "7742:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2402,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7742:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7741:15:5"
									},
									"scope": 2431,
									"src": "7703:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2406,
										"nodeType": "StructuredDocumentation",
										"src": "7763:60:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7837:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7843:2:5"
									},
									"returnParameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "7869:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2408,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7869:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7868:15:5"
									},
									"scope": 2431,
									"src": "7828:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2412,
										"nodeType": "StructuredDocumentation",
										"src": "7890:90:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "7994:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8011:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "8003:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8003:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8002:17:5"
									},
									"returnParameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "8043:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8043:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8042:15:5"
									},
									"scope": 2431,
									"src": "7985:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2420,
										"nodeType": "StructuredDocumentation",
										"src": "8168:203:5",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n as defined in the ERC2309 standard. See `_mintERC2309` for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 2430,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8382:19:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8418:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "8402:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8402:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2424,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8439:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "8431:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8431:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8466:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "8450:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8450:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2428,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8488:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "8472:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8472:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8401:90:5"
									},
									"src": "8376:116:5"
								}
							],
							"scope": 2432,
							"src": "169:8325:5",
							"usedErrors": [
								2228,
								2231,
								2234,
								2237,
								2240,
								2243,
								2246,
								2249,
								2252,
								2255,
								2258,
								2261,
								2264,
								2267
							]
						}
					],
					"src": "84:8411:5"
				},
				"id": 5
			},
			"erc721a/contracts/extensions/ERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/extensions/ERC721ABurnable.sol",
					"exportedSymbols": {
						"ERC721A": [
							2222
						],
						"ERC721ABurnable": [
							2454
						],
						"ERC721A__IERC721Receiver": [
							601
						],
						"IERC721A": [
							2431
						],
						"IERC721ABurnable": [
							2842
						]
					},
					"id": 2455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2433,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:6"
						},
						{
							"absolutePath": "erc721a/contracts/extensions/IERC721ABurnable.sol",
							"file": "./IERC721ABurnable.sol",
							"id": 2434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2455,
							"sourceUnit": 2843,
							"src": "109:32:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721a/contracts/ERC721A.sol",
							"file": "../ERC721A.sol",
							"id": 2435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2455,
							"sourceUnit": 2223,
							"src": "142:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2437,
										"name": "ERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2222,
										"src": "313:7:6"
									},
									"id": 2438,
									"nodeType": "InheritanceSpecifier",
									"src": "313:7:6"
								},
								{
									"baseName": {
										"id": 2439,
										"name": "IERC721ABurnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2842,
										"src": "322:16:6"
									},
									"id": 2440,
									"nodeType": "InheritanceSpecifier",
									"src": "322:16:6"
								}
							],
							"canonicalName": "ERC721ABurnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2436,
								"nodeType": "StructuredDocumentation",
								"src": "168:107:6",
								"text": " @title ERC721A Burnable Token\n @dev ERC721A Token that can be irreversibly burned (destroyed)."
							},
							"fullyImplemented": false,
							"id": 2454,
							"linearizedBaseContracts": [
								2454,
								2842,
								2222,
								2431
							],
							"name": "ERC721ABurnable",
							"nameLocation": "294:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2841
									],
									"body": {
										"id": 2452,
										"nodeType": "Block",
										"src": "568:37:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2448,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2443,
															"src": "584:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "593:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2447,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1878,
															2030
														],
														"referencedDeclaration": 2030,
														"src": "578:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 2450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "578:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2451,
												"nodeType": "ExpressionStatement",
												"src": "578:20:6"
											}
										]
									},
									"documentation": {
										"id": 2441,
										"nodeType": "StructuredDocumentation",
										"src": "345:163:6",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 2453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "522:4:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2445,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "559:8:6"
									},
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "535:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "527:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:17:6"
									},
									"returnParameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:0:6"
									},
									"scope": 2454,
									"src": "513:92:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2455,
							"src": "276:331:6",
							"usedErrors": [
								2228,
								2231,
								2234,
								2237,
								2240,
								2243,
								2246,
								2249,
								2252,
								2255,
								2258,
								2261,
								2264,
								2267
							]
						}
					],
					"src": "84:524:6"
				},
				"id": 6
			},
			"erc721a/contracts/extensions/ERC721AQueryable.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/extensions/ERC721AQueryable.sol",
					"exportedSymbols": {
						"ERC721A": [
							2222
						],
						"ERC721AQueryable": [
							2829
						],
						"ERC721A__IERC721Receiver": [
							601
						],
						"IERC721A": [
							2431
						],
						"IERC721AQueryable": [
							2894
						]
					},
					"id": 2830,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2456,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:7"
						},
						{
							"absolutePath": "erc721a/contracts/extensions/IERC721AQueryable.sol",
							"file": "./IERC721AQueryable.sol",
							"id": 2457,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2830,
							"sourceUnit": 2895,
							"src": "109:33:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721a/contracts/ERC721A.sol",
							"file": "../ERC721A.sol",
							"id": 2458,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2830,
							"sourceUnit": 2223,
							"src": "143:24:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2460,
										"name": "ERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2222,
										"src": "302:7:7"
									},
									"id": 2461,
									"nodeType": "InheritanceSpecifier",
									"src": "302:7:7"
								},
								{
									"baseName": {
										"id": 2462,
										"name": "IERC721AQueryable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2894,
										"src": "311:17:7"
									},
									"id": 2463,
									"nodeType": "InheritanceSpecifier",
									"src": "311:17:7"
								}
							],
							"canonicalName": "ERC721AQueryable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2459,
								"nodeType": "StructuredDocumentation",
								"src": "169:94:7",
								"text": " @title ERC721A Queryable\n @dev ERC721A subclass with convenience query functions."
							},
							"fullyImplemented": false,
							"id": 2829,
							"linearizedBaseContracts": [
								2829,
								2894,
								2222,
								2431
							],
							"name": "ERC721AQueryable",
							"nameLocation": "282:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2860
									],
									"body": {
										"id": 2506,
										"nodeType": "Block",
										"src": "1191:311:7",
										"statements": [
											{
												"assignments": [
													2475
												],
												"declarations": [
													{
														"constant": false,
														"id": 2475,
														"mutability": "mutable",
														"name": "ownership",
														"nameLocation": "1223:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 2506,
														"src": "1201:31:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 2474,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2473,
																"name": "TokenOwnership",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2276,
																"src": "1201:14:7"
															},
															"referencedDeclaration": 2276,
															"src": "1201:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2276_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2476,
												"nodeType": "VariableDeclarationStatement",
												"src": "1201:31:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2477,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "1246:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2478,
																"name": "_startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "1256:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1256:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1246:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2481,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "1275:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2482,
																"name": "_nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "1286:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1286:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1275:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1246:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2489,
												"nodeType": "IfStatement",
												"src": "1242:101:7",
												"trueBody": {
													"id": 2488,
													"nodeType": "Block",
													"src": "1302:41:7",
													"statements": [
														{
															"expression": {
																"id": 2486,
																"name": "ownership",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "1323:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																	"typeString": "struct IERC721A.TokenOwnership memory"
																}
															},
															"functionReturnParameters": 2472,
															"id": 2487,
															"nodeType": "Return",
															"src": "1316:16:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2490,
														"name": "ownership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2475,
														"src": "1352:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2492,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2466,
																"src": "1377:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2491,
															"name": "_ownershipAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "1364:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2276_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
															}
														},
														"id": 2493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1364:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"src": "1352:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"id": 2495,
												"nodeType": "ExpressionStatement",
												"src": "1352:33:7"
											},
											{
												"condition": {
													"expression": {
														"id": 2496,
														"name": "ownership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2475,
														"src": "1399:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "burned",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2273,
													"src": "1399:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2501,
												"nodeType": "IfStatement",
												"src": "1395:63:7",
												"trueBody": {
													"id": 2500,
													"nodeType": "Block",
													"src": "1417:41:7",
													"statements": [
														{
															"expression": {
																"id": 2498,
																"name": "ownership",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "1438:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																	"typeString": "struct IERC721A.TokenOwnership memory"
																}
															},
															"functionReturnParameters": 2472,
															"id": 2499,
															"nodeType": "Return",
															"src": "1431:16:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2503,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "1487:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2502,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "1474:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2276_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 2472,
												"id": 2505,
												"nodeType": "Return",
												"src": "1467:28:7"
											}
										]
									},
									"documentation": {
										"id": 2464,
										"nodeType": "StructuredDocumentation",
										"src": "335:752:7",
										"text": " @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n If the `tokenId` is out of bounds:\n   - `addr` = `address(0)`\n   - `startTimestamp` = `0`\n   - `burned` = `false`\n   - `extraData` = `0`\n If the `tokenId` is burned:\n   - `addr` = `<Address of owner before token was burned>`\n   - `startTimestamp` = `<Timestamp when token was burned>`\n   - `burned = `true`\n   - `extraData` = `<Extra data when token was burned>`\n Otherwise:\n   - `addr` = `<Address of owner>`\n   - `startTimestamp` = `<Timestamp of start of ownership>`\n   - `burned = `false`\n   - `extraData` = `<Extra data at start of ownership>`"
									},
									"functionSelector": "c23dc68f",
									"id": 2507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipOf",
									"nameLocation": "1101:19:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2468,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1150:8:7"
									},
									"parameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1129:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "1121:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1120:17:7"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "1168:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 2470,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2469,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2276,
														"src": "1168:14:7"
													},
													"referencedDeclaration": 2276,
													"src": "1168:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2276_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:23:7"
									},
									"scope": 2829,
									"src": "1092:410:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2871
									],
									"body": {
										"id": 2560,
										"nodeType": "Block",
										"src": "1769:345:7",
										"statements": [
											{
												"id": 2559,
												"nodeType": "UncheckedBlock",
												"src": "1779:329:7",
												"statements": [
													{
														"assignments": [
															2520
														],
														"declarations": [
															{
																"constant": false,
																"id": 2520,
																"mutability": "mutable",
																"name": "tokenIdsLength",
																"nameLocation": "1811:14:7",
																"nodeType": "VariableDeclaration",
																"scope": 2559,
																"src": "1803:22:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2519,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1803:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2523,
														"initialValue": {
															"expression": {
																"id": 2521,
																"name": "tokenIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2511,
																"src": "1828:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1828:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1803:40:7"
													},
													{
														"assignments": [
															2528
														],
														"declarations": [
															{
																"constant": false,
																"id": 2528,
																"mutability": "mutable",
																"name": "ownerships",
																"nameLocation": "1881:10:7",
																"nodeType": "VariableDeclaration",
																"scope": 2559,
																"src": "1857:34:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2276_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct IERC721A.TokenOwnership[]"
																},
																"typeName": {
																	"baseType": {
																		"id": 2526,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2525,
																			"name": "TokenOwnership",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2276,
																			"src": "1857:14:7"
																		},
																		"referencedDeclaration": 2276,
																		"src": "1857:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$2276_storage_ptr",
																			"typeString": "struct IERC721A.TokenOwnership"
																		}
																	},
																	"id": 2527,
																	"nodeType": "ArrayTypeName",
																	"src": "1857:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2276_storage_$dyn_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership[]"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2535,
														"initialValue": {
															"arguments": [
																{
																	"id": 2533,
																	"name": "tokenIdsLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2520,
																	"src": "1915:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1894:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenOwnership_$2276_memory_ptr_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2530,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2529,
																			"name": "TokenOwnership",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2276,
																			"src": "1898:14:7"
																		},
																		"referencedDeclaration": 2276,
																		"src": "1898:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$2276_storage_ptr",
																			"typeString": "struct IERC721A.TokenOwnership"
																		}
																	},
																	"id": 2531,
																	"nodeType": "ArrayTypeName",
																	"src": "1898:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2276_storage_$dyn_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership[]"
																	}
																}
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1894:36:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2276_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory[] memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1857:73:7"
													},
													{
														"body": {
															"id": 2555,
															"nodeType": "Block",
															"src": "1986:81:7",
															"statements": [
																{
																	"expression": {
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2545,
																				"name": "ownerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2528,
																				"src": "2004:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2276_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership memory[] memory"
																				}
																			},
																			"id": 2547,
																			"indexExpression": {
																				"id": 2546,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2537,
																				"src": "2015:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "2004:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 2549,
																						"name": "tokenIds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2511,
																						"src": "2040:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 2551,
																					"indexExpression": {
																						"id": 2550,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2537,
																						"src": "2049:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2040:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2548,
																				"name": "explicitOwnershipOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2507,
																				"src": "2020:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2276_memory_ptr_$",
																					"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
																				}
																			},
																			"id": 2552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2020:32:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"src": "2004:48:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																			"typeString": "struct IERC721A.TokenOwnership memory"
																		}
																	},
																	"id": 2554,
																	"nodeType": "ExpressionStatement",
																	"src": "2004:48:7"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2539,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2537,
																"src": "1960:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2540,
																"name": "tokenIdsLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2520,
																"src": "1965:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1960:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2556,
														"initializationExpression": {
															"assignments": [
																2537
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2537,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "1957:1:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2556,
																	"src": "1949:9:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2536,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1949:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2538,
															"nodeType": "VariableDeclarationStatement",
															"src": "1949:9:7"
														},
														"loopExpression": {
															"expression": {
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "1981:3:7",
																"subExpression": {
																	"id": 2542,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2537,
																	"src": "1983:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2544,
															"nodeType": "ExpressionStatement",
															"src": "1981:3:7"
														},
														"nodeType": "ForStatement",
														"src": "1944:123:7"
													},
													{
														"expression": {
															"id": 2557,
															"name": "ownerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2528,
															"src": "2087:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2276_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory[] memory"
															}
														},
														"functionReturnParameters": 2518,
														"id": 2558,
														"nodeType": "Return",
														"src": "2080:17:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2508,
										"nodeType": "StructuredDocumentation",
										"src": "1508:142:7",
										"text": " @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n See {ERC721AQueryable-explicitOwnershipOf}"
									},
									"functionSelector": "5bbb2177",
									"id": 2561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipsOf",
									"nameLocation": "1664:20:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2513,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1726:8:7"
									},
									"parameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "1702:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "1685:25:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2509,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1685:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2510,
													"nodeType": "ArrayTypeName",
													"src": "1685:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1684:27:7"
									},
									"returnParameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "1744:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2276_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership[]"
												},
												"typeName": {
													"baseType": {
														"id": 2515,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2514,
															"name": "TokenOwnership",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2276,
															"src": "1744:14:7"
														},
														"referencedDeclaration": 2276,
														"src": "1744:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2276_storage_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														}
													},
													"id": 2516,
													"nodeType": "ArrayTypeName",
													"src": "1744:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2276_storage_$dyn_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:25:7"
									},
									"scope": 2829,
									"src": "1655:459:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2884
									],
									"body": {
										"id": 2736,
										"nodeType": "Block",
										"src": "2639:2297:7",
										"statements": [
											{
												"id": 2735,
												"nodeType": "UncheckedBlock",
												"src": "2649:2281:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2575,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "2677:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2576,
																"name": "stop",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2568,
																"src": "2686:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2677:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2581,
														"nodeType": "IfStatement",
														"src": "2673:45:7",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2578,
																	"name": "InvalidQueryRange",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2851,
																	"src": "2699:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2699:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2580,
															"nodeType": "RevertStatement",
															"src": "2692:26:7"
														}
													},
													{
														"assignments": [
															2583
														],
														"declarations": [
															{
																"constant": false,
																"id": 2583,
																"mutability": "mutable",
																"name": "tokenIdsIdx",
																"nameLocation": "2740:11:7",
																"nodeType": "VariableDeclaration",
																"scope": 2735,
																"src": "2732:19:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2732:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2584,
														"nodeType": "VariableDeclarationStatement",
														"src": "2732:19:7"
													},
													{
														"assignments": [
															2586
														],
														"declarations": [
															{
																"constant": false,
																"id": 2586,
																"mutability": "mutable",
																"name": "stopLimit",
																"nameLocation": "2773:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 2735,
																"src": "2765:17:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2585,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2765:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2589,
														"initialValue": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2587,
																"name": "_nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "2785:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2785:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2765:34:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2590,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "2875:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2591,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "2883:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2883:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2875:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2600,
														"nodeType": "IfStatement",
														"src": "2871:85:7",
														"trueBody": {
															"id": 2599,
															"nodeType": "Block",
															"src": "2900:56:7",
															"statements": [
																{
																	"expression": {
																		"id": 2597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2594,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2566,
																			"src": "2918:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2595,
																				"name": "_startTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 723,
																				"src": "2926:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 2596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2926:15:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2918:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2598,
																	"nodeType": "ExpressionStatement",
																	"src": "2918:23:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2601,
																"name": "stop",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2568,
																"src": "3023:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2602,
																"name": "stopLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2586,
																"src": "3030:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3023:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2609,
														"nodeType": "IfStatement",
														"src": "3019:71:7",
														"trueBody": {
															"id": 2608,
															"nodeType": "Block",
															"src": "3041:49:7",
															"statements": [
																{
																	"expression": {
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2604,
																			"name": "stop",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2568,
																			"src": "3059:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 2605,
																			"name": "stopLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2586,
																			"src": "3066:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3059:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2607,
																	"nodeType": "ExpressionStatement",
																	"src": "3059:16:7"
																}
															]
														}
													},
													{
														"assignments": [
															2611
														],
														"declarations": [
															{
																"constant": false,
																"id": 2611,
																"mutability": "mutable",
																"name": "tokenIdsMaxLength",
																"nameLocation": "3111:17:7",
																"nodeType": "VariableDeclaration",
																"scope": 2735,
																"src": "3103:25:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2610,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3103:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2615,
														"initialValue": {
															"arguments": [
																{
																	"id": 2613,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2564,
																	"src": "3141:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2612,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "3131:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3131:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3103:44:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2616,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "3314:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2617,
																"name": "stop",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2568,
																"src": "3322:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3314:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 2639,
															"nodeType": "Block",
															"src": "3527:54:7",
															"statements": [
																{
																	"expression": {
																		"id": 2637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2635,
																			"name": "tokenIdsMaxLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "3545:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "30",
																			"id": 2636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3565:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3545:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2638,
																	"nodeType": "ExpressionStatement",
																	"src": "3545:21:7"
																}
															]
														},
														"id": 2640,
														"nodeType": "IfStatement",
														"src": "3310:271:7",
														"trueBody": {
															"id": 2634,
															"nodeType": "Block",
															"src": "3328:193:7",
															"statements": [
																{
																	"assignments": [
																		2620
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2620,
																			"mutability": "mutable",
																			"name": "rangeLength",
																			"nameLocation": "3354:11:7",
																			"nodeType": "VariableDeclaration",
																			"scope": 2634,
																			"src": "3346:19:7",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2619,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3346:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2624,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2621,
																			"name": "stop",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2568,
																			"src": "3368:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2622,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2566,
																			"src": "3375:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3368:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3346:34:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2625,
																			"name": "rangeLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2620,
																			"src": "3402:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2626,
																			"name": "tokenIdsMaxLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2611,
																			"src": "3416:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3402:31:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2633,
																	"nodeType": "IfStatement",
																	"src": "3398:109:7",
																	"trueBody": {
																		"id": 2632,
																		"nodeType": "Block",
																		"src": "3435:72:7",
																		"statements": [
																			{
																				"expression": {
																					"id": 2630,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2628,
																						"name": "tokenIdsMaxLength",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2611,
																						"src": "3457:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2629,
																						"name": "rangeLength",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2620,
																						"src": "3477:11:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3457:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2631,
																				"nodeType": "ExpressionStatement",
																				"src": "3457:31:7"
																			}
																		]
																	}
																}
															]
														}
													},
													{
														"assignments": [
															2645
														],
														"declarations": [
															{
																"constant": false,
																"id": 2645,
																"mutability": "mutable",
																"name": "tokenIds",
																"nameLocation": "3611:8:7",
																"nodeType": "VariableDeclaration",
																"scope": 2735,
																"src": "3594:25:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[]"
																},
																"typeName": {
																	"baseType": {
																		"id": 2643,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3594:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2644,
																	"nodeType": "ArrayTypeName",
																	"src": "3594:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2651,
														"initialValue": {
															"arguments": [
																{
																	"id": 2649,
																	"name": "tokenIdsMaxLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "3636:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "3622:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2646,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3626:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2647,
																	"nodeType": "ArrayTypeName",
																	"src": "3626:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3622:32:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3594:60:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2652,
																"name": "tokenIdsMaxLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2611,
																"src": "3672:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3693:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3672:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2658,
														"nodeType": "IfStatement",
														"src": "3668:76:7",
														"trueBody": {
															"id": 2657,
															"nodeType": "Block",
															"src": "3696:48:7",
															"statements": [
																{
																	"expression": {
																		"id": 2655,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2645,
																		"src": "3721:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"functionReturnParameters": 2574,
																	"id": 2656,
																	"nodeType": "Return",
																	"src": "3714:15:7"
																}
															]
														}
													},
													{
														"assignments": [
															2661
														],
														"declarations": [
															{
																"constant": false,
																"id": 2661,
																"mutability": "mutable",
																"name": "ownership",
																"nameLocation": "3907:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 2735,
																"src": "3885:31:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2660,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2659,
																		"name": "TokenOwnership",
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2276,
																		"src": "3885:14:7"
																	},
																	"referencedDeclaration": 2276,
																	"src": "3885:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2276_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2665,
														"initialValue": {
															"arguments": [
																{
																	"id": 2663,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2566,
																	"src": "3939:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2662,
																"name": "explicitOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "3919:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2276_memory_ptr_$",
																	"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
																}
															},
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3919:26:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3885:60:7"
													},
													{
														"assignments": [
															2667
														],
														"declarations": [
															{
																"constant": false,
																"id": 2667,
																"mutability": "mutable",
																"name": "currOwnershipAddr",
																"nameLocation": "3967:17:7",
																"nodeType": "VariableDeclaration",
																"scope": 2735,
																"src": "3959:25:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 2666,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3959:7:7",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2668,
														"nodeType": "VariableDeclarationStatement",
														"src": "3959:25:7"
													},
													{
														"condition": {
															"id": 2671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4200:17:7",
															"subExpression": {
																"expression": {
																	"id": 2669,
																	"name": "ownership",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2661,
																	"src": "4201:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																		"typeString": "struct IERC721A.TokenOwnership memory"
																	}
																},
																"id": 2670,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "burned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2273,
																"src": "4201:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2678,
														"nodeType": "IfStatement",
														"src": "4196:90:7",
														"trueBody": {
															"id": 2677,
															"nodeType": "Block",
															"src": "4219:67:7",
															"statements": [
																{
																	"expression": {
																		"id": 2675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2672,
																			"name": "currOwnershipAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2667,
																			"src": "4237:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"id": 2673,
																				"name": "ownership",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2661,
																				"src": "4257:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership memory"
																				}
																			},
																			"id": 2674,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "addr",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2269,
																			"src": "4257:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "4237:34:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2676,
																	"nodeType": "ExpressionStatement",
																	"src": "4237:34:7"
																}
															]
														}
													},
													{
														"body": {
															"id": 2730,
															"nodeType": "Block",
															"src": "4375:391:7",
															"statements": [
																{
																	"expression": {
																		"id": 2697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2693,
																			"name": "ownership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2661,
																			"src": "4393:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 2695,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2680,
																					"src": "4418:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2694,
																				"name": "_ownershipAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1033,
																				"src": "4405:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2276_memory_ptr_$",
																					"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
																				}
																			},
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4405:15:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"src": "4393:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																			"typeString": "struct IERC721A.TokenOwnership memory"
																		}
																	},
																	"id": 2698,
																	"nodeType": "ExpressionStatement",
																	"src": "4393:27:7"
																},
																{
																	"condition": {
																		"expression": {
																			"id": 2699,
																			"name": "ownership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2661,
																			"src": "4442:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 2700,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "burned",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2273,
																		"src": "4442:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2703,
																	"nodeType": "IfStatement",
																	"src": "4438:71:7",
																	"trueBody": {
																		"id": 2702,
																		"nodeType": "Block",
																		"src": "4460:49:7",
																		"statements": [
																			{
																				"id": 2701,
																				"nodeType": "Continue",
																				"src": "4482:8:7"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2704,
																				"name": "ownership",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2661,
																				"src": "4530:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership memory"
																				}
																			},
																			"id": 2705,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "addr",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2269,
																			"src": "4530:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2708,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4556:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4548:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2706,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4548:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4548:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "4530:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2717,
																	"nodeType": "IfStatement",
																	"src": "4526:109:7",
																	"trueBody": {
																		"id": 2716,
																		"nodeType": "Block",
																		"src": "4560:75:7",
																		"statements": [
																			{
																				"expression": {
																					"id": 2714,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2711,
																						"name": "currOwnershipAddr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2667,
																						"src": "4582:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 2712,
																							"name": "ownership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2661,
																							"src": "4602:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 2713,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2269,
																						"src": "4602:14:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "4582:34:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2715,
																				"nodeType": "ExpressionStatement",
																				"src": "4582:34:7"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2718,
																			"name": "currOwnershipAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2667,
																			"src": "4656:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2719,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2564,
																			"src": "4677:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "4656:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2729,
																	"nodeType": "IfStatement",
																	"src": "4652:100:7",
																	"trueBody": {
																		"id": 2728,
																		"nodeType": "Block",
																		"src": "4684:68:7",
																		"statements": [
																			{
																				"expression": {
																					"id": 2726,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"id": 2721,
																							"name": "tokenIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2645,
																							"src": "4706:8:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 2724,
																						"indexExpression": {
																							"id": 2723,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "4715:13:7",
																							"subExpression": {
																								"id": 2722,
																								"name": "tokenIdsIdx",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2583,
																								"src": "4715:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "4706:23:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2725,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2680,
																						"src": "4732:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4706:27:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2727,
																				"nodeType": "ExpressionStatement",
																				"src": "4706:27:7"
																			}
																		]
																	}
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2683,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2680,
																	"src": "4323:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2684,
																	"name": "stop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2568,
																	"src": "4328:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4323:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2686,
																	"name": "tokenIdsIdx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2583,
																	"src": "4336:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2687,
																	"name": "tokenIdsMaxLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "4351:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4336:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4323:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2731,
														"initializationExpression": {
															"assignments": [
																2680
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2680,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "4312:1:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2731,
																	"src": "4304:9:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2679,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4304:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2682,
															"initialValue": {
																"id": 2681,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "4316:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4304:17:7"
														},
														"loopExpression": {
															"expression": {
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "4370:3:7",
																"subExpression": {
																	"id": 2690,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2680,
																	"src": "4372:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2692,
															"nodeType": "ExpressionStatement",
															"src": "4370:3:7"
														},
														"nodeType": "ForStatement",
														"src": "4299:467:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4830:61:7",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "tokenIds",
																				"nodeType": "YulIdentifier",
																				"src": "4855:8:7"
																			},
																			{
																				"name": "tokenIdsIdx",
																				"nodeType": "YulIdentifier",
																				"src": "4865:11:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4848:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4848:29:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4848:29:7"
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2645,
																"isOffset": false,
																"isSlot": false,
																"src": "4855:8:7",
																"valueSize": 1
															},
															{
																"declaration": 2583,
																"isOffset": false,
																"isSlot": false,
																"src": "4865:11:7",
																"valueSize": 1
															}
														],
														"id": 2732,
														"nodeType": "InlineAssembly",
														"src": "4821:70:7"
													},
													{
														"expression": {
															"id": 2733,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2645,
															"src": "4911:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"functionReturnParameters": 2574,
														"id": 2734,
														"nodeType": "Return",
														"src": "4904:15:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2562,
										"nodeType": "StructuredDocumentation",
										"src": "2120:365:7",
										"text": " @dev Returns an array of token IDs owned by `owner`,\n in the range [`start`, `stop`)\n (i.e. `start <= tokenId < stop`).\n This function allows for tokens to be queried if the collection\n grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n Requirements:\n - `start` < `stop`"
									},
									"functionSelector": "99a2557a",
									"id": 2737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwnerIn",
									"nameLocation": "2499:15:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2570,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2603:8:7"
									},
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2532:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "2524:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "2555:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "2547:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "stop",
												"nameLocation": "2578:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "2570:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2514:74:7"
									},
									"returnParameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "2621:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2571,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2621:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2572,
													"nodeType": "ArrayTypeName",
													"src": "2621:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2620:18:7"
									},
									"scope": 2829,
									"src": "2490:2446:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2893
									],
									"body": {
										"id": 2827,
										"nodeType": "Block",
										"src": "5461:783:7",
										"statements": [
											{
												"id": 2826,
												"nodeType": "UncheckedBlock",
												"src": "5471:767:7",
												"statements": [
													{
														"assignments": [
															2748
														],
														"declarations": [
															{
																"constant": false,
																"id": 2748,
																"mutability": "mutable",
																"name": "tokenIdsIdx",
																"nameLocation": "5503:11:7",
																"nodeType": "VariableDeclaration",
																"scope": 2826,
																"src": "5495:19:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2747,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5495:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2749,
														"nodeType": "VariableDeclarationStatement",
														"src": "5495:19:7"
													},
													{
														"assignments": [
															2751
														],
														"declarations": [
															{
																"constant": false,
																"id": 2751,
																"mutability": "mutable",
																"name": "currOwnershipAddr",
																"nameLocation": "5536:17:7",
																"nodeType": "VariableDeclaration",
																"scope": 2826,
																"src": "5528:25:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 2750,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5528:7:7",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2752,
														"nodeType": "VariableDeclarationStatement",
														"src": "5528:25:7"
													},
													{
														"assignments": [
															2754
														],
														"declarations": [
															{
																"constant": false,
																"id": 2754,
																"mutability": "mutable",
																"name": "tokenIdsLength",
																"nameLocation": "5575:14:7",
																"nodeType": "VariableDeclaration",
																"scope": 2826,
																"src": "5567:22:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2753,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5567:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2758,
														"initialValue": {
															"arguments": [
																{
																	"id": 2756,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2740,
																	"src": "5602:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2755,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "5592:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5592:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5567:41:7"
													},
													{
														"assignments": [
															2763
														],
														"declarations": [
															{
																"constant": false,
																"id": 2763,
																"mutability": "mutable",
																"name": "tokenIds",
																"nameLocation": "5639:8:7",
																"nodeType": "VariableDeclaration",
																"scope": 2826,
																"src": "5622:25:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[]"
																},
																"typeName": {
																	"baseType": {
																		"id": 2761,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5622:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2762,
																	"nodeType": "ArrayTypeName",
																	"src": "5622:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2769,
														"initialValue": {
															"arguments": [
																{
																	"id": 2767,
																	"name": "tokenIdsLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2754,
																	"src": "5664:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5650:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2764,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5654:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2765,
																	"nodeType": "ArrayTypeName",
																	"src": "5654:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5650:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5622:57:7"
													},
													{
														"assignments": [
															2772
														],
														"declarations": [
															{
																"constant": false,
																"id": 2772,
																"mutability": "mutable",
																"name": "ownership",
																"nameLocation": "5715:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 2826,
																"src": "5693:31:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2771,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2770,
																		"name": "TokenOwnership",
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2276,
																		"src": "5693:14:7"
																	},
																	"referencedDeclaration": 2276,
																	"src": "5693:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2276_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2773,
														"nodeType": "VariableDeclarationStatement",
														"src": "5693:31:7"
													},
													{
														"body": {
															"id": 2822,
															"nodeType": "Block",
															"src": "5808:391:7",
															"statements": [
																{
																	"expression": {
																		"id": 2789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2785,
																			"name": "ownership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "5826:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 2787,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2775,
																					"src": "5851:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2786,
																				"name": "_ownershipAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1033,
																				"src": "5838:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2276_memory_ptr_$",
																					"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
																				}
																			},
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5838:15:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"src": "5826:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																			"typeString": "struct IERC721A.TokenOwnership memory"
																		}
																	},
																	"id": 2790,
																	"nodeType": "ExpressionStatement",
																	"src": "5826:27:7"
																},
																{
																	"condition": {
																		"expression": {
																			"id": 2791,
																			"name": "ownership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "5875:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 2792,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "burned",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2273,
																		"src": "5875:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2795,
																	"nodeType": "IfStatement",
																	"src": "5871:71:7",
																	"trueBody": {
																		"id": 2794,
																		"nodeType": "Block",
																		"src": "5893:49:7",
																		"statements": [
																			{
																				"id": 2793,
																				"nodeType": "Continue",
																				"src": "5915:8:7"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2796,
																				"name": "ownership",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2772,
																				"src": "5963:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership memory"
																				}
																			},
																			"id": 2797,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "addr",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2269,
																			"src": "5963:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2800,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5989:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5981:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2798,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5981:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5981:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5963:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2809,
																	"nodeType": "IfStatement",
																	"src": "5959:109:7",
																	"trueBody": {
																		"id": 2808,
																		"nodeType": "Block",
																		"src": "5993:75:7",
																		"statements": [
																			{
																				"expression": {
																					"id": 2806,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2803,
																						"name": "currOwnershipAddr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2751,
																						"src": "6015:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 2804,
																							"name": "ownership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2772,
																							"src": "6035:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 2805,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2269,
																						"src": "6035:14:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "6015:34:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2807,
																				"nodeType": "ExpressionStatement",
																				"src": "6015:34:7"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2810,
																			"name": "currOwnershipAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2751,
																			"src": "6089:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2811,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2740,
																			"src": "6110:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6089:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2821,
																	"nodeType": "IfStatement",
																	"src": "6085:100:7",
																	"trueBody": {
																		"id": 2820,
																		"nodeType": "Block",
																		"src": "6117:68:7",
																		"statements": [
																			{
																				"expression": {
																					"id": 2818,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"id": 2813,
																							"name": "tokenIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2763,
																							"src": "6139:8:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 2816,
																						"indexExpression": {
																							"id": 2815,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "6148:13:7",
																							"subExpression": {
																								"id": 2814,
																								"name": "tokenIdsIdx",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2748,
																								"src": "6148:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "6139:23:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2817,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2775,
																						"src": "6165:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6139:27:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2819,
																				"nodeType": "ExpressionStatement",
																				"src": "6139:27:7"
																			}
																		]
																	}
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2779,
																"name": "tokenIdsIdx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2748,
																"src": "5772:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2780,
																"name": "tokenIdsLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2754,
																"src": "5787:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5772:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2823,
														"initializationExpression": {
															"assignments": [
																2775
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2775,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "5751:1:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2823,
																	"src": "5743:9:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2774,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5743:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2778,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2776,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "5755:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5755:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5743:27:7"
														},
														"loopExpression": {
															"expression": {
																"id": 2783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "5803:3:7",
																"subExpression": {
																	"id": 2782,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2775,
																	"src": "5805:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2784,
															"nodeType": "ExpressionStatement",
															"src": "5803:3:7"
														},
														"nodeType": "ForStatement",
														"src": "5738:461:7"
													},
													{
														"expression": {
															"id": 2824,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2763,
															"src": "6219:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"functionReturnParameters": 2746,
														"id": 2825,
														"nodeType": "Return",
														"src": "6212:15:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2738,
										"nodeType": "StructuredDocumentation",
										"src": "4942:426:7",
										"text": " @dev Returns an array of token IDs owned by `owner`.\n This function scans the ownership mapping and is O(totalSupply) in complexity.\n It is meant to be called off-chain.\n See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n multiple smaller scans if the collection is large enough to cause\n an out-of-gas error (10K pfp collections should be fine)."
									},
									"functionSelector": "8462151c",
									"id": 2828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwner",
									"nameLocation": "5382:13:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2742,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5425:8:7"
									},
									"parameters": {
										"id": 2741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5404:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2828,
												"src": "5396:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5396:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5395:15:7"
									},
									"returnParameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2828,
												"src": "5443:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2743,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5443:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2744,
													"nodeType": "ArrayTypeName",
													"src": "5443:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5442:18:7"
									},
									"scope": 2829,
									"src": "5373:871:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2830,
							"src": "264:5982:7",
							"usedErrors": [
								2228,
								2231,
								2234,
								2237,
								2240,
								2243,
								2246,
								2249,
								2252,
								2255,
								2258,
								2261,
								2264,
								2267,
								2851
							]
						}
					],
					"src": "84:6163:7"
				},
				"id": 7
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/extensions/IERC721ABurnable.sol",
					"exportedSymbols": {
						"IERC721A": [
							2431
						],
						"IERC721ABurnable": [
							2842
						]
					},
					"id": 2843,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2831,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:8"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "../IERC721A.sol",
							"id": 2832,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2843,
							"sourceUnit": 2432,
							"src": "109:25:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2834,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2431,
										"src": "234:8:8"
									},
									"id": 2835,
									"nodeType": "InheritanceSpecifier",
									"src": "234:8:8"
								}
							],
							"canonicalName": "IERC721ABurnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2833,
								"nodeType": "StructuredDocumentation",
								"src": "136:67:8",
								"text": " @dev Interface of an ERC721ABurnable compliant contract."
							},
							"fullyImplemented": false,
							"id": 2842,
							"linearizedBaseContracts": [
								2842,
								2431
							],
							"name": "IERC721ABurnable",
							"nameLocation": "214:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2836,
										"nodeType": "StructuredDocumentation",
										"src": "249:163:8",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 2841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "426:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "439:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "431:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:17:8"
									},
									"returnParameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:0:8"
									},
									"scope": 2842,
									"src": "417:40:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2843,
							"src": "204:255:8",
							"usedErrors": [
								2228,
								2231,
								2234,
								2237,
								2240,
								2243,
								2246,
								2249,
								2252,
								2255,
								2258,
								2261,
								2264,
								2267
							]
						}
					],
					"src": "84:376:8"
				},
				"id": 8
			},
			"erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/extensions/IERC721AQueryable.sol",
					"exportedSymbols": {
						"IERC721A": [
							2431
						],
						"IERC721AQueryable": [
							2894
						]
					},
					"id": 2895,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2844,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:9"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "../IERC721A.sol",
							"id": 2845,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2895,
							"sourceUnit": 2432,
							"src": "109:25:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2847,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2431,
										"src": "236:8:9"
									},
									"id": 2848,
									"nodeType": "InheritanceSpecifier",
									"src": "236:8:9"
								}
							],
							"canonicalName": "IERC721AQueryable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2846,
								"nodeType": "StructuredDocumentation",
								"src": "136:68:9",
								"text": " @dev Interface of an ERC721AQueryable compliant contract."
							},
							"fullyImplemented": false,
							"id": 2894,
							"linearizedBaseContracts": [
								2894,
								2431
							],
							"name": "IERC721AQueryable",
							"nameLocation": "215:17:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2849,
										"nodeType": "StructuredDocumentation",
										"src": "251:59:9",
										"text": " Invalid query range (`start` >= `stop`)."
									},
									"errorSelector": "32c1995a",
									"id": 2851,
									"name": "InvalidQueryRange",
									"nameLocation": "321:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:2:9"
									},
									"src": "315:26:9"
								},
								{
									"documentation": {
										"id": 2852,
										"nodeType": "StructuredDocumentation",
										"src": "347:599:9",
										"text": " @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n If the `tokenId` is out of bounds:\n   - `addr` = `address(0)`\n   - `startTimestamp` = `0`\n   - `burned` = `false`\n If the `tokenId` is burned:\n   - `addr` = `<Address of owner before token was burned>`\n   - `startTimestamp` = `<Timestamp when token was burned>`\n   - `burned = `true`\n Otherwise:\n   - `addr` = `<Address of owner>`\n   - `startTimestamp` = `<Timestamp of start of ownership>`\n   - `burned = `false`"
									},
									"functionSelector": "c23dc68f",
									"id": 2860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipOf",
									"nameLocation": "960:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "988:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "980:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:17:9"
									},
									"returnParameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "1020:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2276_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 2857,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2856,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2276,
														"src": "1020:14:9"
													},
													"referencedDeclaration": 2276,
													"src": "1020:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2276_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:23:9"
									},
									"scope": 2894,
									"src": "951:92:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2861,
										"nodeType": "StructuredDocumentation",
										"src": "1049:142:9",
										"text": " @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n See {ERC721AQueryable-explicitOwnershipOf}"
									},
									"functionSelector": "5bbb2177",
									"id": 2871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipsOf",
									"nameLocation": "1205:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "1243:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "1226:25:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2862,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1226:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2863,
													"nodeType": "ArrayTypeName",
													"src": "1226:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:27:9"
									},
									"returnParameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "1276:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2276_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership[]"
												},
												"typeName": {
													"baseType": {
														"id": 2867,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2866,
															"name": "TokenOwnership",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2276,
															"src": "1276:14:9"
														},
														"referencedDeclaration": 2276,
														"src": "1276:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2276_storage_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														}
													},
													"id": 2868,
													"nodeType": "ArrayTypeName",
													"src": "1276:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2276_storage_$dyn_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:25:9"
									},
									"scope": 2894,
									"src": "1196:105:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2872,
										"nodeType": "StructuredDocumentation",
										"src": "1307:365:9",
										"text": " @dev Returns an array of token IDs owned by `owner`,\n in the range [`start`, `stop`)\n (i.e. `start <= tokenId < stop`).\n This function allows for tokens to be queried if the collection\n grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n Requirements:\n - `start` < `stop`"
									},
									"functionSelector": "99a2557a",
									"id": 2884,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwnerIn",
									"nameLocation": "1686:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1719:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "1711:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1742:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "1734:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1734:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "stop",
												"nameLocation": "1765:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "1757:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1757:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1701:74:9"
									},
									"returnParameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "1799:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2880,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1799:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2881,
													"nodeType": "ArrayTypeName",
													"src": "1799:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:18:9"
									},
									"scope": 2894,
									"src": "1677:140:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2885,
										"nodeType": "StructuredDocumentation",
										"src": "1823:426:9",
										"text": " @dev Returns an array of token IDs owned by `owner`.\n This function scans the ownership mapping and is O(totalSupply) in complexity.\n It is meant to be called off-chain.\n See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n multiple smaller scans if the collection is large enough to cause\n an out-of-gas error (10K pfp collections should be fine)."
									},
									"functionSelector": "8462151c",
									"id": 2893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwner",
									"nameLocation": "2263:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2285:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2893,
												"src": "2277:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2277:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2276:15:9"
									},
									"returnParameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2893,
												"src": "2315:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2889,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2315:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2890,
													"nodeType": "ArrayTypeName",
													"src": "2315:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2314:18:9"
									},
									"scope": 2894,
									"src": "2254:79:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2895,
							"src": "205:2130:9",
							"usedErrors": [
								2228,
								2231,
								2234,
								2237,
								2240,
								2243,
								2246,
								2249,
								2252,
								2255,
								2258,
								2261,
								2264,
								2267,
								2851
							]
						}
					],
					"src": "84:2252:9"
				},
				"id": 9
			}
		}
	}
}