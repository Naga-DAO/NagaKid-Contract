{
	"id": "51e615746cd564b243eec69fe4113764",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC721A/MintNagaKids.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./INagaKid.sol\";\r\nimport \"./VerifySignature.sol\";\r\n\r\ncontract MintNagaKids is Ownable, ReentrancyGuard, VerifySignature {\r\n\r\n    bytes32 public constant WHITELIST_MINT_ROUND = keccak256(\"WHITELIST_MINT_ROUND\"); // 0x68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba\r\n    bytes32 public constant NAGA_HOLDER_MINT_ROUND = keccak256(\"NAGA_HOLDER_MINT_ROUND\"); // 0xb3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db3\r\n  \r\n    bytes32 public constant DEFAULT = 0x0000000000000000000000000000000000000000000000000000000000000000;\r\n    \r\n    bytes32 public constant WITHDRAW_ROLE = keccak256(\"WITHDRAW_ROLE\");\r\n\r\n    INagaKid public nagaKidContract;\r\n    bytes32 public currentMintRound;\r\n    bytes32 public merkleRoot;\r\n\r\n    bool public isPublicMintOpen = false;\r\n    bool public isPrivateMintOpen = false;\r\n\r\n    address public signer;\r\n\r\n    mapping(address => mapping(bytes32 => bool)) internal _isUserMinted;\r\n    mapping(address => mapping(bytes32 => uint256)) internal _userMintedAmount;\r\n    mapping(address => bool) internal _isPublicMinted;\r\n\r\n    // Events\r\n    event PrivateMinted(address indexed user, uint256 amount, uint256 timestamp);\r\n    event PublicMinted(address indexed user, uint256 amount, uint256 timestamp);\r\n    event NagaKidContractChanged(address nagaKidBefore, address nagaKidAfter);\r\n    event MerkleRootChanged(bytes32 merkleRootBefore, bytes32 merkleRootAfter);\r\n    event RoundChanged(bytes32 roundBefore, bytes32 roundAfter);\r\n    event SignerChanged(address signerBefore,address signerAfter);\r\n    event Withdraw(address to, uint256 balanceOFContract , uint256 timestamp);\r\n    event WithdrawCurrency(address to,address currency,uint256 balanceOfContract,uint256 timestamp);\r\n    event WithdrawNFT(address to,address NFT,uint256 tokenId, uint256 timestamp);\r\n    \r\n\r\n\r\n\r\n    constructor(INagaKid _nagaKidContract,address _signer, bytes32 _merkleRoot) {\r\n        \r\n        setNagaKidContract(_nagaKidContract);\r\n        setMerkleRoot(_merkleRoot);\r\n        setSigner(_signer);\r\n\r\n    }\r\n\r\n    function setPublicMint(bool _bool) public onlyOwner {\r\n        \r\n    }\r\n\r\n    function setNagaKidContract(INagaKid _nagaKid) public onlyOwner {\r\n        address nagaKidBefore = address(nagaKidContract);\r\n        nagaKidContract = _nagaKid;\r\n        address nagaKidAfter = address(_nagaKid);\r\n\r\n        emit NagaKidContractChanged(nagaKidBefore, nagaKidAfter);\r\n    }\r\n\r\n    function setRound(bytes32 _round) public onlyOwner {\r\n        bytes32 _roundBefore = currentMintRound;\r\n        currentMintRound = _round;\r\n\r\n        emit RoundChanged(_roundBefore, _round);\r\n    }\r\n\r\n    function setSigner(address _signer) public onlyOwner {\r\n        address _signerBefore = signer;\r\n        signer = _signer;\r\n\r\n        emit SignerChanged(_signerBefore, _signer);\r\n    }\r\n\r\n    function setMerkleRoot(bytes32 _merkleRoot) public onlyOwner {\r\n        bytes32 _merkleRootBefore = merkleRoot;\r\n        merkleRoot = _merkleRoot;\r\n\r\n        emit MerkleRootChanged(_merkleRootBefore, _merkleRoot);\r\n    }\r\n\r\n    function allowlistMint(bytes32[] calldata _proof, uint256 _amount, bytes32 _round) public payable nonReentrant {\r\n        require(isPrivateMintOpen == true,\"Private mint is not open.\");\r\n        require(_round != DEFAULT,\"Mint is not approved.\");\r\n        require(currentMintRound == _round, \"Contract are not in this minting round.\");\r\n        require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\");\r\n        require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\");\r\n        require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\");\r\n        require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\");\r\n\r\n        _isUserMinted[msg.sender][_round] = true;\r\n        _userMintedAmount[msg.sender][_round] += _amount;\r\n\r\n        nagaKidContract.safeMint(msg.sender,_amount);\r\n\r\n        emit PrivateMinted(msg.sender, _amount, block.timestamp);\r\n    }\r\n\r\n    function publicMint(bytes calldata _sig) public payable nonReentrant {\r\n\r\n        require(isPublicMintOpen == true, \"Public mint is not open.\");\r\n        require(tx.origin == msg.sender, \"haha Contract can't call me\");\r\n        require(isPublicMinted(msg.sender) != true, \"You are already minted.\");\r\n        // require(getTotalSupply() + 1 < 1111,\"Over Supply Amount\");\r\n        require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\");\r\n        require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\");\r\n\r\n        // publicMint User can get only 1 //\r\n        uint256 _amount = 1; \r\n\r\n        _isPublicMinted[msg.sender] = true;\r\n        nagaKidContract.safeMint(msg.sender,_amount);\r\n        \r\n        emit PublicMinted(msg.sender,_amount,block.timestamp);\r\n\r\n    }\r\n\r\n    function isPublicMinted(address _addr) public view returns(bool){\r\n        return _isPublicMinted[_addr];\r\n    }\r\n\r\n    function withdraw(address _to) public onlyOwner {\r\n        uint balanceOFContract = address(this).balance;\r\n        require(balanceOFContract > 0, \"Insufficient Balance\");\r\n        (bool status,) = _to.call{value: balanceOFContract }(\"\");\r\n        require(status);\r\n\r\n        emit Withdraw(_to, balanceOFContract ,block.timestamp);\r\n    }\r\n\r\n    function withdrawCurrency(address _to,address _currency) public onlyOwner {\r\n        uint balanceOfContract = IERC20(_currency).balanceOf(address(this));\r\n        require(balanceOfContract > 0, \"Insufficient Balance\");\r\n        IERC20(_currency).transfer(_to, balanceOfContract);\r\n        \r\n        emit WithdrawCurrency(_to,_currency,balanceOfContract,block.timestamp);\r\n    }\r\n\r\n    function withdrawNFT(address _to,address _NFT,uint256 _tokenId) public onlyOwner {\r\n        require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\");\r\n\r\n        IERC721(_NFT).safeTransferFrom(address(this), _to, _tokenId);\r\n        \r\n        emit WithdrawNFT(_to,_NFT,_tokenId,block.timestamp);\r\n    }\r\n\r\n    function isUserMinted(address _user,bytes32 _round) public view returns(bool) {\r\n        return _isUserMinted[_user][_round];\r\n    }\r\n\r\n    function userMintedAmount(address _user,bytes32 _round) public view returns(uint256) {\r\n        return _userMintedAmount[_user][_round];\r\n    }\r\n\r\n    function getTotalSupply() public view returns (uint256) {\r\n        return nagaKidContract.totalSupply();\r\n    }\r\n\r\n    function getMaxSupply() public view returns (uint256) {\r\n        return nagaKidContract.maxSupply();\r\n    }\r\n\r\n}\r\n"
			},
			"ERC721A/VerifySignature.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\ncontract VerifySignature {\r\n    \r\n    function getMessageHash(\r\n        address _user\r\n    ) public view returns (bytes32) {\r\n        return keccak256(abi.encodePacked(_user, address(this)));\r\n    }\r\n\r\n    function getEthSignedMessageHash(bytes32 _messageHash)\r\n        public\r\n        pure\r\n        returns (bytes32)\r\n    {\r\n        /*\r\n        Signature is produced by signing a keccak256 hash with the following format:\r\n        \"\\x19Ethereum Signed Message\\n\" + len(msg) + msg\r\n        */\r\n        return\r\n            keccak256(\r\n                abi.encodePacked(\r\n                    \"\\x19Ethereum Signed Message:\\n32\",\r\n                    _messageHash\r\n                )\r\n            );\r\n    }\r\n\r\n    function verify(\r\n        address _signer,\r\n        address _user,\r\n        bytes memory signature\r\n    ) public view returns (bool) {\r\n        bytes32 messageHash = getMessageHash(_user);\r\n        bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash);\r\n\r\n        return recoverSigner(ethSignedMessageHash, signature) == _signer;\r\n    }\r\n\r\n    function recoverSigner(\r\n        bytes32 _ethSignedMessageHash,\r\n        bytes memory _signature\r\n    ) public pure returns (address) {\r\n        (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature);\r\n\r\n        return ecrecover(_ethSignedMessageHash, v, r, s);\r\n    }\r\n\r\n    function splitSignature(bytes memory sig)\r\n        public\r\n        pure\r\n        returns (\r\n            bytes32 r,\r\n            bytes32 s,\r\n            uint8 v\r\n        )\r\n    {\r\n        require(sig.length == 65, \"invalid signature length\");\r\n\r\n        assembly {\r\n            /*\r\n            First 32 bytes stores the length of the signature\r\n\r\n            add(sig, 32) = pointer of sig + 32\r\n            effectively, skips first 32 bytes of signature\r\n\r\n            mload(p) loads next 32 bytes starting at the memory address p into memory\r\n            */\r\n\r\n            // first 32 bytes, after the length prefix\r\n            r := mload(add(sig, 32))\r\n            // second 32 bytes\r\n            s := mload(add(sig, 64))\r\n            // final byte (first byte of the next 32 bytes)\r\n            v := byte(0, mload(add(sig, 96)))\r\n        }\r\n\r\n        // implicitly return (r, s, v)\r\n    }\r\n}"
			},
			"ERC721A/INagaKid.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\nimport \"erc721a/contracts/IERC721A.sol\";\r\nimport \"erc721a/contracts/extensions/IERC721ABurnable.sol\";\r\nimport \"erc721a/contracts/extensions/IERC721AQueryable.sol\";\r\n\r\n\r\ninterface INagaKid is IERC721A,IERC721AQueryable {\r\n\r\n    function maxSupply() external view returns (uint256);\r\n    function isMinter(address minter) external view returns(bool);\r\n    function safeMint(address to,uint amount) external;\r\n    \r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Trees proofs.\n *\n * The proofs can be generated using the JavaScript library\n * https://github.com/miguelmota/merkletreejs[merkletreejs].\n * Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n *\n * See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            bytes32 proofElement = proof[i];\n            if (computedHash <= proofElement) {\n                // Hash(current computed hash + current element of the proof)\n                computedHash = _efficientHash(computedHash, proofElement);\n            } else {\n                // Hash(current element of the proof + current computed hash)\n                computedHash = _efficientHash(proofElement, computedHash);\n            }\n        }\n        return computedHash;\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of an ERC721AQueryable compliant contract.\n */\ninterface IERC721AQueryable is IERC721A {\n    /**\n     * Invalid query range (`start` >= `stop`).\n     */\n    error InvalidQueryRange();\n\n    /**\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n     *\n     * If the `tokenId` is out of bounds:\n     *   - `addr` = `address(0)`\n     *   - `startTimestamp` = `0`\n     *   - `burned` = `false`\n     *\n     * If the `tokenId` is burned:\n     *   - `addr` = `<Address of owner before token was burned>`\n     *   - `startTimestamp` = `<Timestamp when token was burned>`\n     *   - `burned = `true`\n     *\n     * Otherwise:\n     *   - `addr` = `<Address of owner>`\n     *   - `startTimestamp` = `<Timestamp of start of ownership>`\n     *   - `burned = `false`\n     */\n    function explicitOwnershipOf(uint256 tokenId) external view returns (TokenOwnership memory);\n\n    /**\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n     * See {ERC721AQueryable-explicitOwnershipOf}\n     */\n    function explicitOwnershipsOf(uint256[] memory tokenIds) external view returns (TokenOwnership[] memory);\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`,\n     * in the range [`start`, `stop`)\n     * (i.e. `start <= tokenId < stop`).\n     *\n     * This function allows for tokens to be queried if the collection\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n     *\n     * Requirements:\n     *\n     * - `start` < `stop`\n     */\n    function tokensOfOwnerIn(\n        address owner,\n        uint256 start,\n        uint256 stop\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`.\n     *\n     * This function scans the ownership mapping and is O(totalSupply) in complexity.\n     * It is meant to be called off-chain.\n     *\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n     * multiple smaller scans if the collection is large enough to cause\n     * an out-of-gas error (10K pfp collections should be fine).\n     */\n    function tokensOfOwner(address owner) external view returns (uint256[] memory);\n}\n"
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of an ERC721ABurnable compliant contract.\n */\ninterface IERC721ABurnable is IERC721A {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) external;\n}\n"
			},
			"erc721a/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of an ERC721A compliant contract.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * The caller cannot approve to their own address.\n     */\n    error ApproveToCaller();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set through `_extraData`.\n        uint24 extraData;\n    }\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     *\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // ==============================\n    //            IERC165\n    // ==============================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // ==============================\n    //            IERC721\n    // ==============================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // ==============================\n    //        IERC721Metadata\n    // ==============================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // ==============================\n    //            IERC2309\n    // ==============================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n     * as defined in the ERC2309 standard. See `_mintERC2309` for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 115,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"MerkleProof": {
					"abi": [],
					"devdoc": {
						"details": "These functions deal with verification of Merkle Trees proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":800:2577  library MerkleProof {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":800:2577  library MerkleProof {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 CALLDATASIZE PUSH9 0xFA5FA11D3D3DD24084 PUSH4 0x979970C2 PUSH28 0xE388D0F7DF26A4A92E9B7B8C470464736F6C634300080F0033000000 ",
							"sourceMap": "800:1777:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;800:1777:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 CALLDATASIZE PUSH9 0xFA5FA11D3D3DD24084 PUSH4 0x979970C2 PUSH28 0xE388D0F7DF26A4A92E9B7B8C470464736F6C634300080F0033000000 ",
							"sourceMap": "800:1777:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_efficientHash(bytes32,bytes32)": "infinite",
								"processProof(bytes32[] memory,bytes32)": "infinite",
								"verify(bytes32[] memory,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
									".code": [
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ERC721A/INagaKid.sol",
								"ERC721A/MintNagaKids.sol",
								"ERC721A/VerifySignature.sol",
								"erc721a/contracts/IERC721A.sol",
								"erc721a/contracts/extensions/IERC721ABurnable.sol",
								"erc721a/contracts/extensions/IERC721AQueryable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Trees proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xaaa504ac17eb0298dcdf5733ce24021b4914f035b97f4400b92827341d3facb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aa68fa19422863cc91d23b5896917dbe79175ed47b591148aaeb3e98cb49752\",\"dweb:/ipfs/QmeY64vTRbGhdXcytRKusfJsAfNF4aqr9e1SGBGdCYvW2j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC721A/INagaKid.sol": {
				"INagaKid": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"name": "isMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`"
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"explicitOwnershipOf(uint256)": "c23dc68f",
							"explicitOwnershipsOf(uint256[])": "5bbb2177",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isMinter(address)": "aa271e1a",
							"maxSupply()": "d5abeb01",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeMint(address,uint256)": "a1448194",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"tokensOfOwner(address)": "8462151c",
							"tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721A/INagaKid.sol\":\"INagaKid\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC721A/INagaKid.sol\":{\"keccak256\":\"0x6d40b0cc478b970043e5567d209eda8b52325f1d271022e638f43e4aefb4e595\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c6f40836e74cc2739a624d11dd24565c4b63fcbe5a06481566e73c1512dfe63\",\"dweb:/ipfs/QmbJKRZNVHk55PV6fEjbE5kgNGLaTJzu8eAvwk2derkhnq\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]},\"erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x55e6863d273b676d65797fee7aac1b520848a0e31c0dd2e5a29887457043b7a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8477b7c9788e36787f79ef9b1580c46bdadc13da4c8ef85ce82d42a754743\",\"dweb:/ipfs/QmQvqKtF8YyJKqpEiNh1KkeC1Q5JmvEkQmP2ZCPYSW72BS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC721A/MintNagaKids.sol": {
				"MintNagaKids": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract INagaKid",
									"name": "_nagaKidContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_merkleRoot",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "merkleRootBefore",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "merkleRootAfter",
									"type": "bytes32"
								}
							],
							"name": "MerkleRootChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "nagaKidBefore",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "nagaKidAfter",
									"type": "address"
								}
							],
							"name": "NagaKidContractChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "PrivateMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "PublicMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "roundBefore",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "roundAfter",
									"type": "bytes32"
								}
							],
							"name": "RoundChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "signerBefore",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "signerAfter",
									"type": "address"
								}
							],
							"name": "SignerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "balanceOFContract",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "balanceOfContract",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "WithdrawCurrency",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "NFT",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "WithdrawNFT",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NAGA_HOLDER_MINT_ROUND",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WHITELIST_MINT_ROUND",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WITHDRAW_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "_proof",
									"type": "bytes32[]"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_round",
									"type": "bytes32"
								}
							],
							"name": "allowlistMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMintRound",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_messageHash",
									"type": "bytes32"
								}
							],
							"name": "getEthSignedMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPrivateMintOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPublicMintOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isPublicMinted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_round",
									"type": "bytes32"
								}
							],
							"name": "isUserMinted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "merkleRoot",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nagaKidContract",
							"outputs": [
								{
									"internalType": "contract INagaKid",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_sig",
									"type": "bytes"
								}
							],
							"name": "publicMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_ethSignedMessageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "recoverSigner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_merkleRoot",
									"type": "bytes32"
								}
							],
							"name": "setMerkleRoot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract INagaKid",
									"name": "_nagaKid",
									"type": "address"
								}
							],
							"name": "setNagaKidContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_bool",
									"type": "bool"
								}
							],
							"name": "setPublicMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_round",
									"type": "bytes32"
								}
							],
							"name": "setRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								}
							],
							"name": "setSigner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "splitSignature",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_round",
									"type": "bytes32"
								}
							],
							"name": "userMintedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_currency",
									"type": "address"
								}
							],
							"name": "withdrawCurrency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_NFT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "withdrawNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC721A/MintNagaKids.sol\":428:6974  contract MintNagaKids is Ownable, ReentrancyGuard, VerifySignature {... */\n  mstore(0x40, 0x80)\n    /* \"ERC721A/MintNagaKids.sol\":1124:1160  bool public isPublicMintOpen = false */\n  0x05\n  dup1\n  sload\n  not(0xffff)\n    /* \"ERC721A/MintNagaKids.sol\":1167:1204  bool public isPrivateMintOpen = false */\n  and\n  swap1\n  sstore\n    /* \"ERC721A/MintNagaKids.sol\":2208:2417  constructor(INagaKid _nagaKidContract,address _signer, bytes32 _merkleRoot) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"ERC721A/MintNagaKids.sol\":2305:2341  setNagaKidContract(_nagaKidContract) */\n  tag_14\n    /* \"ERC721A/MintNagaKids.sol\":2324:2340  _nagaKidContract */\n  dup4\n    /* \"ERC721A/MintNagaKids.sol\":2305:2323  setNagaKidContract */\n  tag_15\n    /* \"ERC721A/MintNagaKids.sol\":2305:2341  setNagaKidContract(_nagaKidContract) */\n  jump\t// in\ntag_14:\n    /* \"ERC721A/MintNagaKids.sol\":2352:2378  setMerkleRoot(_merkleRoot) */\n  tag_16\n    /* \"ERC721A/MintNagaKids.sol\":2366:2377  _merkleRoot */\n  dup2\n    /* \"ERC721A/MintNagaKids.sol\":2352:2365  setMerkleRoot */\n  tag_17\n    /* \"ERC721A/MintNagaKids.sol\":2352:2378  setMerkleRoot(_merkleRoot) */\n  jump\t// in\ntag_16:\n    /* \"ERC721A/MintNagaKids.sol\":2389:2407  setSigner(_signer) */\n  tag_18\n    /* \"ERC721A/MintNagaKids.sol\":2399:2406  _signer */\n  dup3\n    /* \"ERC721A/MintNagaKids.sol\":2389:2398  setSigner */\n  tag_19\n    /* \"ERC721A/MintNagaKids.sol\":2389:2407  setSigner(_signer) */\n  jump\t// in\ntag_18:\n    /* \"ERC721A/MintNagaKids.sol\":2208:2417  constructor(INagaKid _nagaKidContract,address _signer, bytes32 _merkleRoot) {... */\n  pop\n  pop\n  pop\n    /* \"ERC721A/MintNagaKids.sol\":428:6974  contract MintNagaKids is Ownable, ReentrancyGuard, VerifySignature {... */\n  jump(tag_50)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"ERC721A/MintNagaKids.sol\":2503:2791  function setNagaKidContract(INagaKid _nagaKid) public onlyOwner {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_27\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":849:851   */\n  0x20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":831:852   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":868:886   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":861:891   */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"#utility.yul\":907:925   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":900:962   */\n  mstore\n    /* \"#utility.yul\":979:997   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\ntag_28:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_27:\n    /* \"ERC721A/MintNagaKids.sol\":2610:2625  nagaKidContract */\n  0x02\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC721A/MintNagaKids.sol\":2637:2663  nagaKidContract = _nagaKid */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"ERC721A/MintNagaKids.sol\":2732:2783  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n  0x40\n  dup1\n  mload\n    /* \"ERC721A/MintNagaKids.sol\":2610:2625  nagaKidContract */\n  swap2\n  swap1\n  swap3\n  and\n    /* \"#utility.yul\":1220:1254   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":1285:1287   */\n  0x20\n    /* \"#utility.yul\":1270:1288   */\n  dup3\n  add\n    /* \"#utility.yul\":1263:1306   */\n  swap4\n  swap1\n  swap4\n  mstore\n    /* \"ERC721A/MintNagaKids.sol\":2637:2663  nagaKidContract = _nagaKid */\n  dup4\n  swap2\n    /* \"ERC721A/MintNagaKids.sol\":2732:2783  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n  0xabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d973\n  swap2\n    /* \"#utility.yul\":1155:1173   */\n  add\n    /* \"ERC721A/MintNagaKids.sol\":2732:2783  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"ERC721A/MintNagaKids.sol\":2567:2791  {... */\n  pop\n  pop\n    /* \"ERC721A/MintNagaKids.sol\":2503:2791  function setNagaKidContract(INagaKid _nagaKid) public onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"ERC721A/MintNagaKids.sol\":3196:3416  function setMerkleRoot(bytes32 _merkleRoot) public onlyOwner {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_36\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":849:851   */\n  0x20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":831:852   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":868:886   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":861:891   */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"#utility.yul\":907:925   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":900:962   */\n  mstore\n    /* \"#utility.yul\":979:997   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_28\n    /* \"#utility.yul\":647:1003   */\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\ntag_36:\n    /* \"ERC721A/MintNagaKids.sol\":3296:3306  merkleRoot */\n  0x04\n  dup1\n  sload\n    /* \"ERC721A/MintNagaKids.sol\":3317:3341  merkleRoot = _merkleRoot */\n  swap1\n  dup3\n  swap1\n  sstore\n    /* \"ERC721A/MintNagaKids.sol\":3359:3408  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":1491:1516   */\n  dup3\n  dup2\n  mstore\n    /* \"#utility.yul\":1547:1549   */\n  0x20\n    /* \"#utility.yul\":1532:1550   */\n  dup2\n  add\n    /* \"#utility.yul\":1525:1559   */\n  dup5\n  swap1\n  mstore\n    /* \"ERC721A/MintNagaKids.sol\":3359:3408  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n  0x123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe\n  swap2\n    /* \"#utility.yul\":1464:1482   */\n  add\n    /* \"ERC721A/MintNagaKids.sol\":3359:3408  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"ERC721A/MintNagaKids.sol\":3257:3416  {... */\n  pop\n    /* \"ERC721A/MintNagaKids.sol\":3196:3416  function setMerkleRoot(bytes32 _merkleRoot) public onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"ERC721A/MintNagaKids.sol\":3004:3188  function setSigner(address _signer) public onlyOwner {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_44\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":849:851   */\n  0x20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":831:852   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":868:886   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":861:891   */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"#utility.yul\":907:925   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":900:962   */\n  mstore\n    /* \"#utility.yul\":979:997   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_28\n    /* \"#utility.yul\":647:1003   */\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\ntag_44:\n    /* \"ERC721A/MintNagaKids.sol\":3092:3098  signer */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC721A/MintNagaKids.sol\":3109:3125  signer = _signer */\n  dup4\n  dup2\n  and\n    /* \"ERC721A/MintNagaKids.sol\":3092:3098  signer */\n  0x010000\n    /* \"ERC721A/MintNagaKids.sol\":3109:3125  signer = _signer */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xb0, 0x01), 0x010000))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"ERC721A/MintNagaKids.sol\":3143:3180  SignerChanged(_signerBefore, _signer) */\n  0x40\n  dup1\n  mload\n    /* \"ERC721A/MintNagaKids.sol\":3092:3098  signer */\n  swap5\n  swap1\n  swap4\n  div\n  swap1\n  swap2\n  and\n    /* \"#utility.yul\":1220:1254   */\n  dup1\n  dup5\n  mstore\n    /* \"#utility.yul\":1285:1287   */\n  0x20\n    /* \"#utility.yul\":1270:1288   */\n  dup5\n  add\n    /* \"#utility.yul\":1263:1306   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"ERC721A/MintNagaKids.sol\":3092:3098  signer */\n  swap2\n    /* \"ERC721A/MintNagaKids.sol\":3143:3180  SignerChanged(_signerBefore, _signer) */\n  0xeeb293e1f8f3a9db91ade748726387ed1352ca78f5430c5f06fe3d1e1ad50579\n  swap2\n    /* \"#utility.yul\":1155:1173   */\n  add\n    /* \"ERC721A/MintNagaKids.sol\":3143:3180  SignerChanged(_signerBefore, _signer) */\n  tag_39\n    /* \"#utility.yul\":1008:1312   */\n  jump\n    /* \"#utility.yul\":14:155   */\ntag_49:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":99:130   */\n  dup2\n  and\n    /* \"#utility.yul\":89:131   */\n  dup2\n  eq\n    /* \"#utility.yul\":79:149   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":145:146   */\n  0x00\n    /* \"#utility.yul\":142:143   */\n  dup1\n    /* \"#utility.yul\":135:147   */\n  revert\n    /* \"#utility.yul\":79:149   */\ntag_52:\n    /* \"#utility.yul\":14:155   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":160:642   */\ntag_3:\n    /* \"#utility.yul\":264:270   */\n  0x00\n    /* \"#utility.yul\":272:278   */\n  dup1\n    /* \"#utility.yul\":280:286   */\n  0x00\n    /* \"#utility.yul\":333:335   */\n  0x60\n    /* \"#utility.yul\":321:330   */\n  dup5\n    /* \"#utility.yul\":312:319   */\n  dup7\n    /* \"#utility.yul\":308:331   */\n  sub\n    /* \"#utility.yul\":304:336   */\n  slt\n    /* \"#utility.yul\":301:353   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":349:350   */\n  0x00\n    /* \"#utility.yul\":346:347   */\n  dup1\n    /* \"#utility.yul\":339:351   */\n  revert\n    /* \"#utility.yul\":301:353   */\ntag_54:\n    /* \"#utility.yul\":381:390   */\n  dup4\n    /* \"#utility.yul\":375:391   */\n  mload\n    /* \"#utility.yul\":400:441   */\n  tag_55\n    /* \"#utility.yul\":435:440   */\n  dup2\n    /* \"#utility.yul\":400:441   */\n  tag_49\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":510:512   */\n  0x20\n    /* \"#utility.yul\":495:513   */\n  dup6\n  add\n    /* \"#utility.yul\":489:514   */\n  mload\n    /* \"#utility.yul\":460:465   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":523:566   */\n  tag_56\n    /* \"#utility.yul\":489:514   */\n  dup2\n    /* \"#utility.yul\":523:566   */\n  tag_49\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":585:592   */\n  dup1\n    /* \"#utility.yul\":575:592   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":632:634   */\n  0x40\n    /* \"#utility.yul\":621:630   */\n  dup5\n    /* \"#utility.yul\":617:635   */\n  add\n    /* \"#utility.yul\":611:636   */\n  mload\n    /* \"#utility.yul\":601:636   */\n  swap1\n  pop\n    /* \"#utility.yul\":160:642   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1317:1565   */\ntag_50:\n    /* \"ERC721A/MintNagaKids.sol\":428:6974  contract MintNagaKids is Ownable, ReentrancyGuard, VerifySignature {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\nsub_0: assembly {\n        /* \"ERC721A/MintNagaKids.sol\":428:6974  contract MintNagaKids is Ownable, ReentrancyGuard, VerifySignature {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e6c8855\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xe02023a1\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xf500cdfc\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xf500cdfc\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf6b48e55\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xfa540801\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xff05fe4a\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xffdc6129\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0xe02023a1\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xef5fe79f\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf055c7a9\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0xbff863ec\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xbff863ec\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc4e41b22\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xde6892c8\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdf4e5881\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x9e6c8855\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa4435dfd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa7bb5803\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb5abafa1\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x51cff8d9\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x8407ecc4\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x8407ecc4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8907f3fa\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x97aba7f9\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x51cff8d9\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6c19e783\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7cb64759\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x24c37a85\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x24c37a85\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2eb4a7ab\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42920a46\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4c0f38c2\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x0a25dea9\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0e2d56cf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1f5ac1b2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x238ac933\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"ERC721A/MintNagaKids.sol\":826:926  bytes32 public constant DEFAULT = 0x0000000000000000000000000000000000000000000000000000000000000000 */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n        /* \"ERC721A/MintNagaKids.sol\":860:926  0x0000000000000000000000000000000000000000000000000000000000000000 */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":826:926  bytes32 public constant DEFAULT = 0x0000000000000000000000000000000000000000000000000000000000000000 */\n      dup2\n      jump\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":826:926  bytes32 public constant DEFAULT = 0x0000000000000000000000000000000000000000000000000000000000000000 */\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A/MintNagaKids.sol\":2425:2495  function setPublicMint(bool _bool) public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"ERC721A/VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_43\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":1213:1234  address public signer */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      sload(0x05)\n      tag_59\n      swap1\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_59:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1117:1149   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1099:1150   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1087:1089   */\n      0x20\n        /* \"#utility.yul\":1072:1090   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":1213:1234  address public signer */\n      tag_45\n        /* \"#utility.yul\":953:1156   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":661:745  bytes32 public constant NAGA_HOLDER_MINT_ROUND = keccak256(\"NAGA_HOLDER_MINT_ROUND\") */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_43\n        /* \"ERC721A/MintNagaKids.sol\":710:745  keccak256(\"NAGA_HOLDER_MINT_ROUND\") */\n      0xb3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db3\n        /* \"ERC721A/MintNagaKids.sol\":661:745  bytes32 public constant NAGA_HOLDER_MINT_ROUND = keccak256(\"NAGA_HOLDER_MINT_ROUND\") */\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":1090:1115  bytes32 public merkleRoot */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_43\n      sload(0x04)\n      dup2\n      jump\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n        /* \"#utility.yul\":2782:2796   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2775:2797   */\n      iszero\n        /* \"#utility.yul\":2757:2798   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2745:2747   */\n      0x20\n        /* \"#utility.yul\":2730:2748   */\n      add\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n      tag_45\n        /* \"#utility.yul\":2617:2804   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":6862:6969  function getMaxSupply() public view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_43\n      tag_80\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":5370:5708  function withdraw(address _to) public onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_48\n      tag_85\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":3004:3188  function setSigner(address _signer) public onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_48\n      tag_89\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_48\n      tag_93\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":3196:3416  function setMerkleRoot(bytes32 _merkleRoot) public onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_48\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":5716:6093  function withdrawCurrency(address _to,address _currency) public onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_48\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":1167:1204  bool public isPrivateMintOpen = false */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      sload(0x05)\n      tag_72\n      swap1\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_59)\n        /* \"ERC721A/VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_59\n      tag_114\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":2503:2791  function setNagaKidContract(INagaKid _nagaKid) public onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_48\n      tag_120\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_120:\n      tag_122\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":1124:1160  bool public isPublicMintOpen = false */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      sload(0x05)\n      tag_72\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_128\n      tag_129\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_129:\n      tag_131\n      jump\t// in\n    tag_128:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4753:4778   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":4809:4811   */\n      0x20\n        /* \"#utility.yul\":4794:4812   */\n      dup5\n      add\n        /* \"#utility.yul\":4787:4821   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4869:4873   */\n      0xff\n        /* \"#utility.yul\":4857:4874   */\n      and\n        /* \"#utility.yul\":4837:4855   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4830:4875   */\n      mstore\n        /* \"#utility.yul\":4741:4743   */\n      0x60\n        /* \"#utility.yul\":4726:4744   */\n      add\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      tag_45\n        /* \"#utility.yul\":4555:4881   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":6592:6735  function userMintedAmount(address _user,bytes32 _round) public view returns(uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_43\n      tag_136\n      calldatasize\n      0x04\n      tag_137\n      jump\t// in\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":6695:6719  _userMintedAmount[_user] */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"ERC721A/MintNagaKids.sol\":6668:6675  uint256 */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":6695:6719  _userMintedAmount[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6695:6712  _userMintedAmount */\n      0x07\n        /* \"ERC721A/MintNagaKids.sol\":6695:6719  _userMintedAmount[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":6695:6727  _userMintedAmount[_user][_round] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":6592:6735  function userMintedAmount(address _user,bytes32 _round) public view returns(uint256) {... */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":6101:6444  function withdrawNFT(address _to,address _NFT,uint256 _tokenId) public onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_48\n      tag_142\n      calldatasize\n      0x04\n      tag_143\n      jump\t// in\n    tag_142:\n      tag_144\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":6743:6854  function getTotalSupply() public view returns (uint256) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_43\n      tag_147\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":4427:5242  function publicMint(bytes calldata _sig) public payable nonReentrant {... */\n    tag_24:\n      tag_48\n      tag_150\n      calldatasize\n      0x04\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":1014:1045  INagaKid public nagaKidContract */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      sload(0x02)\n      tag_59\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":939:1005  bytes32 public constant WITHDRAW_ROLE = keccak256(\"WITHDRAW_ROLE\") */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_43\n        /* \"ERC721A/MintNagaKids.sol\":979:1005  keccak256(\"WITHDRAW_ROLE\") */\n      0x5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec\n        /* \"ERC721A/MintNagaKids.sol\":939:1005  bytes32 public constant WITHDRAW_ROLE = keccak256(\"WITHDRAW_ROLE\") */\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":1052:1083  bytes32 public currentMintRound */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      tag_43\n      sload(0x03)\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":5250:5362  function isPublicMinted(address _addr) public view returns(bool){... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_72\n      tag_168\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":5332:5354  _isPublicMinted[_addr] */\n      and\n        /* \"ERC721A/MintNagaKids.sol\":5309:5313  bool */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":5332:5354  _isPublicMinted[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5332:5347  _isPublicMinted */\n      0x08\n        /* \"ERC721A/MintNagaKids.sol\":5332:5354  _isPublicMinted[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":5250:5362  function isPublicMinted(address _addr) public view returns(bool){... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_48\n      tag_173\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_173:\n      tag_174\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":504:584  bytes32 public constant WHITELIST_MINT_ROUND = keccak256(\"WHITELIST_MINT_ROUND\") */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      tag_43\n        /* \"ERC721A/MintNagaKids.sol\":551:584  keccak256(\"WHITELIST_MINT_ROUND\") */\n      0x68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba\n        /* \"ERC721A/MintNagaKids.sol\":504:584  bytes32 public constant WHITELIST_MINT_ROUND = keccak256(\"WHITELIST_MINT_ROUND\") */\n      dup2\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3424:4419  function allowlistMint(bytes32[] calldata _proof, uint256 _amount, bytes32 _round) public payable nonReentrant {... */\n    tag_31:\n      tag_48\n      tag_180\n      calldatasize\n      0x04\n      tag_181\n      jump\t// in\n    tag_180:\n      tag_182\n      jump\t// in\n        /* \"ERC721A/VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      tag_43\n      tag_185\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_185:\n      tag_186\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":2799:2996  function setRound(bytes32 _round) public onlyOwner {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      pop\n      tag_48\n      tag_190\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_190:\n      tag_191\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":6452:6584  function isUserMinted(address _user,bytes32 _round) public view returns(bool) {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      tag_72\n      tag_194\n      calldatasize\n      0x04\n      tag_137\n      jump\t// in\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":6548:6568  _isUserMinted[_user] */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"ERC721A/MintNagaKids.sol\":6524:6528  bool */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":6548:6568  _isUserMinted[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6548:6561  _isUserMinted */\n      0x06\n        /* \"ERC721A/MintNagaKids.sol\":6548:6568  _isUserMinted[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":6548:6576  _isUserMinted[_user][_round] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":6452:6584  function isUserMinted(address _user,bytes32 _round) public view returns(bool) {... */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":2425:2495  function setPublicMint(bool _bool) public onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"ERC721A/MintNagaKids.sol\":2425:2495  function setPublicMint(bool _bool) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ERC721A/VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_56:\n        /* \"ERC721A/VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":7837:7839   */\n      0x60\n        /* \"#utility.yul\":7833:7848   */\n      dup4\n      dup2\n      shl\n        /* \"#utility.yul\":7829:7853   */\n      dup3\n      and\n        /* \"ERC721A/VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      0x20\n      dup5\n      add\n        /* \"#utility.yul\":7817:7854   */\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":244:248  this */\n      address\n        /* \"#utility.yul\":7888:7903   */\n      swap1\n      shl\n        /* \"#utility.yul\":7884:7908   */\n      and\n        /* \"#utility.yul\":7870:7882   */\n      0x34\n      dup3\n      add\n        /* \"#utility.yul\":7863:7909   */\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":175:182  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":7925:7937   */\n      0x48\n      add\n        /* \"ERC721A/VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n    tag_206:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":202:251  keccak256(abi.encodePacked(_user, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"ERC721A/VerifySignature.sol\":195:251  return keccak256(abi.encodePacked(_user, address(this))) */\n      swap1\n      pop\n        /* \"ERC721A/VerifySignature.sol\":99:259  function getMessageHash(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n    tag_75:\n        /* \"ERC721A/VerifySignature.sol\":896:900  bool */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":913:932  bytes32 messageHash */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":935:956  getMessageHash(_user) */\n      tag_209\n        /* \"ERC721A/VerifySignature.sol\":950:955  _user */\n      dup5\n        /* \"ERC721A/VerifySignature.sol\":935:949  getMessageHash */\n      tag_56\n        /* \"ERC721A/VerifySignature.sol\":935:956  getMessageHash(_user) */\n      jump\t// in\n    tag_209:\n        /* \"ERC721A/VerifySignature.sol\":913:956  bytes32 messageHash = getMessageHash(_user) */\n      swap1\n      pop\n        /* \"ERC721A/VerifySignature.sol\":967:995  bytes32 ethSignedMessageHash */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      tag_210\n        /* \"ERC721A/VerifySignature.sol\":1022:1033  messageHash */\n      dup3\n        /* \"ERC721A/VerifySignature.sol\":998:1021  getEthSignedMessageHash */\n      tag_186\n        /* \"ERC721A/VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      jump\t// in\n    tag_210:\n        /* \"ERC721A/VerifySignature.sol\":967:1034  bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash) */\n      swap1\n      pop\n        /* \"ERC721A/VerifySignature.sol\":1104:1111  _signer */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n        /* \"ERC721A/VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      tag_211\n        /* \"ERC721A/VerifySignature.sol\":1068:1088  ethSignedMessageHash */\n      dup3\n        /* \"ERC721A/VerifySignature.sol\":1090:1099  signature */\n      dup7\n        /* \"ERC721A/VerifySignature.sol\":1054:1067  recoverSigner */\n      tag_116\n        /* \"ERC721A/VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      jump\t// in\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n      eq\n      swap7\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":6862:6969  function getMaxSupply() public view returns (uint256) {... */\n    tag_80:\n        /* \"ERC721A/MintNagaKids.sol\":6934:6949  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":6934:6961  nagaKidContract.maxSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd5abeb01)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC721A/MintNagaKids.sol\":6907:6914  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":6934:6949  nagaKidContract */\n      and\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":6934:6959  nagaKidContract.maxSupply */\n      0xd5abeb01\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":6934:6961  nagaKidContract.maxSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ERC721A/MintNagaKids.sol\":6934:6949  nagaKidContract */\n      dup7\n        /* \"ERC721A/MintNagaKids.sol\":6934:6961  nagaKidContract.maxSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_214\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_214:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"ERC721A/MintNagaKids.sol\":6927:6961  return nagaKidContract.maxSupply() */\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":6862:6969  function getMaxSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":5370:5708  function withdraw(address _to) public onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_220:\n        /* \"ERC721A/MintNagaKids.sol\":5454:5475  address(this).balance */\n      selfbalance\n        /* \"ERC721A/MintNagaKids.sol\":5494:5515  balanceOFContract > 0 */\n      dup1\n        /* \"ERC721A/MintNagaKids.sol\":5486:5540  require(balanceOFContract > 0, \"Insufficient Balance\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8339:8341   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":5486:5540  require(balanceOFContract > 0, \"Insufficient Balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8321:8342   */\n      mstore\n        /* \"#utility.yul\":8378:8380   */\n      0x14\n        /* \"#utility.yul\":8358:8376   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8351:8381   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742042616c616e6365)\n        /* \"#utility.yul\":8397:8415   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8390:8440   */\n      mstore\n        /* \"#utility.yul\":8457:8475   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5486:5540  require(balanceOFContract > 0, \"Insufficient Balance\") */\n      tag_202\n        /* \"#utility.yul\":8137:8481   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":5486:5540  require(balanceOFContract > 0, \"Insufficient Balance\") */\n    tag_223:\n        /* \"ERC721A/MintNagaKids.sol\":5552:5563  bool status */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":5568:5571  _to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":5568:5576  _to.call */\n      and\n        /* \"ERC721A/MintNagaKids.sol\":5584:5601  balanceOFContract */\n      dup3\n        /* \"ERC721A/MintNagaKids.sol\":5568:5607  _to.call{value: balanceOFContract }(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_230\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_229)\n    tag_230:\n      0x60\n      swap2\n      pop\n    tag_229:\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5551:5607  (bool status,) = _to.call{value: balanceOFContract }(\"\") */\n      pop\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5626:5632  status */\n      dup1\n        /* \"ERC721A/MintNagaKids.sol\":5618:5633  require(status) */\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n        /* \"ERC721A/MintNagaKids.sol\":5651:5700  Withdraw(_to, balanceOFContract ,block.timestamp) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8916:8948   */\n      dup6\n      and\n        /* \"#utility.yul\":8898:8949   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8980:8982   */\n      0x20\n        /* \"#utility.yul\":8965:8983   */\n      dup2\n      add\n        /* \"#utility.yul\":8958:8992   */\n      dup5\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5684:5699  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":9008:9026   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":9001:9035   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5651:5700  Withdraw(_to, balanceOFContract ,block.timestamp) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n      swap1\n        /* \"#utility.yul\":8886:8888   */\n      0x60\n        /* \"#utility.yul\":8871:8889   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5651:5700  Withdraw(_to, balanceOFContract ,block.timestamp) */\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ERC721A/MintNagaKids.sol\":5418:5708  {... */\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5370:5708  function withdraw(address _to) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":3004:3188  function setSigner(address _signer) public onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_237:\n        /* \"ERC721A/MintNagaKids.sol\":3092:3098  signer */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":3109:3125  signer = _signer */\n      dup4\n      dup2\n      and\n        /* \"ERC721A/MintNagaKids.sol\":3092:3098  signer */\n      0x010000\n        /* \"ERC721A/MintNagaKids.sol\":3109:3125  signer = _signer */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xb0, 0x01), 0x010000))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":3143:3180  SignerChanged(_signerBefore, _signer) */\n      0x40\n      dup1\n      mload\n        /* \"ERC721A/MintNagaKids.sol\":3092:3098  signer */\n      swap5\n      swap1\n      swap4\n      div\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":9258:9292   */\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":9323:9325   */\n      0x20\n        /* \"#utility.yul\":9308:9326   */\n      dup5\n      add\n        /* \"#utility.yul\":9301:9344   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3092:3098  signer */\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":3143:3180  SignerChanged(_signerBefore, _signer) */\n      0xeeb293e1f8f3a9db91ade748726387ed1352ca78f5430c5f06fe3d1e1ad50579\n      swap2\n        /* \"#utility.yul\":9193:9211   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3143:3180  SignerChanged(_signerBefore, _signer) */\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ERC721A/MintNagaKids.sol\":3057:3188  {... */\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":3004:3188  function setSigner(address _signer) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_248\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":3196:3416  function setMerkleRoot(bytes32 _merkleRoot) public onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_253:\n        /* \"ERC721A/MintNagaKids.sol\":3296:3306  merkleRoot */\n      0x04\n      dup1\n      sload\n        /* \"ERC721A/MintNagaKids.sol\":3317:3341  merkleRoot = _merkleRoot */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":3359:3408  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9529:9554   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":9585:9587   */\n      0x20\n        /* \"#utility.yul\":9570:9588   */\n      dup2\n      add\n        /* \"#utility.yul\":9563:9597   */\n      dup5\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3359:3408  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n      0x123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe\n      swap2\n        /* \"#utility.yul\":9502:9520   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3359:3408  MerkleRootChanged(_merkleRootBefore, _merkleRoot) */\n      tag_240\n        /* \"#utility.yul\":9355:9603   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":5716:6093  function withdrawCurrency(address _to,address _currency) public onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_261:\n        /* \"ERC721A/MintNagaKids.sol\":5826:5868  IERC20(_currency).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5862:5866  this */\n      address\n        /* \"ERC721A/MintNagaKids.sol\":5826:5868  IERC20(_currency).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1099:1150   */\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5801:5823  uint balanceOfContract */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":5826:5853  IERC20(_currency).balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1072:1090   */\n      0x24\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5826:5868  IERC20(_currency).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_266\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_266:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_267\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_267:\n        /* \"ERC721A/MintNagaKids.sol\":5801:5868  uint balanceOfContract = IERC20(_currency).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5907:5908  0 */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":5887:5904  balanceOfContract */\n      dup2\n        /* \"ERC721A/MintNagaKids.sol\":5887:5908  balanceOfContract > 0 */\n      gt\n        /* \"ERC721A/MintNagaKids.sol\":5879:5933  require(balanceOfContract > 0, \"Insufficient Balance\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8339:8341   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":5879:5933  require(balanceOfContract > 0, \"Insufficient Balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8321:8342   */\n      mstore\n        /* \"#utility.yul\":8378:8380   */\n      0x14\n        /* \"#utility.yul\":8358:8376   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8351:8381   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742042616c616e6365)\n        /* \"#utility.yul\":8397:8415   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8390:8440   */\n      mstore\n        /* \"#utility.yul\":8457:8475   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5879:5933  require(balanceOfContract > 0, \"Insufficient Balance\") */\n      tag_202\n        /* \"#utility.yul\":8137:8481   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":5879:5933  require(balanceOfContract > 0, \"Insufficient Balance\") */\n    tag_268:\n        /* \"ERC721A/MintNagaKids.sol\":5944:5994  IERC20(_currency).transfer(_to, balanceOfContract) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9800:9832   */\n      dup5\n      dup2\n      and\n        /* \"ERC721A/MintNagaKids.sol\":5944:5994  IERC20(_currency).transfer(_to, balanceOfContract) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9782:9833   */\n      mstore\n        /* \"#utility.yul\":9849:9867   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9842:9876   */\n      dup4\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5944:5970  IERC20(_currency).transfer */\n      dup4\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":9755:9773   */\n      0x44\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5944:5994  IERC20(_currency).transfer(_to, balanceOfContract) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_273\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_273:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_274\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":6020:6085  WithdrawCurrency(_to,_currency,balanceOfContract,block.timestamp) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10424:10439   */\n      dup1\n      dup7\n      and\n        /* \"#utility.yul\":10406:10440   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10476:10491   */\n      dup5\n      and\n        /* \"#utility.yul\":10471:10473   */\n      0x20\n        /* \"#utility.yul\":10456:10474   */\n      dup3\n      add\n        /* \"#utility.yul\":10449:10492   */\n      mstore\n        /* \"#utility.yul\":10508:10526   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":10501:10535   */\n      dup3\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6069:6084  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":10566:10568   */\n      0x60\n        /* \"#utility.yul\":10551:10569   */\n      dup3\n      add\n        /* \"#utility.yul\":10544:10578   */\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6020:6085  WithdrawCurrency(_to,_currency,balanceOfContract,block.timestamp) */\n      0xb818a975f91276df8ba59329becbc23c793df0d503c19ac296c3c372a1fa0461\n      swap1\n        /* \"#utility.yul\":10355:10358   */\n      0x80\n        /* \"#utility.yul\":10340:10359   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":6020:6085  WithdrawCurrency(_to,_currency,balanceOfContract,block.timestamp) */\n      tag_232\n        /* \"#utility.yul\":10137:10584   */\n      jump\n        /* \"ERC721A/VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_116:\n        /* \"ERC721A/VerifySignature.sol\":1252:1259  address */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1273:1282  bytes32 r */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":1284:1293  bytes32 s */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1295:1302  uint8 v */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      tag_280\n        /* \"ERC721A/VerifySignature.sol\":1321:1331  _signature */\n      dup6\n        /* \"ERC721A/VerifySignature.sol\":1306:1320  splitSignature */\n      tag_131\n        /* \"ERC721A/VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      jump\t// in\n    tag_280:\n        /* \"ERC721A/VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x40\n      dup1\n      mload\n      0x00\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":10816:10841   */\n      dup12\n      swap1\n      mstore\n        /* \"#utility.yul\":10889:10893   */\n      0xff\n        /* \"#utility.yul\":10877:10894   */\n      dup4\n      and\n        /* \"#utility.yul\":10857:10875   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":10850:10895   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":10911:10929   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":10904:10938   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10954:10972   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":10947:10981   */\n      dup4\n      swap1\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":1272:1332  (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature) */\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n        /* \"ERC721A/VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":10788:10807   */\n      0xa0\n      add\n        /* \"ERC721A/VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_284:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap8\n        /* \"ERC721A/VerifySignature.sol\":1127:1401  function recoverSigner(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":2503:2791  function setNagaKidContract(INagaKid _nagaKid) public onlyOwner {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_288:\n        /* \"ERC721A/MintNagaKids.sol\":2610:2625  nagaKidContract */\n      0x02\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":2637:2663  nagaKidContract = _nagaKid */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":2732:2783  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n      0x40\n      dup1\n      mload\n        /* \"ERC721A/MintNagaKids.sol\":2610:2625  nagaKidContract */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":9258:9292   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9323:9325   */\n      0x20\n        /* \"#utility.yul\":9308:9326   */\n      dup3\n      add\n        /* \"#utility.yul\":9301:9344   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":2637:2663  nagaKidContract = _nagaKid */\n      dup4\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":2732:2783  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n      0xabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d973\n      swap2\n        /* \"#utility.yul\":9193:9211   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":2732:2783  NagaKidContractChanged(nagaKidBefore, nagaKidAfter) */\n      tag_232\n        /* \"#utility.yul\":9046:9350   */\n      jump\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_131:\n        /* \"ERC721A/VerifySignature.sol\":1513:1522  bytes32 r */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1537:1546  bytes32 s */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":1561:1568  uint8 v */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1604:1607  sig */\n      dup4\n        /* \"ERC721A/VerifySignature.sol\":1604:1614  sig.length */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":1618:1620  65 */\n      0x41\n        /* \"ERC721A/VerifySignature.sol\":1604:1620  sig.length == 65 */\n      eq\n        /* \"ERC721A/VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11194:11196   */\n      0x20\n        /* \"ERC721A/VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11176:11197   */\n      mstore\n        /* \"#utility.yul\":11233:11235   */\n      0x18\n        /* \"#utility.yul\":11213:11231   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11206:11236   */\n      mstore\n        /* \"#utility.yul\":11272:11298   */\n      0x696e76616c6964207369676e6174757265206c656e6774680000000000000000\n        /* \"#utility.yul\":11252:11270   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11245:11299   */\n      mstore\n        /* \"#utility.yul\":11316:11334   */\n      0x64\n      add\n        /* \"ERC721A/VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      tag_202\n        /* \"#utility.yul\":10992:11340   */\n      jump\n        /* \"ERC721A/VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n    tag_293:\n      pop\n      pop\n      pop\n        /* \"ERC721A/VerifySignature.sol\":2058:2060  32 */\n      0x20\n        /* \"ERC721A/VerifySignature.sol\":2049:2061  add(sig, 32) */\n      dup2\n      add\n        /* \"ERC721A/VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":2128:2130  64 */\n      0x40\n        /* \"ERC721A/VerifySignature.sol\":2119:2131  add(sig, 64) */\n      dup3\n      add\n        /* \"ERC721A/VerifySignature.sol\":2113:2132  mload(add(sig, 64)) */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":2235:2237  96 */\n      0x60\n        /* \"ERC721A/VerifySignature.sol\":2226:2238  add(sig, 96) */\n      swap1\n      swap3\n      add\n        /* \"ERC721A/VerifySignature.sol\":2220:2239  mload(add(sig, 96)) */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      swap1\n      swap3\n        /* \"ERC721A/VerifySignature.sol\":2217:2218  0 */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":2212:2240  byte(0, mload(add(sig, 96))) */\n      swap2\n      swap1\n      swap2\n      byte\n      swap1\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      jump\t// out\n        /* \"ERC721A/MintNagaKids.sol\":6101:6444  function withdrawNFT(address _to,address _NFT,uint256 _tokenId) public onlyOwner {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_300:\n        /* \"ERC721A/MintNagaKids.sol\":6201:6232  IERC721(_NFT).ownerOf(_tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6244:6248  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":6201:6222  IERC721(_NFT).ownerOf */\n      dup5\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"ERC721A/MintNagaKids.sol\":6201:6232  IERC721(_NFT).ownerOf(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_305\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_305:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_306\n      swap2\n      swap1\n      tag_307\n      jump\t// in\n    tag_306:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":6201:6249  IERC721(_NFT).ownerOf(_tokenId) == address(this) */\n      and\n      eq\n        /* \"ERC721A/MintNagaKids.sol\":6193:6291  require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11803:11805   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":6193:6291  require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11785:11806   */\n      mstore\n        /* \"#utility.yul\":11842:11844   */\n      0x25\n        /* \"#utility.yul\":11822:11840   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11815:11845   */\n      mstore\n        /* \"#utility.yul\":11881:11915   */\n      0x5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e\n        /* \"#utility.yul\":11861:11879   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11854:11916   */\n      mstore\n      shl(0xda, 0x1d1c9858dd)\n        /* \"#utility.yul\":11932:11950   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11925:11960   */\n      mstore\n        /* \"#utility.yul\":11977:11996   */\n      0x84\n      add\n        /* \"ERC721A/MintNagaKids.sol\":6193:6291  require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\") */\n      tag_202\n        /* \"#utility.yul\":11601:12002   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":6193:6291  require(IERC721(_NFT).ownerOf(_tokenId) == address(this), \"This tokenId is not owned by contract\") */\n    tag_308:\n        /* \"ERC721A/MintNagaKids.sol\":6304:6364  IERC721(_NFT).safeTransferFrom(address(this), _to, _tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6343:6347  this */\n      address\n        /* \"ERC721A/MintNagaKids.sol\":6304:6364  IERC721(_NFT).safeTransferFrom(address(this), _to, _tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12247:12281   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12317:12332   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":12297:12315   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":12290:12333   */\n      mstore\n        /* \"#utility.yul\":12349:12367   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12342:12376   */\n      dup4\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6304:6334  IERC721(_NFT).safeTransferFrom */\n      dup4\n      and\n      swap1\n      0x42842e0e\n      swap1\n        /* \"#utility.yul\":12182:12200   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":6304:6364  IERC721(_NFT).safeTransferFrom(address(this), _to, _tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_313\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_313:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_315\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_315:\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":6390:6436  WithdrawNFT(_to,_NFT,_tokenId,block.timestamp) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10424:10439   */\n      dup1\n      dup9\n      and\n        /* \"#utility.yul\":10406:10440   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10476:10491   */\n      dup7\n      and\n        /* \"#utility.yul\":10471:10473   */\n      0x20\n        /* \"#utility.yul\":10456:10474   */\n      dup3\n      add\n        /* \"#utility.yul\":10449:10492   */\n      mstore\n        /* \"#utility.yul\":10508:10526   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":10501:10535   */\n      dup5\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6420:6435  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":10566:10568   */\n      0x60\n        /* \"#utility.yul\":10551:10569   */\n      dup3\n      add\n        /* \"#utility.yul\":10544:10578   */\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6390:6436  WithdrawNFT(_to,_NFT,_tokenId,block.timestamp) */\n      0x0127a8d3f57942833f6930572bce52ad882683e36eeb5830d199d3fa4bfa9467\n      swap3\n      pop\n        /* \"#utility.yul\":10355:10358   */\n      0x80\n        /* \"#utility.yul\":10340:10359   */\n      add\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":6390:6436  WithdrawNFT(_to,_NFT,_tokenId,block.timestamp) */\n      tag_232\n        /* \"#utility.yul\":10137:10584   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":6743:6854  function getTotalSupply() public view returns (uint256) {... */\n    tag_147:\n        /* \"ERC721A/MintNagaKids.sol\":6817:6832  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":6817:6846  nagaKidContract.totalSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x18160ddd)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC721A/MintNagaKids.sol\":6790:6797  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":6817:6832  nagaKidContract */\n      and\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":6817:6844  nagaKidContract.totalSupply */\n      0x18160ddd\n      swap2\n        /* \"ERC721A/MintNagaKids.sol\":6817:6846  nagaKidContract.totalSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ERC721A/MintNagaKids.sol\":6817:6832  nagaKidContract */\n      dup7\n        /* \"ERC721A/MintNagaKids.sol\":6817:6846  nagaKidContract.totalSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_214\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"ERC721A/MintNagaKids.sol\":4427:5242  function publicMint(bytes calldata _sig) public payable nonReentrant {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12589:12591   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12571:12592   */\n      mstore\n        /* \"#utility.yul\":12628:12630   */\n      0x1f\n        /* \"#utility.yul\":12608:12626   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12601:12631   */\n      mstore\n        /* \"#utility.yul\":12667:12700   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":12647:12665   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12640:12701   */\n      mstore\n        /* \"#utility.yul\":12718:12736   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_202\n        /* \"#utility.yul\":12387:12742   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_322:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      swap1\n      dup2\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":4517:4533  isPublicMintOpen */\n      and(0xff, sload(0x05))\n        /* \"ERC721A/MintNagaKids.sol\":4517:4541  isPublicMintOpen == true */\n      iszero\n      iszero\n      eq\n        /* \"ERC721A/MintNagaKids.sol\":4509:4570  require(isPublicMintOpen == true, \"Public mint is not open.\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12949:12951   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":4509:4570  require(isPublicMintOpen == true, \"Public mint is not open.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12931:12952   */\n      mstore\n        /* \"#utility.yul\":12988:12990   */\n      0x18\n        /* \"#utility.yul\":12968:12986   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12961:12991   */\n      mstore\n        /* \"#utility.yul\":13027:13053   */\n      0x5075626c6963206d696e74206973206e6f74206f70656e2e0000000000000000\n        /* \"#utility.yul\":13007:13025   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13000:13054   */\n      mstore\n        /* \"#utility.yul\":13071:13089   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4509:4570  require(isPublicMintOpen == true, \"Public mint is not open.\") */\n      tag_202\n        /* \"#utility.yul\":12747:13095   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4509:4570  require(isPublicMintOpen == true, \"Public mint is not open.\") */\n    tag_326:\n        /* \"ERC721A/MintNagaKids.sol\":4589:4598  tx.origin */\n      origin\n        /* \"ERC721A/MintNagaKids.sol\":4602:4612  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":4589:4612  tx.origin == msg.sender */\n      eq\n        /* \"ERC721A/MintNagaKids.sol\":4581:4644  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13302:13304   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":4581:4644  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13284:13305   */\n      mstore\n        /* \"#utility.yul\":13341:13343   */\n      0x1b\n        /* \"#utility.yul\":13321:13339   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13314:13344   */\n      mstore\n        /* \"#utility.yul\":13380:13409   */\n      0x6861686120436f6e74726163742063616e27742063616c6c206d650000000000\n        /* \"#utility.yul\":13360:13378   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13353:13410   */\n      mstore\n        /* \"#utility.yul\":13427:13445   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4581:4644  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n      tag_202\n        /* \"#utility.yul\":13100:13451   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4581:4644  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n    tag_329:\n        /* \"ERC721A/MintNagaKids.sol\":4678:4688  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":5309:5313  bool */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":5332:5354  _isPublicMinted[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5332:5347  _isPublicMinted */\n      0x08\n        /* \"ERC721A/MintNagaKids.sol\":5332:5354  _isPublicMinted[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ERC721A/MintNagaKids.sol\":4663:4697  isPublicMinted(msg.sender) != true */\n      iszero\n      iszero\n        /* \"ERC721A/MintNagaKids.sol\":4693:4697  true */\n      0x01\n        /* \"ERC721A/MintNagaKids.sol\":4663:4697  isPublicMinted(msg.sender) != true */\n      sub\n        /* \"ERC721A/MintNagaKids.sol\":4655:4725  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13658:13660   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":4655:4725  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13640:13661   */\n      mstore\n        /* \"#utility.yul\":13697:13699   */\n      0x17\n        /* \"#utility.yul\":13677:13695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13670:13700   */\n      mstore\n      shl(0x49, 0x2cb7ba9030b9329030b63932b0b23c9036b4b73a32b217)\n        /* \"#utility.yul\":13716:13734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13709:13762   */\n      mstore\n        /* \"#utility.yul\":13779:13797   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4655:4725  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n      tag_202\n        /* \"#utility.yul\":13456:13803   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4655:4725  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n    tag_333:\n        /* \"ERC721A/MintNagaKids.sol\":4815:4830  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":4815:4854  nagaKidContract.isMinter(address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x55138f0d)\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4848:4852  this */\n      address\n        /* \"ERC721A/MintNagaKids.sol\":4815:4854  nagaKidContract.isMinter(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1099:1150   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":4815:4830  nagaKidContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":4815:4839  nagaKidContract.isMinter */\n      0xaa271e1a\n      swap1\n        /* \"#utility.yul\":1072:1090   */\n      0x24\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4815:4854  nagaKidContract.isMinter(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_338\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_338:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_339\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_339:\n        /* \"ERC721A/MintNagaKids.sol\":4807:4889  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      tag_340\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14010:14012   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":4807:4889  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13992:14013   */\n      mstore\n        /* \"#utility.yul\":14049:14051   */\n      0x1e\n        /* \"#utility.yul\":14029:14047   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14022:14052   */\n      mstore\n        /* \"#utility.yul\":14088:14120   */\n      0x436f6e7472616374204d696e74206973206e6f7420617070726f7665642e0000\n        /* \"#utility.yul\":14068:14086   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14061:14121   */\n      mstore\n        /* \"#utility.yul\":14138:14156   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4807:4889  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      tag_202\n        /* \"#utility.yul\":13808:14162   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4807:4889  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n    tag_340:\n        /* \"ERC721A/MintNagaKids.sol\":4908:4938  verify(signer,msg.sender,_sig) */\n      tag_343\n        /* \"ERC721A/MintNagaKids.sol\":4915:4921  signer */\n      0x05\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC721A/MintNagaKids.sol\":4922:4932  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":4933:4937  _sig */\n      dup5\n      dup5\n        /* \"ERC721A/MintNagaKids.sol\":4908:4938  verify(signer,msg.sender,_sig) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4908:4914  verify */\n      tag_75\n      swap3\n      pop\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4908:4938  verify(signer,msg.sender,_sig) */\n      jump\t// in\n    tag_343:\n        /* \"ERC721A/MintNagaKids.sol\":4900:4977  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14369:14371   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":4900:4977  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14351:14372   */\n      mstore\n        /* \"#utility.yul\":14408:14410   */\n      0x22\n        /* \"#utility.yul\":14388:14406   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14381:14411   */\n      mstore\n        /* \"#utility.yul\":14447:14481   */\n      0x556e617574686f72697a6564205075626c69634d696e74205468697320557365\n        /* \"#utility.yul\":14427:14445   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14420:14482   */\n      mstore\n      shl(0xf1, 0x3917)\n        /* \"#utility.yul\":14498:14516   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14491:14523   */\n      mstore\n        /* \"#utility.yul\":14540:14559   */\n      0x84\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4900:4977  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n      tag_202\n        /* \"#utility.yul\":14167:14565   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4900:4977  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n    tag_344:\n        /* \"ERC721A/MintNagaKids.sol\":5085:5095  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":5036:5051  uint256 _amount */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":5069:5096  _isPublicMinted[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5069:5084  _isPublicMinted */\n      0x08\n        /* \"ERC721A/MintNagaKids.sol\":5069:5096  _isPublicMinted[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":5069:5103  _isPublicMinted[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ERC721A/MintNagaKids.sol\":5054:5055  1 */\n      0x01\n        /* \"ERC721A/MintNagaKids.sol\":5069:5103  _isPublicMinted[msg.sender] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":5114:5129  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":5114:5158  nagaKidContract.safeMint(msg.sender,_amount) */\n      swap2\n      mload\n      shl(0xe2, 0x28512065)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":9782:9833   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":9849:9867   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":9842:9876   */\n      dup2\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5054:5055  1 */\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":5114:5129  nagaKidContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":5114:5138  nagaKidContract.safeMint */\n      0xa1448194\n      swap1\n        /* \"#utility.yul\":9755:9773   */\n      0x44\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5114:5158  nagaKidContract.safeMint(msg.sender,_amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_348\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_348:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_350\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_350:\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5184:5232  PublicMinted(msg.sender,_amount,block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9529:9554   */\n      dup5\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5216:5231  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":9585:9587   */\n      0x20\n        /* \"#utility.yul\":9570:9588   */\n      dup3\n      add\n        /* \"#utility.yul\":9563:9597   */\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":5197:5207  msg.sender */\n      caller\n      swap4\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":5184:5232  PublicMinted(msg.sender,_amount,block.timestamp) */\n      0xc1a73b31b32801ebbb4cae30b73eae4345be9f2915ea60306383c245ef8fac44\n      swap3\n      pop\n        /* \"#utility.yul\":9502:9520   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":5184:5232  PublicMinted(msg.sender,_amount,block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4427:5242  function publicMint(bytes calldata _sig) public payable nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_357:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15025:15027   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15007:15028   */\n      mstore\n        /* \"#utility.yul\":15064:15066   */\n      0x26\n        /* \"#utility.yul\":15044:15062   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15037:15067   */\n      mstore\n        /* \"#utility.yul\":15103:15137   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":15083:15101   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15076:15138   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":15154:15172   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15147:15183   */\n      mstore\n        /* \"#utility.yul\":15200:15219   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_202\n        /* \"#utility.yul\":14823:15225   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_360:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"ERC721A/MintNagaKids.sol\":3424:4419  function allowlistMint(bytes32[] calldata _proof, uint256 _amount, bytes32 _round) public payable nonReentrant {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_365\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12589:12591   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12571:12592   */\n      mstore\n        /* \"#utility.yul\":12628:12630   */\n      0x1f\n        /* \"#utility.yul\":12608:12626   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12601:12631   */\n      mstore\n        /* \"#utility.yul\":12667:12700   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":12647:12665   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12640:12701   */\n      mstore\n        /* \"#utility.yul\":12718:12736   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_202\n        /* \"#utility.yul\":12387:12742   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_365:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      swap1\n      dup2\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":3554:3571  isPrivateMintOpen */\n      sload(0x05)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC721A/MintNagaKids.sol\":3554:3579  isPrivateMintOpen == true */\n      iszero\n      iszero\n      eq\n        /* \"ERC721A/MintNagaKids.sol\":3546:3608  require(isPrivateMintOpen == true,\"Private mint is not open.\") */\n      tag_368\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15432:15434   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3546:3608  require(isPrivateMintOpen == true,\"Private mint is not open.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15414:15435   */\n      mstore\n        /* \"#utility.yul\":15471:15473   */\n      0x19\n        /* \"#utility.yul\":15451:15469   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15444:15474   */\n      mstore\n        /* \"#utility.yul\":15510:15537   */\n      0x50726976617465206d696e74206973206e6f74206f70656e2e00000000000000\n        /* \"#utility.yul\":15490:15508   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15483:15538   */\n      mstore\n        /* \"#utility.yul\":15555:15573   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3546:3608  require(isPrivateMintOpen == true,\"Private mint is not open.\") */\n      tag_202\n        /* \"#utility.yul\":15230:15579   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3546:3608  require(isPrivateMintOpen == true,\"Private mint is not open.\") */\n    tag_368:\n        /* \"ERC721A/MintNagaKids.sol\":3627:3633  _round */\n      dup1\n        /* \"ERC721A/MintNagaKids.sol\":3619:3669  require(_round != DEFAULT,\"Mint is not approved.\") */\n      tag_371\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15786:15788   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3619:3669  require(_round != DEFAULT,\"Mint is not approved.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15768:15789   */\n      mstore\n        /* \"#utility.yul\":15825:15827   */\n      0x15\n        /* \"#utility.yul\":15805:15823   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15798:15828   */\n      mstore\n      shl(0x59, 0x26b4b73a1034b9903737ba1030b8383937bb32b217)\n        /* \"#utility.yul\":15844:15862   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15837:15888   */\n      mstore\n        /* \"#utility.yul\":15905:15923   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3619:3669  require(_round != DEFAULT,\"Mint is not approved.\") */\n      tag_202\n        /* \"#utility.yul\":15584:15929   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3619:3669  require(_round != DEFAULT,\"Mint is not approved.\") */\n    tag_371:\n        /* \"ERC721A/MintNagaKids.sol\":3708:3714  _round */\n      dup1\n        /* \"ERC721A/MintNagaKids.sol\":3688:3704  currentMintRound */\n      sload(0x03)\n        /* \"ERC721A/MintNagaKids.sol\":3688:3714  currentMintRound == _round */\n      eq\n        /* \"ERC721A/MintNagaKids.sol\":3680:3758  require(currentMintRound == _round, \"Contract are not in this minting round.\") */\n      tag_374\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16136:16138   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3680:3758  require(currentMintRound == _round, \"Contract are not in this minting round.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16118:16139   */\n      mstore\n        /* \"#utility.yul\":16175:16177   */\n      0x27\n        /* \"#utility.yul\":16155:16173   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16148:16178   */\n      mstore\n        /* \"#utility.yul\":16214:16248   */\n      0x436f6e747261637420617265206e6f7420696e2074686973206d696e74696e67\n        /* \"#utility.yul\":16194:16212   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16187:16249   */\n      mstore\n      shl(0xc9, 0x103937bab73217)\n        /* \"#utility.yul\":16265:16283   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16258:16295   */\n      mstore\n        /* \"#utility.yul\":16312:16331   */\n      0x84\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3680:3758  require(currentMintRound == _round, \"Contract are not in this minting round.\") */\n      tag_202\n        /* \"#utility.yul\":15934:16337   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3680:3758  require(currentMintRound == _round, \"Contract are not in this minting round.\") */\n    tag_374:\n        /* \"ERC721A/MintNagaKids.sol\":3806:3820  getMaxSupply() */\n      tag_377\n        /* \"ERC721A/MintNagaKids.sol\":3806:3818  getMaxSupply */\n      tag_80\n        /* \"ERC721A/MintNagaKids.sol\":3806:3820  getMaxSupply() */\n      jump\t// in\n    tag_377:\n        /* \"ERC721A/MintNagaKids.sol\":3796:3803  _amount */\n      dup3\n        /* \"ERC721A/MintNagaKids.sol\":3777:3793  getTotalSupply() */\n      tag_378\n        /* \"ERC721A/MintNagaKids.sol\":3777:3791  getTotalSupply */\n      tag_147\n        /* \"ERC721A/MintNagaKids.sol\":3777:3793  getTotalSupply() */\n      jump\t// in\n    tag_378:\n        /* \"ERC721A/MintNagaKids.sol\":3777:3803  getTotalSupply() + _amount */\n      tag_379\n      swap2\n      swap1\n      tag_380\n      jump\t// in\n    tag_379:\n        /* \"ERC721A/MintNagaKids.sol\":3777:3820  getTotalSupply() + _amount < getMaxSupply() */\n      lt\n        /* \"ERC721A/MintNagaKids.sol\":3769:3836  require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\") */\n      tag_381\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16809:16811   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3769:3836  require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16791:16812   */\n      mstore\n        /* \"#utility.yul\":16848:16850   */\n      0x0b\n        /* \"#utility.yul\":16828:16846   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16821:16851   */\n      mstore\n      shl(0xa8, 0x4f76657220737570706c79)\n        /* \"#utility.yul\":16867:16885   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16860:16901   */\n      mstore\n        /* \"#utility.yul\":16918:16936   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3769:3836  require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\") */\n      tag_202\n        /* \"#utility.yul\":16607:16942   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3769:3836  require(getTotalSupply() + _amount < getMaxSupply(), \"Over supply\") */\n    tag_381:\n        /* \"ERC721A/MintNagaKids.sol\":3868:3878  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":6524:6528  bool */\n      0x00\n        /* \"ERC721A/MintNagaKids.sol\":6548:6568  _isUserMinted[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":6548:6561  _isUserMinted */\n      0x06\n        /* \"ERC721A/MintNagaKids.sol\":6548:6568  _isUserMinted[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":6548:6576  _isUserMinted[_user][_round] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ERC721A/MintNagaKids.sol\":3855:3895  isUserMinted(msg.sender,_round) == false */\n      iszero\n        /* \"ERC721A/MintNagaKids.sol\":3847:3923  require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13658:13660   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3847:3923  require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13640:13661   */\n      mstore\n        /* \"#utility.yul\":13697:13699   */\n      0x17\n        /* \"#utility.yul\":13677:13695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13670:13700   */\n      mstore\n      shl(0x49, 0x2cb7ba9030b9329030b63932b0b23c9036b4b73a32b217)\n        /* \"#utility.yul\":13716:13734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13709:13762   */\n      mstore\n        /* \"#utility.yul\":13779:13797   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3847:3923  require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\") */\n      tag_202\n        /* \"#utility.yul\":13456:13803   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3847:3923  require(isUserMinted(msg.sender,_round) == false, \"You are already minted.\") */\n    tag_385:\n        /* \"ERC721A/MintNagaKids.sol\":3942:3957  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":3942:3981  nagaKidContract.isMinter(address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x55138f0d)\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":3975:3979  this */\n      address\n        /* \"ERC721A/MintNagaKids.sol\":3942:3981  nagaKidContract.isMinter(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1099:1150   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":3942:3957  nagaKidContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":3942:3966  nagaKidContract.isMinter */\n      0xaa271e1a\n      swap1\n        /* \"#utility.yul\":1072:1090   */\n      0x24\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3942:3981  nagaKidContract.isMinter(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_389\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_389:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_390\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_390:\n        /* \"ERC721A/MintNagaKids.sol\":3934:4016  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      tag_391\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14010:14012   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":3934:4016  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13992:14013   */\n      mstore\n        /* \"#utility.yul\":14049:14051   */\n      0x1e\n        /* \"#utility.yul\":14029:14047   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14022:14052   */\n      mstore\n        /* \"#utility.yul\":14088:14120   */\n      0x436f6e7472616374204d696e74206973206e6f7420617070726f7665642e0000\n        /* \"#utility.yul\":14068:14086   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14061:14121   */\n      mstore\n        /* \"#utility.yul\":14138:14156   */\n      0x64\n      add\n        /* \"ERC721A/MintNagaKids.sol\":3934:4016  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n      tag_202\n        /* \"#utility.yul\":13808:14162   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":3934:4016  require(nagaKidContract.isMinter(address(this)), \"Contract Mint is not approved.\") */\n    tag_391:\n        /* \"ERC721A/MintNagaKids.sol\":4035:4131  MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))) */\n      tag_393\n        /* \"ERC721A/MintNagaKids.sol\":4054:4060  _proof */\n      dup5\n      dup5\n        /* \"ERC721A/MintNagaKids.sol\":4035:4131  MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4062:4072  merkleRoot */\n      sload(0x04)\n        /* \"ERC721A/MintNagaKids.sol\":4084:4129  abi.encodePacked(msg.sender, _amount, _round) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"ERC721A/MintNagaKids.sol\":4101:4111  msg.sender */\n      caller\n        /* \"#utility.yul\":17152:17154   */\n      0x60\n        /* \"#utility.yul\":17148:17163   */\n      shl\n        /* \"#utility.yul\":17144:17197   */\n      and\n        /* \"ERC721A/MintNagaKids.sol\":4084:4129  abi.encodePacked(msg.sender, _amount, _round) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":17132:17198   */\n      mstore\n        /* \"#utility.yul\":17214:17226   */\n      0x34\n      dup2\n      add\n        /* \"#utility.yul\":17207:17235   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":17251:17263   */\n      0x54\n      dup2\n      add\n        /* \"#utility.yul\":17244:17272   */\n      dup8\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4062:4072  merkleRoot */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":17288:17300   */\n      0x74\n      add\n      swap1\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4084:4129  abi.encodePacked(msg.sender, _amount, _round) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4074:4130  keccak256(abi.encodePacked(msg.sender, _amount, _round)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":4035:4053  MerkleProof.verify */\n      tag_396\n        /* \"ERC721A/MintNagaKids.sol\":4035:4131  MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))) */\n      jump\t// in\n    tag_393:\n        /* \"ERC721A/MintNagaKids.sol\":4027:4173  require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\") */\n      tag_397\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17513:17515   */\n      0x20\n        /* \"ERC721A/MintNagaKids.sol\":4027:4173  require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17495:17516   */\n      mstore\n        /* \"#utility.yul\":17552:17554   */\n      0x25\n        /* \"#utility.yul\":17532:17550   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17525:17555   */\n      mstore\n        /* \"#utility.yul\":17591:17625   */\n      0x556e617574686f72697a65642057686974656c6973744d696e74205468697320\n        /* \"#utility.yul\":17571:17589   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17564:17626   */\n      mstore\n      shl(0xd9, 0x2ab9b2b917)\n        /* \"#utility.yul\":17642:17660   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17635:17670   */\n      mstore\n        /* \"#utility.yul\":17687:17706   */\n      0x84\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4027:4173  require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\") */\n      tag_202\n        /* \"#utility.yul\":17311:17712   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":4027:4173  require(MerkleProof.verify(_proof, merkleRoot, keccak256(abi.encodePacked(msg.sender, _amount, _round))), \"Unauthorized WhitelistMint This User.\") */\n    tag_397:\n        /* \"ERC721A/MintNagaKids.sol\":4200:4210  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":4186:4211  _isUserMinted[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4186:4199  _isUserMinted */\n      0x06\n        /* \"ERC721A/MintNagaKids.sol\":4186:4211  _isUserMinted[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":4186:4219  _isUserMinted[msg.sender][_round] */\n      dup6\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":4186:4226  _isUserMinted[msg.sender][_round] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ERC721A/MintNagaKids.sol\":4222:4226  true */\n      0x01\n        /* \"ERC721A/MintNagaKids.sol\":4186:4226  _isUserMinted[msg.sender][_round] = true */\n      or\n      swap1\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":4237:4266  _userMintedAmount[msg.sender] */\n      swap3\n      dup3\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4237:4254  _userMintedAmount */\n      0x07\n        /* \"ERC721A/MintNagaKids.sol\":4237:4266  _userMintedAmount[msg.sender] */\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":4237:4274  _userMintedAmount[msg.sender][_round] */\n      dup5\n      dup4\n      mstore\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"ERC721A/MintNagaKids.sol\":4237:4285  _userMintedAmount[msg.sender][_round] += _amount */\n      dup1\n      sload\n        /* \"ERC721A/MintNagaKids.sol\":4278:4285  _amount */\n      dup5\n      swap3\n        /* \"ERC721A/MintNagaKids.sol\":4186:4211  _isUserMinted[msg.sender] */\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":4237:4285  _userMintedAmount[msg.sender][_round] += _amount */\n      tag_400\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":4278:4285  _amount */\n      dup5\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":4237:4285  _userMintedAmount[msg.sender][_round] += _amount */\n      tag_380\n      jump\t// in\n    tag_400:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4298:4313  nagaKidContract */\n      sload(0x02)\n        /* \"ERC721A/MintNagaKids.sol\":4298:4342  nagaKidContract.safeMint(msg.sender,_amount) */\n      mload(0x40)\n      shl(0xe2, 0x28512065)\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4323:4333  msg.sender */\n      caller\n        /* \"ERC721A/MintNagaKids.sol\":4298:4342  nagaKidContract.safeMint(msg.sender,_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9782:9833   */\n      mstore\n        /* \"#utility.yul\":9849:9867   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9842:9876   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/MintNagaKids.sol\":4298:4313  nagaKidContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC721A/MintNagaKids.sol\":4298:4322  nagaKidContract.safeMint */\n      0xa1448194\n      swap1\n        /* \"#utility.yul\":9755:9773   */\n      0x44\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4298:4342  nagaKidContract.safeMint(msg.sender,_amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_402\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_402:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_404\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_404:\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4360:4411  PrivateMinted(msg.sender, _amount, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9529:9554   */\n      dup6\n      dup2\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4395:4410  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":9585:9587   */\n      0x20\n        /* \"#utility.yul\":9570:9588   */\n      dup3\n      add\n        /* \"#utility.yul\":9563:9597   */\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":4374:4384  msg.sender */\n      caller\n      swap4\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":4360:4411  PrivateMinted(msg.sender, _amount, block.timestamp) */\n      0xe9e607753e80542a9021d5149990f18919907f0136fad424eaac3d15056ccf6e\n      swap3\n      pop\n        /* \"#utility.yul\":9502:9520   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":4360:4411  PrivateMinted(msg.sender, _amount, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n        /* \"ERC721A/MintNagaKids.sol\":3424:4419  function allowlistMint(bytes32[] calldata _proof, uint256 _amount, bytes32 _round) public payable nonReentrant {... */\n      jump\t// out\n        /* \"ERC721A/VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_186:\n        /* \"ERC721A/VerifySignature.sol\":611:738  abi.encodePacked(... */\n      mload(0x40)\n        /* \"#utility.yul\":17959:18025   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"ERC721A/VerifySignature.sol\":611:738  abi.encodePacked(... */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":17947:18026   */\n      mstore\n        /* \"#utility.yul\":18042:18054   */\n      0x3c\n      dup2\n      add\n        /* \"#utility.yul\":18035:18063   */\n      dup3\n      swap1\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":370:377  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":18079:18091   */\n      0x5c\n      add\n        /* \"ERC721A/VerifySignature.sol\":611:738  abi.encodePacked(... */\n      tag_206\n        /* \"#utility.yul\":17717:18097   */\n      jump\n        /* \"ERC721A/MintNagaKids.sol\":2799:2996  function setRound(bytes32 _round) public onlyOwner {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_412\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_412:\n        /* \"ERC721A/MintNagaKids.sol\":2884:2900  currentMintRound */\n      0x03\n      dup1\n      sload\n        /* \"ERC721A/MintNagaKids.sol\":2911:2936  currentMintRound = _round */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"ERC721A/MintNagaKids.sol\":2954:2988  RoundChanged(_roundBefore, _round) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9529:9554   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":9585:9587   */\n      0x20\n        /* \"#utility.yul\":9570:9588   */\n      dup2\n      add\n        /* \"#utility.yul\":9563:9597   */\n      dup5\n      swap1\n      mstore\n        /* \"ERC721A/MintNagaKids.sol\":2954:2988  RoundChanged(_roundBefore, _round) */\n      0x521ec96875ca228cd2fc1dbd4c927a34328c9ce1a83bcb8c1f633f012c90d785\n      swap2\n        /* \"#utility.yul\":9502:9520   */\n      add\n        /* \"ERC721A/MintNagaKids.sol\":2954:2988  RoundChanged(_roundBefore, _round) */\n      tag_240\n        /* \"#utility.yul\":9355:9603   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1154:1338  function verify(... */\n    tag_396:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1275:1279  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1327:1331  root */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1323  processProof(proof, leaf) */\n      tag_420\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1311:1316  proof */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1318:1322  leaf */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1310  processProof */\n      tag_421\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1323  processProof(proof, leaf) */\n      jump\t// in\n    tag_420:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1331  processProof(proof, leaf) == root */\n      eq\n      swap5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1154:1338  function verify(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1689:2351  function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {... */\n    tag_421:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1772:1779  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1814:1818  leaf */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1772:1779  bytes32 */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n    tag_423:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1852:1857  proof */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1852:1864  proof.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1848:1849  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1848:1864  i < proof.length */\n      lt\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n      iszero\n      tag_424\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1885:1905  bytes32 proofElement */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1908:1913  proof */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1914:1915  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1908:1916  proof[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_427\n      jumpi\n      tag_427\n      tag_428\n      jump\t// in\n    tag_427:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1885:1916  bytes32 proofElement = proof[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1950:1962  proofElement */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1934:1946  computedHash */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1934:1962  computedHash <= proofElement */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n      tag_429\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2425:2438  bytes32 value */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2473:2488  mstore(0x00, a) */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2508:2512  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2501:2516  mstore(0x20, b) */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2554:2558  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2538:2559  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2060:2117  computedHash = _efficientHash(computedHash, proofElement) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n      jump(tag_432)\n    tag_429:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2425:2438  bytes32 value */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2473:2488  mstore(0x00, a) */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2508:2512  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2501:2516  mstore(0x20, b) */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2554:2558  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2538:2559  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2234:2291  computedHash = _efficientHash(proofElement, computedHash) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n    tag_432:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1866:1869  i++ */\n      dup1\n      tag_434\n      dup2\n      tag_435\n      jump\t// in\n    tag_434:\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n      jump(tag_423)\n    tag_424:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2332:2344  computedHash */\n      swap4\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1689:2351  function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:314   */\n    tag_437:\n        /* \"#utility.yul\":282:287   */\n      dup1\n        /* \"#utility.yul\":275:288   */\n      iszero\n        /* \"#utility.yul\":268:289   */\n      iszero\n        /* \"#utility.yul\":261:266   */\n      dup2\n        /* \"#utility.yul\":258:290   */\n      eq\n        /* \"#utility.yul\":248:308   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":304:305   */\n      0x00\n        /* \"#utility.yul\":301:302   */\n      dup1\n        /* \"#utility.yul\":294:306   */\n      revert\n        /* \"#utility.yul\":319:560   */\n    tag_50:\n        /* \"#utility.yul\":375:381   */\n      0x00\n        /* \"#utility.yul\":428:430   */\n      0x20\n        /* \"#utility.yul\":416:425   */\n      dup3\n        /* \"#utility.yul\":407:414   */\n      dup5\n        /* \"#utility.yul\":403:426   */\n      sub\n        /* \"#utility.yul\":399:431   */\n      slt\n        /* \"#utility.yul\":396:448   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":444:445   */\n      0x00\n        /* \"#utility.yul\":441:442   */\n      dup1\n        /* \"#utility.yul\":434:446   */\n      revert\n        /* \"#utility.yul\":396:448   */\n    tag_447:\n        /* \"#utility.yul\":483:492   */\n      dup2\n        /* \"#utility.yul\":470:493   */\n      calldataload\n        /* \"#utility.yul\":502:530   */\n      tag_448\n        /* \"#utility.yul\":524:529   */\n      dup2\n        /* \"#utility.yul\":502:530   */\n      tag_437\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":549:554   */\n      swap4\n        /* \"#utility.yul\":319:560   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:696   */\n    tag_438:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":640:671   */\n      dup2\n      and\n        /* \"#utility.yul\":630:672   */\n      dup2\n      eq\n        /* \"#utility.yul\":620:690   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":686:687   */\n      0x00\n        /* \"#utility.yul\":683:684   */\n      dup1\n        /* \"#utility.yul\":676:688   */\n      revert\n        /* \"#utility.yul\":701:948   */\n    tag_55:\n        /* \"#utility.yul\":760:766   */\n      0x00\n        /* \"#utility.yul\":813:815   */\n      0x20\n        /* \"#utility.yul\":801:810   */\n      dup3\n        /* \"#utility.yul\":792:799   */\n      dup5\n        /* \"#utility.yul\":788:811   */\n      sub\n        /* \"#utility.yul\":784:816   */\n      slt\n        /* \"#utility.yul\":781:833   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":829:830   */\n      0x00\n        /* \"#utility.yul\":826:827   */\n      dup1\n        /* \"#utility.yul\":819:831   */\n      revert\n        /* \"#utility.yul\":781:833   */\n    tag_452:\n        /* \"#utility.yul\":868:877   */\n      dup2\n        /* \"#utility.yul\":855:878   */\n      calldataload\n        /* \"#utility.yul\":887:918   */\n      tag_448\n        /* \"#utility.yul\":912:917   */\n      dup2\n        /* \"#utility.yul\":887:918   */\n      tag_438\n      jump\t// in\n        /* \"#utility.yul\":1161:1288   */\n    tag_439:\n        /* \"#utility.yul\":1222:1232   */\n      0x4e487b71\n        /* \"#utility.yul\":1217:1220   */\n      0xe0\n        /* \"#utility.yul\":1213:1233   */\n      shl\n        /* \"#utility.yul\":1210:1211   */\n      0x00\n        /* \"#utility.yul\":1203:1234   */\n      mstore\n        /* \"#utility.yul\":1253:1257   */\n      0x41\n        /* \"#utility.yul\":1250:1251   */\n      0x04\n        /* \"#utility.yul\":1243:1258   */\n      mstore\n        /* \"#utility.yul\":1277:1281   */\n      0x24\n        /* \"#utility.yul\":1274:1275   */\n      0x00\n        /* \"#utility.yul\":1267:1282   */\n      revert\n        /* \"#utility.yul\":1293:2011   */\n    tag_440:\n        /* \"#utility.yul\":1335:1340   */\n      0x00\n        /* \"#utility.yul\":1388:1391   */\n      dup3\n        /* \"#utility.yul\":1381:1385   */\n      0x1f\n        /* \"#utility.yul\":1373:1379   */\n      dup4\n        /* \"#utility.yul\":1369:1386   */\n      add\n        /* \"#utility.yul\":1365:1392   */\n      slt\n        /* \"#utility.yul\":1355:1410   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":1406:1407   */\n      0x00\n        /* \"#utility.yul\":1403:1404   */\n      dup1\n        /* \"#utility.yul\":1396:1408   */\n      revert\n        /* \"#utility.yul\":1355:1410   */\n    tag_457:\n        /* \"#utility.yul\":1442:1448   */\n      dup2\n        /* \"#utility.yul\":1429:1449   */\n      calldataload\n        /* \"#utility.yul\":1468:1486   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1505:1507   */\n      dup1\n        /* \"#utility.yul\":1501:1503   */\n      dup3\n        /* \"#utility.yul\":1498:1508   */\n      gt\n        /* \"#utility.yul\":1495:1531   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":1511:1529   */\n      tag_459\n      tag_439\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":1586:1588   */\n      0x40\n        /* \"#utility.yul\":1580:1589   */\n      mload\n        /* \"#utility.yul\":1554:1556   */\n      0x1f\n        /* \"#utility.yul\":1640:1653   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1636:1658   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1660:1662   */\n      0x3f\n        /* \"#utility.yul\":1632:1663   */\n      add\n        /* \"#utility.yul\":1628:1668   */\n      and\n        /* \"#utility.yul\":1616:1669   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1684:1702   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":1704:1726   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1681:1727   */\n      or\n        /* \"#utility.yul\":1678:1750   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":1730:1748   */\n      tag_461\n      tag_439\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":1770:1780   */\n      dup2\n        /* \"#utility.yul\":1766:1768   */\n      0x40\n        /* \"#utility.yul\":1759:1781   */\n      mstore\n        /* \"#utility.yul\":1805:1807   */\n      dup4\n        /* \"#utility.yul\":1797:1803   */\n      dup2\n        /* \"#utility.yul\":1790:1808   */\n      mstore\n        /* \"#utility.yul\":1851:1854   */\n      dup7\n        /* \"#utility.yul\":1844:1848   */\n      0x20\n        /* \"#utility.yul\":1839:1841   */\n      dup6\n        /* \"#utility.yul\":1831:1837   */\n      dup9\n        /* \"#utility.yul\":1827:1842   */\n      add\n        /* \"#utility.yul\":1823:1849   */\n      add\n        /* \"#utility.yul\":1820:1855   */\n      gt\n        /* \"#utility.yul\":1817:1872   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":1868:1869   */\n      0x00\n        /* \"#utility.yul\":1865:1866   */\n      dup1\n        /* \"#utility.yul\":1858:1870   */\n      revert\n        /* \"#utility.yul\":1817:1872   */\n    tag_462:\n        /* \"#utility.yul\":1932:1934   */\n      dup4\n        /* \"#utility.yul\":1925:1929   */\n      0x20\n        /* \"#utility.yul\":1917:1923   */\n      dup8\n        /* \"#utility.yul\":1913:1930   */\n      add\n        /* \"#utility.yul\":1906:1910   */\n      0x20\n        /* \"#utility.yul\":1898:1904   */\n      dup4\n        /* \"#utility.yul\":1894:1911   */\n      add\n        /* \"#utility.yul\":1881:1935   */\n      calldatacopy\n        /* \"#utility.yul\":1979:1980   */\n      0x00\n        /* \"#utility.yul\":1972:1976   */\n      0x20\n        /* \"#utility.yul\":1967:1969   */\n      dup6\n        /* \"#utility.yul\":1959:1965   */\n      dup4\n        /* \"#utility.yul\":1955:1970   */\n      add\n        /* \"#utility.yul\":1951:1977   */\n      add\n        /* \"#utility.yul\":1944:1981   */\n      mstore\n        /* \"#utility.yul\":1999:2005   */\n      dup1\n        /* \"#utility.yul\":1990:2005   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1293:2011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2016:2612   */\n    tag_74:\n        /* \"#utility.yul\":2102:2108   */\n      0x00\n        /* \"#utility.yul\":2110:2116   */\n      dup1\n        /* \"#utility.yul\":2118:2124   */\n      0x00\n        /* \"#utility.yul\":2171:2173   */\n      0x60\n        /* \"#utility.yul\":2159:2168   */\n      dup5\n        /* \"#utility.yul\":2150:2157   */\n      dup7\n        /* \"#utility.yul\":2146:2169   */\n      sub\n        /* \"#utility.yul\":2142:2174   */\n      slt\n        /* \"#utility.yul\":2139:2191   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":2187:2188   */\n      0x00\n        /* \"#utility.yul\":2184:2185   */\n      dup1\n        /* \"#utility.yul\":2177:2189   */\n      revert\n        /* \"#utility.yul\":2139:2191   */\n    tag_464:\n        /* \"#utility.yul\":2226:2235   */\n      dup4\n        /* \"#utility.yul\":2213:2236   */\n      calldataload\n        /* \"#utility.yul\":2245:2276   */\n      tag_465\n        /* \"#utility.yul\":2270:2275   */\n      dup2\n        /* \"#utility.yul\":2245:2276   */\n      tag_438\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":2295:2300   */\n      swap3\n      pop\n        /* \"#utility.yul\":2352:2354   */\n      0x20\n        /* \"#utility.yul\":2337:2355   */\n      dup5\n      add\n        /* \"#utility.yul\":2324:2356   */\n      calldataload\n        /* \"#utility.yul\":2365:2398   */\n      tag_466\n        /* \"#utility.yul\":2324:2356   */\n      dup2\n        /* \"#utility.yul\":2365:2398   */\n      tag_438\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":2417:2424   */\n      swap2\n      pop\n        /* \"#utility.yul\":2475:2477   */\n      0x40\n        /* \"#utility.yul\":2460:2478   */\n      dup5\n      add\n        /* \"#utility.yul\":2447:2479   */\n      calldataload\n        /* \"#utility.yul\":2502:2520   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2491:2521   */\n      dup2\n      gt\n        /* \"#utility.yul\":2488:2538   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":2534:2535   */\n      0x00\n        /* \"#utility.yul\":2531:2532   */\n      dup1\n        /* \"#utility.yul\":2524:2536   */\n      revert\n        /* \"#utility.yul\":2488:2538   */\n    tag_467:\n        /* \"#utility.yul\":2557:2606   */\n      tag_468\n        /* \"#utility.yul\":2598:2605   */\n      dup7\n        /* \"#utility.yul\":2589:2595   */\n      dup3\n        /* \"#utility.yul\":2578:2587   */\n      dup8\n        /* \"#utility.yul\":2574:2596   */\n      add\n        /* \"#utility.yul\":2557:2606   */\n      tag_440\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":2547:2606   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2016:2612   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2991:3171   */\n    tag_97:\n        /* \"#utility.yul\":3050:3056   */\n      0x00\n        /* \"#utility.yul\":3103:3105   */\n      0x20\n        /* \"#utility.yul\":3091:3100   */\n      dup3\n        /* \"#utility.yul\":3082:3089   */\n      dup5\n        /* \"#utility.yul\":3078:3101   */\n      sub\n        /* \"#utility.yul\":3074:3106   */\n      slt\n        /* \"#utility.yul\":3071:3123   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":3119:3120   */\n      0x00\n        /* \"#utility.yul\":3116:3117   */\n      dup1\n        /* \"#utility.yul\":3109:3121   */\n      revert\n        /* \"#utility.yul\":3071:3123   */\n    tag_472:\n      pop\n        /* \"#utility.yul\":3142:3165   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2991:3171   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3176:3564   */\n    tag_102:\n        /* \"#utility.yul\":3244:3250   */\n      0x00\n        /* \"#utility.yul\":3252:3258   */\n      dup1\n        /* \"#utility.yul\":3305:3307   */\n      0x40\n        /* \"#utility.yul\":3293:3302   */\n      dup4\n        /* \"#utility.yul\":3284:3291   */\n      dup6\n        /* \"#utility.yul\":3280:3303   */\n      sub\n        /* \"#utility.yul\":3276:3308   */\n      slt\n        /* \"#utility.yul\":3273:3325   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":3321:3322   */\n      0x00\n        /* \"#utility.yul\":3318:3319   */\n      dup1\n        /* \"#utility.yul\":3311:3323   */\n      revert\n        /* \"#utility.yul\":3273:3325   */\n    tag_474:\n        /* \"#utility.yul\":3360:3369   */\n      dup3\n        /* \"#utility.yul\":3347:3370   */\n      calldataload\n        /* \"#utility.yul\":3379:3410   */\n      tag_475\n        /* \"#utility.yul\":3404:3409   */\n      dup2\n        /* \"#utility.yul\":3379:3410   */\n      tag_438\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":3429:3434   */\n      swap2\n      pop\n        /* \"#utility.yul\":3486:3488   */\n      0x20\n        /* \"#utility.yul\":3471:3489   */\n      dup4\n      add\n        /* \"#utility.yul\":3458:3490   */\n      calldataload\n        /* \"#utility.yul\":3499:3532   */\n      tag_476\n        /* \"#utility.yul\":3458:3490   */\n      dup2\n        /* \"#utility.yul\":3499:3532   */\n      tag_438\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":3551:3558   */\n      dup1\n        /* \"#utility.yul\":3541:3558   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3176:3564   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3569:3957   */\n    tag_115:\n        /* \"#utility.yul\":3646:3652   */\n      0x00\n        /* \"#utility.yul\":3654:3660   */\n      dup1\n        /* \"#utility.yul\":3707:3709   */\n      0x40\n        /* \"#utility.yul\":3695:3704   */\n      dup4\n        /* \"#utility.yul\":3686:3693   */\n      dup6\n        /* \"#utility.yul\":3682:3705   */\n      sub\n        /* \"#utility.yul\":3678:3710   */\n      slt\n        /* \"#utility.yul\":3675:3727   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":3723:3724   */\n      0x00\n        /* \"#utility.yul\":3720:3721   */\n      dup1\n        /* \"#utility.yul\":3713:3725   */\n      revert\n        /* \"#utility.yul\":3675:3727   */\n    tag_478:\n        /* \"#utility.yul\":3759:3768   */\n      dup3\n        /* \"#utility.yul\":3746:3769   */\n      calldataload\n        /* \"#utility.yul\":3736:3769   */\n      swap2\n      pop\n        /* \"#utility.yul\":3820:3822   */\n      0x20\n        /* \"#utility.yul\":3809:3818   */\n      dup4\n        /* \"#utility.yul\":3805:3823   */\n      add\n        /* \"#utility.yul\":3792:3824   */\n      calldataload\n        /* \"#utility.yul\":3847:3865   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3839:3845   */\n      dup2\n        /* \"#utility.yul\":3836:3866   */\n      gt\n        /* \"#utility.yul\":3833:3883   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":3879:3880   */\n      0x00\n        /* \"#utility.yul\":3876:3877   */\n      dup1\n        /* \"#utility.yul\":3869:3881   */\n      revert\n        /* \"#utility.yul\":3833:3883   */\n    tag_479:\n        /* \"#utility.yul\":3902:3951   */\n      tag_480\n        /* \"#utility.yul\":3943:3950   */\n      dup6\n        /* \"#utility.yul\":3934:3940   */\n      dup3\n        /* \"#utility.yul\":3923:3932   */\n      dup7\n        /* \"#utility.yul\":3919:3941   */\n      add\n        /* \"#utility.yul\":3902:3951   */\n      tag_440\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":3892:3951   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3569:3957   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4230:4550   */\n    tag_130:\n        /* \"#utility.yul\":4298:4304   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4339:4348   */\n      dup3\n        /* \"#utility.yul\":4330:4337   */\n      dup5\n        /* \"#utility.yul\":4326:4349   */\n      sub\n        /* \"#utility.yul\":4322:4354   */\n      slt\n        /* \"#utility.yul\":4319:4371   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":4367:4368   */\n      0x00\n        /* \"#utility.yul\":4364:4365   */\n      dup1\n        /* \"#utility.yul\":4357:4369   */\n      revert\n        /* \"#utility.yul\":4319:4371   */\n    tag_485:\n        /* \"#utility.yul\":4407:4416   */\n      dup2\n        /* \"#utility.yul\":4394:4417   */\n      calldataload\n        /* \"#utility.yul\":4440:4458   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4432:4438   */\n      dup2\n        /* \"#utility.yul\":4429:4459   */\n      gt\n        /* \"#utility.yul\":4426:4476   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":4472:4473   */\n      0x00\n        /* \"#utility.yul\":4469:4470   */\n      dup1\n        /* \"#utility.yul\":4462:4474   */\n      revert\n        /* \"#utility.yul\":4426:4476   */\n    tag_486:\n        /* \"#utility.yul\":4495:4544   */\n      tag_487\n        /* \"#utility.yul\":4536:4543   */\n      dup5\n        /* \"#utility.yul\":4527:4533   */\n      dup3\n        /* \"#utility.yul\":4516:4525   */\n      dup6\n        /* \"#utility.yul\":4512:4534   */\n      add\n        /* \"#utility.yul\":4495:4544   */\n      tag_440\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":4485:4544   */\n      swap5\n        /* \"#utility.yul\":4230:4550   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4886:5201   */\n    tag_137:\n        /* \"#utility.yul\":4954:4960   */\n      0x00\n        /* \"#utility.yul\":4962:4968   */\n      dup1\n        /* \"#utility.yul\":5015:5017   */\n      0x40\n        /* \"#utility.yul\":5003:5012   */\n      dup4\n        /* \"#utility.yul\":4994:5001   */\n      dup6\n        /* \"#utility.yul\":4990:5013   */\n      sub\n        /* \"#utility.yul\":4986:5018   */\n      slt\n        /* \"#utility.yul\":4983:5035   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":5031:5032   */\n      0x00\n        /* \"#utility.yul\":5028:5029   */\n      dup1\n        /* \"#utility.yul\":5021:5033   */\n      revert\n        /* \"#utility.yul\":4983:5035   */\n    tag_490:\n        /* \"#utility.yul\":5070:5079   */\n      dup3\n        /* \"#utility.yul\":5057:5080   */\n      calldataload\n        /* \"#utility.yul\":5089:5120   */\n      tag_491\n        /* \"#utility.yul\":5114:5119   */\n      dup2\n        /* \"#utility.yul\":5089:5120   */\n      tag_438\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":5139:5144   */\n      swap5\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"#utility.yul\":5176:5194   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":5163:5195   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4886:5201   */\n      jump\t// out\n        /* \"#utility.yul\":5206:5662   */\n    tag_143:\n        /* \"#utility.yul\":5283:5289   */\n      0x00\n        /* \"#utility.yul\":5291:5297   */\n      dup1\n        /* \"#utility.yul\":5299:5305   */\n      0x00\n        /* \"#utility.yul\":5352:5354   */\n      0x60\n        /* \"#utility.yul\":5340:5349   */\n      dup5\n        /* \"#utility.yul\":5331:5338   */\n      dup7\n        /* \"#utility.yul\":5327:5350   */\n      sub\n        /* \"#utility.yul\":5323:5355   */\n      slt\n        /* \"#utility.yul\":5320:5372   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":5368:5369   */\n      0x00\n        /* \"#utility.yul\":5365:5366   */\n      dup1\n        /* \"#utility.yul\":5358:5370   */\n      revert\n        /* \"#utility.yul\":5320:5372   */\n    tag_493:\n        /* \"#utility.yul\":5407:5416   */\n      dup4\n        /* \"#utility.yul\":5394:5417   */\n      calldataload\n        /* \"#utility.yul\":5426:5457   */\n      tag_494\n        /* \"#utility.yul\":5451:5456   */\n      dup2\n        /* \"#utility.yul\":5426:5457   */\n      tag_438\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":5476:5481   */\n      swap3\n      pop\n        /* \"#utility.yul\":5533:5535   */\n      0x20\n        /* \"#utility.yul\":5518:5536   */\n      dup5\n      add\n        /* \"#utility.yul\":5505:5537   */\n      calldataload\n        /* \"#utility.yul\":5546:5579   */\n      tag_495\n        /* \"#utility.yul\":5505:5537   */\n      dup2\n        /* \"#utility.yul\":5546:5579   */\n      tag_438\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":5206:5662   */\n      swap3\n      swap6\n        /* \"#utility.yul\":5598:5605   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5652:5654   */\n      0x40\n        /* \"#utility.yul\":5637:5655   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5624:5656   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":5206:5662   */\n      jump\t// out\n        /* \"#utility.yul\":5667:6258   */\n    tag_151:\n        /* \"#utility.yul\":5737:5743   */\n      0x00\n        /* \"#utility.yul\":5745:5751   */\n      dup1\n        /* \"#utility.yul\":5798:5800   */\n      0x20\n        /* \"#utility.yul\":5786:5795   */\n      dup4\n        /* \"#utility.yul\":5777:5784   */\n      dup6\n        /* \"#utility.yul\":5773:5796   */\n      sub\n        /* \"#utility.yul\":5769:5801   */\n      slt\n        /* \"#utility.yul\":5766:5818   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":5814:5815   */\n      0x00\n        /* \"#utility.yul\":5811:5812   */\n      dup1\n        /* \"#utility.yul\":5804:5816   */\n      revert\n        /* \"#utility.yul\":5766:5818   */\n    tag_497:\n        /* \"#utility.yul\":5854:5863   */\n      dup3\n        /* \"#utility.yul\":5841:5864   */\n      calldataload\n        /* \"#utility.yul\":5883:5901   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5924:5926   */\n      dup1\n        /* \"#utility.yul\":5916:5922   */\n      dup3\n        /* \"#utility.yul\":5913:5927   */\n      gt\n        /* \"#utility.yul\":5910:5944   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":5940:5941   */\n      0x00\n        /* \"#utility.yul\":5937:5938   */\n      dup1\n        /* \"#utility.yul\":5930:5942   */\n      revert\n        /* \"#utility.yul\":5910:5944   */\n    tag_498:\n        /* \"#utility.yul\":5978:5984   */\n      dup2\n        /* \"#utility.yul\":5967:5976   */\n      dup6\n        /* \"#utility.yul\":5963:5985   */\n      add\n        /* \"#utility.yul\":5953:5985   */\n      swap2\n      pop\n        /* \"#utility.yul\":6023:6030   */\n      dup6\n        /* \"#utility.yul\":6016:6020   */\n      0x1f\n        /* \"#utility.yul\":6012:6014   */\n      dup4\n        /* \"#utility.yul\":6008:6021   */\n      add\n        /* \"#utility.yul\":6004:6031   */\n      slt\n        /* \"#utility.yul\":5994:6049   */\n      tag_499\n      jumpi\n        /* \"#utility.yul\":6045:6046   */\n      0x00\n        /* \"#utility.yul\":6042:6043   */\n      dup1\n        /* \"#utility.yul\":6035:6047   */\n      revert\n        /* \"#utility.yul\":5994:6049   */\n    tag_499:\n        /* \"#utility.yul\":6085:6087   */\n      dup2\n        /* \"#utility.yul\":6072:6088   */\n      calldataload\n        /* \"#utility.yul\":6111:6113   */\n      dup2\n        /* \"#utility.yul\":6103:6109   */\n      dup2\n        /* \"#utility.yul\":6100:6114   */\n      gt\n        /* \"#utility.yul\":6097:6131   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":6127:6128   */\n      0x00\n        /* \"#utility.yul\":6124:6125   */\n      dup1\n        /* \"#utility.yul\":6117:6129   */\n      revert\n        /* \"#utility.yul\":6097:6131   */\n    tag_500:\n        /* \"#utility.yul\":6172:6179   */\n      dup7\n        /* \"#utility.yul\":6167:6169   */\n      0x20\n        /* \"#utility.yul\":6158:6164   */\n      dup3\n        /* \"#utility.yul\":6154:6156   */\n      dup6\n        /* \"#utility.yul\":6150:6165   */\n      add\n        /* \"#utility.yul\":6146:6170   */\n      add\n        /* \"#utility.yul\":6143:6180   */\n      gt\n        /* \"#utility.yul\":6140:6197   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":6193:6194   */\n      0x00\n        /* \"#utility.yul\":6190:6191   */\n      dup1\n        /* \"#utility.yul\":6183:6195   */\n      revert\n        /* \"#utility.yul\":6140:6197   */\n    tag_501:\n        /* \"#utility.yul\":6224:6226   */\n      0x20\n        /* \"#utility.yul\":6216:6227   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":6246:6252   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":5667:6258   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6487:7244   */\n    tag_181:\n        /* \"#utility.yul\":6591:6597   */\n      0x00\n        /* \"#utility.yul\":6599:6605   */\n      dup1\n        /* \"#utility.yul\":6607:6613   */\n      0x00\n        /* \"#utility.yul\":6615:6621   */\n      dup1\n        /* \"#utility.yul\":6668:6670   */\n      0x60\n        /* \"#utility.yul\":6656:6665   */\n      dup6\n        /* \"#utility.yul\":6647:6654   */\n      dup8\n        /* \"#utility.yul\":6643:6666   */\n      sub\n        /* \"#utility.yul\":6639:6671   */\n      slt\n        /* \"#utility.yul\":6636:6688   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":6684:6685   */\n      0x00\n        /* \"#utility.yul\":6681:6682   */\n      dup1\n        /* \"#utility.yul\":6674:6686   */\n      revert\n        /* \"#utility.yul\":6636:6688   */\n    tag_504:\n        /* \"#utility.yul\":6724:6733   */\n      dup5\n        /* \"#utility.yul\":6711:6734   */\n      calldataload\n        /* \"#utility.yul\":6753:6771   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6794:6796   */\n      dup1\n        /* \"#utility.yul\":6786:6792   */\n      dup3\n        /* \"#utility.yul\":6783:6797   */\n      gt\n        /* \"#utility.yul\":6780:6814   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":6810:6811   */\n      0x00\n        /* \"#utility.yul\":6807:6808   */\n      dup1\n        /* \"#utility.yul\":6800:6812   */\n      revert\n        /* \"#utility.yul\":6780:6814   */\n    tag_505:\n        /* \"#utility.yul\":6848:6854   */\n      dup2\n        /* \"#utility.yul\":6837:6846   */\n      dup8\n        /* \"#utility.yul\":6833:6855   */\n      add\n        /* \"#utility.yul\":6823:6855   */\n      swap2\n      pop\n        /* \"#utility.yul\":6893:6900   */\n      dup8\n        /* \"#utility.yul\":6886:6890   */\n      0x1f\n        /* \"#utility.yul\":6882:6884   */\n      dup4\n        /* \"#utility.yul\":6878:6891   */\n      add\n        /* \"#utility.yul\":6874:6901   */\n      slt\n        /* \"#utility.yul\":6864:6919   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":6915:6916   */\n      0x00\n        /* \"#utility.yul\":6912:6913   */\n      dup1\n        /* \"#utility.yul\":6905:6917   */\n      revert\n        /* \"#utility.yul\":6864:6919   */\n    tag_506:\n        /* \"#utility.yul\":6955:6957   */\n      dup2\n        /* \"#utility.yul\":6942:6958   */\n      calldataload\n        /* \"#utility.yul\":6981:6983   */\n      dup2\n        /* \"#utility.yul\":6973:6979   */\n      dup2\n        /* \"#utility.yul\":6970:6984   */\n      gt\n        /* \"#utility.yul\":6967:7001   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":6997:6998   */\n      0x00\n        /* \"#utility.yul\":6994:6995   */\n      dup1\n        /* \"#utility.yul\":6987:6999   */\n      revert\n        /* \"#utility.yul\":6967:7001   */\n    tag_507:\n        /* \"#utility.yul\":7052:7059   */\n      dup9\n        /* \"#utility.yul\":7045:7049   */\n      0x20\n        /* \"#utility.yul\":7035:7041   */\n      dup3\n        /* \"#utility.yul\":7032:7033   */\n      0x05\n        /* \"#utility.yul\":7028:7042   */\n      shl\n        /* \"#utility.yul\":7024:7026   */\n      dup6\n        /* \"#utility.yul\":7020:7043   */\n      add\n        /* \"#utility.yul\":7016:7050   */\n      add\n        /* \"#utility.yul\":7013:7060   */\n      gt\n        /* \"#utility.yul\":7010:7077   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":7073:7074   */\n      0x00\n        /* \"#utility.yul\":7070:7071   */\n      dup1\n        /* \"#utility.yul\":7063:7075   */\n      revert\n        /* \"#utility.yul\":7010:7077   */\n    tag_508:\n        /* \"#utility.yul\":7104:7108   */\n      0x20\n        /* \"#utility.yul\":7096:7109   */\n      swap3\n      dup4\n      add\n      swap10\n        /* \"#utility.yul\":7128:7134   */\n      swap1\n      swap9\n      pop\n        /* \"#utility.yul\":7166:7186   */\n      swap2\n      dup8\n      add\n        /* \"#utility.yul\":7153:7187   */\n      calldataload\n      swap7\n        /* \"#utility.yul\":7234:7236   */\n      0x40\n        /* \"#utility.yul\":7219:7237   */\n      add\n        /* \"#utility.yul\":7206:7238   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":6487:7244   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7249:7605   */\n    tag_203:\n        /* \"#utility.yul\":7451:7453   */\n      0x20\n        /* \"#utility.yul\":7433:7454   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7470:7488   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":7463:7493   */\n      mstore\n        /* \"#utility.yul\":7529:7563   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7524:7526   */\n      0x40\n        /* \"#utility.yul\":7509:7527   */\n      dup3\n      add\n        /* \"#utility.yul\":7502:7564   */\n      mstore\n        /* \"#utility.yul\":7596:7598   */\n      0x60\n        /* \"#utility.yul\":7581:7599   */\n      add\n      swap1\n        /* \"#utility.yul\":7249:7605   */\n      jump\t// out\n        /* \"#utility.yul\":7948:8132   */\n    tag_216:\n        /* \"#utility.yul\":8018:8024   */\n      0x00\n        /* \"#utility.yul\":8071:8073   */\n      0x20\n        /* \"#utility.yul\":8059:8068   */\n      dup3\n        /* \"#utility.yul\":8050:8057   */\n      dup5\n        /* \"#utility.yul\":8046:8069   */\n      sub\n        /* \"#utility.yul\":8042:8074   */\n      slt\n        /* \"#utility.yul\":8039:8091   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":8087:8088   */\n      0x00\n        /* \"#utility.yul\":8084:8085   */\n      dup1\n        /* \"#utility.yul\":8077:8089   */\n      revert\n        /* \"#utility.yul\":8039:8091   */\n    tag_512:\n      pop\n        /* \"#utility.yul\":8110:8126   */\n      mload\n      swap2\n        /* \"#utility.yul\":7948:8132   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9887:10132   */\n    tag_275:\n        /* \"#utility.yul\":9954:9960   */\n      0x00\n        /* \"#utility.yul\":10007:10009   */\n      0x20\n        /* \"#utility.yul\":9995:10004   */\n      dup3\n        /* \"#utility.yul\":9986:9993   */\n      dup5\n        /* \"#utility.yul\":9982:10005   */\n      sub\n        /* \"#utility.yul\":9978:10010   */\n      slt\n        /* \"#utility.yul\":9975:10027   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":10023:10024   */\n      0x00\n        /* \"#utility.yul\":10020:10021   */\n      dup1\n        /* \"#utility.yul\":10013:10025   */\n      revert\n        /* \"#utility.yul\":9975:10027   */\n    tag_520:\n        /* \"#utility.yul\":10055:10064   */\n      dup2\n        /* \"#utility.yul\":10049:10065   */\n      mload\n        /* \"#utility.yul\":10074:10102   */\n      tag_448\n        /* \"#utility.yul\":10096:10101   */\n      dup2\n        /* \"#utility.yul\":10074:10102   */\n      tag_437\n      jump\t// in\n        /* \"#utility.yul\":11345:11596   */\n    tag_307:\n        /* \"#utility.yul\":11415:11421   */\n      0x00\n        /* \"#utility.yul\":11468:11470   */\n      0x20\n        /* \"#utility.yul\":11456:11465   */\n      dup3\n        /* \"#utility.yul\":11447:11454   */\n      dup5\n        /* \"#utility.yul\":11443:11466   */\n      sub\n        /* \"#utility.yul\":11439:11471   */\n      slt\n        /* \"#utility.yul\":11436:11488   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":11484:11485   */\n      0x00\n        /* \"#utility.yul\":11481:11482   */\n      dup1\n        /* \"#utility.yul\":11474:11486   */\n      revert\n        /* \"#utility.yul\":11436:11488   */\n    tag_526:\n        /* \"#utility.yul\":11516:11525   */\n      dup2\n        /* \"#utility.yul\":11510:11526   */\n      mload\n        /* \"#utility.yul\":11535:11566   */\n      tag_448\n        /* \"#utility.yul\":11560:11565   */\n      dup2\n        /* \"#utility.yul\":11535:11566   */\n      tag_438\n      jump\t// in\n        /* \"#utility.yul\":16342:16469   */\n    tag_441:\n        /* \"#utility.yul\":16403:16413   */\n      0x4e487b71\n        /* \"#utility.yul\":16398:16401   */\n      0xe0\n        /* \"#utility.yul\":16394:16414   */\n      shl\n        /* \"#utility.yul\":16391:16392   */\n      0x00\n        /* \"#utility.yul\":16384:16415   */\n      mstore\n        /* \"#utility.yul\":16434:16438   */\n      0x11\n        /* \"#utility.yul\":16431:16432   */\n      0x04\n        /* \"#utility.yul\":16424:16439   */\n      mstore\n        /* \"#utility.yul\":16458:16462   */\n      0x24\n        /* \"#utility.yul\":16455:16456   */\n      0x00\n        /* \"#utility.yul\":16448:16463   */\n      revert\n        /* \"#utility.yul\":16474:16602   */\n    tag_380:\n        /* \"#utility.yul\":16514:16517   */\n      0x00\n        /* \"#utility.yul\":16545:16546   */\n      dup3\n        /* \"#utility.yul\":16541:16547   */\n      not\n        /* \"#utility.yul\":16538:16539   */\n      dup3\n        /* \"#utility.yul\":16535:16548   */\n      gt\n        /* \"#utility.yul\":16532:16571   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":16551:16569   */\n      tag_544\n      tag_441\n      jump\t// in\n    tag_544:\n      pop\n        /* \"#utility.yul\":16587:16596   */\n      add\n      swap1\n        /* \"#utility.yul\":16474:16602   */\n      jump\t// out\n        /* \"#utility.yul\":18102:18229   */\n    tag_428:\n        /* \"#utility.yul\":18163:18173   */\n      0x4e487b71\n        /* \"#utility.yul\":18158:18161   */\n      0xe0\n        /* \"#utility.yul\":18154:18174   */\n      shl\n        /* \"#utility.yul\":18151:18152   */\n      0x00\n        /* \"#utility.yul\":18144:18175   */\n      mstore\n        /* \"#utility.yul\":18194:18198   */\n      0x32\n        /* \"#utility.yul\":18191:18192   */\n      0x04\n        /* \"#utility.yul\":18184:18199   */\n      mstore\n        /* \"#utility.yul\":18218:18222   */\n      0x24\n        /* \"#utility.yul\":18215:18216   */\n      0x00\n        /* \"#utility.yul\":18208:18223   */\n      revert\n        /* \"#utility.yul\":18234:18369   */\n    tag_435:\n        /* \"#utility.yul\":18273:18276   */\n      0x00\n        /* \"#utility.yul\":18294:18311   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":18291:18334   */\n      tag_552\n      jumpi\n        /* \"#utility.yul\":18314:18332   */\n      tag_552\n      tag_441\n      jump\t// in\n    tag_552:\n      pop\n        /* \"#utility.yul\":18361:18362   */\n      0x01\n        /* \"#utility.yul\":18350:18363   */\n      add\n      swap1\n        /* \"#utility.yul\":18234:18369   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c97459e70061737be72dec8b73080165ef30af9ced7eb5e0fc84b3c36a75466f64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_123": {
									"entryPoint": null,
									"id": 123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_649": {
									"entryPoint": null,
									"id": 649,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_350": {
									"entryPoint": null,
									"id": 350,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 120,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setMerkleRoot_752": {
									"entryPoint": 379,
									"id": 752,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNagaKidContract_689": {
									"entryPoint": 200,
									"id": 689,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSigner_731": {
									"entryPoint": 524,
									"id": 731,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_INagaKid_$494t_addresst_bytes32_fromMemory": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_contract_INagaKid": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1567:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:86:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "133:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "145:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "135:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "135:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "135:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "92:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "103:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "118:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "123:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "114:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "114:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "127:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "110:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "110:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "99:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "99:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "89:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "89:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:50:13"
															},
															"nodeType": "YulIf",
															"src": "79:70:13"
														}
													]
												},
												"name": "validator_revert_contract_INagaKid",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "58:5:13",
														"type": ""
													}
												],
												"src": "14:141:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "291:351:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "337:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "346:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "339:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "339:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "339:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "312:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "321:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "308:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "308:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "304:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:32:13"
															},
															"nodeType": "YulIf",
															"src": "301:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "362:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "381:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "375:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "366:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "435:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_INagaKid",
																	"nodeType": "YulIdentifier",
																	"src": "400:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "400:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "450:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "460:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "450:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "474:40:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "499:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "510:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "495:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "495:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "489:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:25:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "478:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "558:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_INagaKid",
																	"nodeType": "YulIdentifier",
																	"src": "523:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "575:17:13",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "585:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "575:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "601:35:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "621:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "632:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "617:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "617:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "611:25:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_INagaKid_$494t_addresst_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "241:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "252:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "264:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "272:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "280:6:13",
														"type": ""
													}
												],
												"src": "160:482:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "821:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "838:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "849:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "831:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "831:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "831:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "872:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "883:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "888:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "861:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "922:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "907:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "907:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "927:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "900:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "900:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "900:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "971:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "983:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "994:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "971:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "798:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "812:4:13",
														"type": ""
													}
												],
												"src": "647:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1137:175:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1147:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1159:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1170:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1155:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1147:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1182:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1200:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1205:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1196:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1196:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1209:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1192:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1186:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1227:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1242:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1250:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1238:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1238:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1220:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1220:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1274:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1285:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1270:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1270:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1294:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1302:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1290:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1290:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1263:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1263:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1263:43:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1098:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1109:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1117:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1128:4:13",
														"type": ""
													}
												],
												"src": "1008:304:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1456:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1468:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1479:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1464:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1464:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1456:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1509:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1536:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1532:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1532:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1407:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1418:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1426:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1437:4:13",
														"type": ""
													}
												],
												"src": "1317:248:13"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_contract_INagaKid(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_INagaKid_$494t_addresst_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_INagaKid(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_INagaKid(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526005805461ffff191690553480156200001c57600080fd5b5060405162002193380380620021938339810160408190526200003f91620002d7565b6200004a3362000078565b600180556200005983620000c8565b62000064816200017b565b6200006f826200020c565b5050506200031f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001175760405162461bcd60e51b815260206004820181905260248201526000805160206200217383398151915260448201526064015b60405180910390fd5b600280546001600160a01b038381166001600160a01b0319831681179093556040805191909216808252602082019390935283917fabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d973910160405180910390a1505050565b6000546001600160a01b03163314620001c65760405162461bcd60e51b815260206004820181905260248201526000805160206200217383398151915260448201526064016200010e565b600480549082905560408051828152602081018490527f123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe91015b60405180910390a15050565b6000546001600160a01b03163314620002575760405162461bcd60e51b815260206004820181905260248201526000805160206200217383398151915260448201526064016200010e565b600580546001600160a01b038381166201000081810262010000600160b01b031985161790945560408051949093049091168084526020840191909152917feeb293e1f8f3a9db91ade748726387ed1352ca78f5430c5f06fe3d1e1ad50579910162000200565b6001600160a01b0381168114620002d457600080fd5b50565b600080600060608486031215620002ed57600080fd5b8351620002fa81620002be565b60208501519093506200030d81620002be565b80925050604084015190509250925092565b611e44806200032f6000396000f3fe6080604052600436106101ee5760003560e01c80639e6c88551161010d578063e02023a1116100a0578063f500cdfc1161006f578063f500cdfc146105e2578063f6b48e5514610616578063fa54080114610629578063ff05fe4a14610649578063ffdc61291461066957600080fd5b8063e02023a11461053f578063ef5fe79f14610573578063f055c7a914610589578063f2fde38b146105c257600080fd5b8063bff863ec116100dc578063bff863ec146104d7578063c4e41b22146104f7578063de6892c81461050c578063df4e58811461051f57600080fd5b80639e6c88551461041c578063a4435dfd1461043c578063a7bb580314610456578063b5abafa11461049457600080fd5b806351cff8d9116101855780638407ecc4116101545780638407ecc41461039f5780638907f3fa146103bf5780638da5cb5b146103de57806397aba7f9146103fc57600080fd5b806351cff8d91461032a5780636c19e7831461034a578063715018a61461036a5780637cb647591461037f57600080fd5b806324c37a85116101c157806324c37a851461029b5780632eb4a7ab146102cf57806342920a46146102e55780634c0f38c21461031557600080fd5b80630a25dea9146101f35780630e2d56cf1461021b5780631f5ac1b21461023d578063238ac9331461025d575b600080fd5b3480156101ff57600080fd5b50610208600081565b6040519081526020015b60405180910390f35b34801561022757600080fd5b5061023b610236366004611997565b6106af565b005b34801561024957600080fd5b506102086102583660046119d0565b6106e5565b34801561026957600080fd5b50600554610283906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610212565b3480156102a757600080fd5b506102087fb3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db381565b3480156102db57600080fd5b5061020860045481565b3480156102f157600080fd5b50610305610300366004611a90565b61072f565b6040519015158152602001610212565b34801561032157600080fd5b50610208610772565b34801561033657600080fd5b5061023b6103453660046119d0565b6107e5565b34801561035657600080fd5b5061023b6103653660046119d0565b610906565b34801561037657600080fd5b5061023b61099e565b34801561038b57600080fd5b5061023b61039a366004611af2565b6109d4565b3480156103ab57600080fd5b5061023b6103ba366004611b0b565b610a3c565b3480156103cb57600080fd5b5060055461030590610100900460ff1681565b3480156103ea57600080fd5b506000546001600160a01b0316610283565b34801561040857600080fd5b50610283610417366004611b44565b610bdc565b34801561042857600080fd5b5061023b6104373660046119d0565b610c5b565b34801561044857600080fd5b506005546103059060ff1681565b34801561046257600080fd5b50610476610471366004611b8b565b610ce1565b60408051938452602084019290925260ff1690820152606001610212565b3480156104a057600080fd5b506102086104af366004611bc8565b6001600160a01b03919091166000908152600760209081526040808320938352929052205490565b3480156104e357600080fd5b5061023b6104f2366004611bf4565b610d55565b34801561050357600080fd5b50610208610f05565b61023b61051a366004611c35565b610f4f565b34801561052b57600080fd5b50600254610283906001600160a01b031681565b34801561054b57600080fd5b506102087f5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec81565b34801561057f57600080fd5b5061020860035481565b34801561059557600080fd5b506103056105a43660046119d0565b6001600160a01b031660009081526008602052604090205460ff1690565b3480156105ce57600080fd5b5061023b6105dd3660046119d0565b6112d7565b3480156105ee57600080fd5b506102087f68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba81565b61023b610624366004611ca7565b61136f565b34801561063557600080fd5b50610208610644366004611af2565b61180c565b34801561065557600080fd5b5061023b610664366004611af2565b611847565b34801561067557600080fd5b50610305610684366004611bc8565b6001600160a01b03919091166000908152600660209081526040808320938352929052205460ff1690565b6000546001600160a01b031633146106e25760405162461bcd60e51b81526004016106d990611d29565b60405180910390fd5b50565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b60008061073b846106e5565b905060006107488261180c565b9050856001600160a01b031661075e8286610bdc565b6001600160a01b0316149695505050505050565b6002546040805163d5abeb0160e01b815290516000926001600160a01b03169163d5abeb019160048083019260209291908290030181865afa1580156107bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e09190611d5e565b905090565b6000546001600160a01b0316331461080f5760405162461bcd60e51b81526004016106d990611d29565b47806108545760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b60448201526064016106d9565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146108a1576040519150601f19603f3d011682016040523d82523d6000602084013e6108a6565b606091505b50509050806108b457600080fd5b604080516001600160a01b03851681526020810184905242918101919091527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906060015b60405180910390a1505050565b6000546001600160a01b031633146109305760405162461bcd60e51b81526004016106d990611d29565b600580546001600160a01b038381166201000081810262010000600160b01b031985161790945560408051949093049091168084526020840191909152917feeb293e1f8f3a9db91ade748726387ed1352ca78f5430c5f06fe3d1e1ad5057991015b60405180910390a15050565b6000546001600160a01b031633146109c85760405162461bcd60e51b81526004016106d990611d29565b6109d260006118af565b565b6000546001600160a01b031633146109fe5760405162461bcd60e51b81526004016106d990611d29565b600480549082905560408051828152602081018490527f123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe9101610992565b6000546001600160a01b03163314610a665760405162461bcd60e51b81526004016106d990611d29565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610aad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad19190611d5e565b905060008111610b1a5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b60448201526064016106d9565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820183905283169063a9059cbb906044016020604051808303816000875af1158015610b69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8d9190611d77565b50604080516001600160a01b038086168252841660208201529081018290524260608201527fb818a975f91276df8ba59329becbc23c793df0d503c19ac296c3c372a1fa0461906080016108f9565b600080600080610beb85610ce1565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015610c46573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000546001600160a01b03163314610c855760405162461bcd60e51b81526004016106d990611d29565b600280546001600160a01b038381166001600160a01b0319831681179093556040805191909216808252602082019390935283917fabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d97391016108f9565b60008060008351604114610d375760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016106d9565b50505060208101516040820151606090920151909260009190911a90565b6000546001600160a01b03163314610d7f5760405162461bcd60e51b81526004016106d990611d29565b6040516331a9108f60e11b81526004810182905230906001600160a01b03841690636352211e90602401602060405180830381865afa158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea9190611d94565b6001600160a01b031614610e4e5760405162461bcd60e51b815260206004820152602560248201527f5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e6044820152641d1c9858dd60da1b60648201526084016106d9565b604051632142170760e11b81523060048201526001600160a01b038481166024830152604482018390528316906342842e0e90606401600060405180830381600087803b158015610e9e57600080fd5b505af1158015610eb2573d6000803e3d6000fd5b5050604080516001600160a01b038088168252861660208201529081018490524260608201527f0127a8d3f57942833f6930572bce52ad882683e36eeb5830d199d3fa4bfa9467925060800190506108f9565b600254604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa1580156107bc573d6000803e3d6000fd5b600260015403610fa15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106d9565b6002600190815560055460ff16151514610ffd5760405162461bcd60e51b815260206004820152601860248201527f5075626c6963206d696e74206973206e6f74206f70656e2e000000000000000060448201526064016106d9565b32331461104c5760405162461bcd60e51b815260206004820152601b60248201527f6861686120436f6e74726163742063616e27742063616c6c206d65000000000060448201526064016106d9565b3360009081526008602052604090205460ff1615156001036110aa5760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016106d9565b6002546040516355138f0d60e11b81523060048201526001600160a01b039091169063aa271e1a90602401602060405180830381865afa1580156110f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111169190611d77565b6111625760405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374204d696e74206973206e6f7420617070726f7665642e000060448201526064016106d9565b6111b8600560029054906101000a90046001600160a01b03163384848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061072f92505050565b61120f5760405162461bcd60e51b815260206004820152602260248201527f556e617574686f72697a6564205075626c69634d696e74205468697320557365604482015261391760f11b60648201526084016106d9565b3360008181526008602052604090819020805460ff191660019081179091556002549151632851206560e21b8152600481019390935260248301819052916001600160a01b039091169063a144819490604401600060405180830381600087803b15801561127c57600080fd5b505af1158015611290573d6000803e3d6000fd5b5050604080518481524260208201523393507fc1a73b31b32801ebbb4cae30b73eae4345be9f2915ea60306383c245ef8fac4492500160405180910390a250506001805550565b6000546001600160a01b031633146113015760405162461bcd60e51b81526004016106d990611d29565b6001600160a01b0381166113665760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106d9565b6106e2816118af565b6002600154036113c15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106d9565b60026001908155600554610100900460ff161515146114225760405162461bcd60e51b815260206004820152601960248201527f50726976617465206d696e74206973206e6f74206f70656e2e0000000000000060448201526064016106d9565b806114675760405162461bcd60e51b815260206004820152601560248201527426b4b73a1034b9903737ba1030b8383937bb32b21760591b60448201526064016106d9565b80600354146114c85760405162461bcd60e51b815260206004820152602760248201527f436f6e747261637420617265206e6f7420696e2074686973206d696e74696e67604482015266103937bab7321760c91b60648201526084016106d9565b6114d0610772565b826114d9610f05565b6114e39190611dc7565b1061151e5760405162461bcd60e51b815260206004820152600b60248201526a4f76657220737570706c7960a81b60448201526064016106d9565b33600090815260066020908152604080832084845290915290205460ff16156115835760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016106d9565b6002546040516355138f0d60e11b81523060048201526001600160a01b039091169063aa271e1a90602401602060405180830381865afa1580156115cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ef9190611d77565b61163b5760405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374204d696e74206973206e6f7420617070726f7665642e000060448201526064016106d9565b6116be848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506004546040516bffffffffffffffffffffffff193360601b16602082015260348101889052605481018790529092506074019050604051602081830303815290604052805190602001206118ff565b6117185760405162461bcd60e51b815260206004820152602560248201527f556e617574686f72697a65642057686974656c6973744d696e742054686973206044820152642ab9b2b91760d91b60648201526084016106d9565b3360008181526006602090815260408083208584528252808320805460ff19166001179055928252600781528282208483529052908120805484929061175f908490611dc7565b9091555050600254604051632851206560e21b8152336004820152602481018490526001600160a01b039091169063a144819490604401600060405180830381600087803b1580156117b057600080fd5b505af11580156117c4573d6000803e3d6000fd5b5050604080518581524260208201523393507fe9e607753e80542a9021d5149990f18919907f0136fad424eaac3d15056ccf6e92500160405180910390a25050600180555050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610712565b6000546001600160a01b031633146118715760405162461bcd60e51b81526004016106d990611d29565b600380549082905560408051828152602081018490527f521ec96875ca228cd2fc1dbd4c927a34328c9ce1a83bcb8c1f633f012c90d7859101610992565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008261190c8584611915565b14949350505050565b600081815b845181101561198157600085828151811061193757611937611ddf565b6020026020010151905080831161195d576000838152602082905260409020925061196e565b600081815260208490526040902092505b508061197981611df5565b91505061191a565b509392505050565b80151581146106e257600080fd5b6000602082840312156119a957600080fd5b81356119b481611989565b9392505050565b6001600160a01b03811681146106e257600080fd5b6000602082840312156119e257600080fd5b81356119b4816119bb565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611a1457600080fd5b813567ffffffffffffffff80821115611a2f57611a2f6119ed565b604051601f8301601f19908116603f01168101908282118183101715611a5757611a576119ed565b81604052838152866020858801011115611a7057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611aa557600080fd5b8335611ab0816119bb565b92506020840135611ac0816119bb565b9150604084013567ffffffffffffffff811115611adc57600080fd5b611ae886828701611a03565b9150509250925092565b600060208284031215611b0457600080fd5b5035919050565b60008060408385031215611b1e57600080fd5b8235611b29816119bb565b91506020830135611b39816119bb565b809150509250929050565b60008060408385031215611b5757600080fd5b82359150602083013567ffffffffffffffff811115611b7557600080fd5b611b8185828601611a03565b9150509250929050565b600060208284031215611b9d57600080fd5b813567ffffffffffffffff811115611bb457600080fd5b611bc084828501611a03565b949350505050565b60008060408385031215611bdb57600080fd5b8235611be6816119bb565b946020939093013593505050565b600080600060608486031215611c0957600080fd5b8335611c14816119bb565b92506020840135611c24816119bb565b929592945050506040919091013590565b60008060208385031215611c4857600080fd5b823567ffffffffffffffff80821115611c6057600080fd5b818501915085601f830112611c7457600080fd5b813581811115611c8357600080fd5b866020828501011115611c9557600080fd5b60209290920196919550909350505050565b60008060008060608587031215611cbd57600080fd5b843567ffffffffffffffff80821115611cd557600080fd5b818701915087601f830112611ce957600080fd5b813581811115611cf857600080fd5b8860208260051b8501011115611d0d57600080fd5b6020928301999098509187013596604001359550909350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611d7057600080fd5b5051919050565b600060208284031215611d8957600080fd5b81516119b481611989565b600060208284031215611da657600080fd5b81516119b4816119bb565b634e487b7160e01b600052601160045260246000fd5b60008219821115611dda57611dda611db1565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201611e0757611e07611db1565b506001019056fea2646970667358221220c97459e70061737be72dec8b73080165ef30af9ced7eb5e0fc84b3c36a75466f64736f6c634300080f00334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2193 CODESIZE SUB DUP1 PUSH3 0x2193 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3F SWAP2 PUSH3 0x2D7 JUMP JUMPDEST PUSH3 0x4A CALLER PUSH3 0x78 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH3 0x59 DUP4 PUSH3 0xC8 JUMP JUMPDEST PUSH3 0x64 DUP2 PUSH3 0x17B JUMP JUMPDEST PUSH3 0x6F DUP3 PUSH3 0x20C JUMP JUMPDEST POP POP POP PUSH3 0x31F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x117 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2173 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 SWAP2 PUSH32 0xABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2173 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x10E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x257 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2173 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x10E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH3 0x10000 DUP2 DUP2 MUL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH32 0xEEB293E1F8F3A9DB91ADE748726387ED1352CA78F5430C5F06FE3D1E1AD50579 SWAP2 ADD PUSH3 0x200 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x2FA DUP2 PUSH3 0x2BE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x30D DUP2 PUSH3 0x2BE JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1E44 DUP1 PUSH3 0x32F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E6C8855 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xE02023A1 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF500CDFC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF500CDFC EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xF6B48E55 EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0xFF05FE4A EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0xFFDC6129 EQ PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE02023A1 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xEF5FE79F EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0xF055C7A9 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBFF863EC GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xBFF863EC EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xDE6892C8 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xDF4E5881 EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E6C8855 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xA4435DFD EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0xB5ABAFA1 EQ PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51CFF8D9 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x8407ECC4 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x8407ECC4 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x8907F3FA EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24C37A85 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x24C37A85 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x4C0F38C2 EQ PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA25DEA9 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xE2D56CF EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x25D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D0 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x283 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH32 0xB3C595E55271590809F54E2F4FC3A582754F45B104DD3C41666E2AD310493DB3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x772 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D0 JUMP JUMPDEST PUSH2 0x7E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D0 JUMP JUMPDEST PUSH2 0x906 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x99E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x9D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1B0B JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x305 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x283 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH2 0x417 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0xBDC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D0 JUMP JUMPDEST PUSH2 0xC5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x305 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x476 PUSH2 0x471 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x4AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0xD55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x51A CALLDATASIZE PUSH1 0x4 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x283 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH32 0x5D8E12C39142FF96D79D04D15D1BA1269E4FE57BB9D26F43523628B34BA108EC DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x19D0 JUMP JUMPDEST PUSH2 0x12D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH32 0x68E7D51FDB912CB107DDA2E59B053D87FCCA666DD0EF5339CD3474CCB5276BBA DUP2 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x624 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CA7 JUMP JUMPDEST PUSH2 0x136F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x644 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x180C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x664 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x1847 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0x684 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x73B DUP5 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x748 DUP3 PUSH2 0x180C JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x75E DUP3 DUP7 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5ABEB01 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD5ABEB01 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x80F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x854 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH3 0x10000 DUP2 DUP2 MUL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH32 0xEEB293E1F8F3A9DB91ADE748726387ED1352CA78F5430C5F06FE3D1E1AD50579 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH2 0x9D2 PUSH1 0x0 PUSH2 0x18AF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE SWAP2 ADD PUSH2 0x992 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD1 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0xB818A975F91276DF8BA59329BECBC23C793DF0D503C19AC296C3C372A1FA0461 SWAP1 PUSH1 0x80 ADD PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xBEB DUP6 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC46 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 SWAP2 PUSH32 0xABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973 SWAP2 ADD PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDEA SWAP2 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E4964206973206E6F74206F776E656420627920636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x127A8D3F57942833F6930572BCE52AD882683E36EEB5830D199D3FA4BFA9467 SWAP3 POP PUSH1 0x80 ADD SWAP1 POP PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xFA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xFFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C6963206D696E74206973206E6F74206F70656E2E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0x104C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6861686120436F6E74726163742063616E27742063616C6C206D650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x10AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x55138F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAA271E1A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1116 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x11B8 PUSH1 0x5 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x72F SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x120F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A6564205075626C69634D696E74205468697320557365 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3917 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6D9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0x28512065 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA1448194 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x127C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1290 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP4 POP PUSH32 0xC1A73B31B32801EBBB4CAE30B73EAE4345BE9F2915EA60306383C245EF8FAC44 SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1366 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x6E2 DUP2 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x13C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1422 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726976617465206D696E74206973206E6F74206F70656E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST DUP1 PUSH2 0x1467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x26B4B73A1034B9903737BA1030B8383937BB32B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST DUP1 PUSH1 0x3 SLOAD EQ PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420617265206E6F7420696E2074686973206D696E74696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x103937BAB73217 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x14D0 PUSH2 0x772 JUMP JUMPDEST DUP3 PUSH2 0x14D9 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x14E3 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST LT PUSH2 0x151E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4F76657220737570706C79 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1583 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x55138F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAA271E1A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15EF SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x163B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x16BE DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH1 0x74 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x18FF JUMP JUMPDEST PUSH2 0x1718 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642057686974656C6973744D696E74205468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2AB9B2B917 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6D9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0x7 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x175F SWAP1 DUP5 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x28512065 PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA1448194 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP4 POP PUSH32 0xE9E607753E80542A9021D5149990F18919907F0136FAD424EAAC3D15056CCF6E SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x712 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1871 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x521EC96875CA228CD2FC1DBD4C927A34328C9CE1A83BCB8C1F633F012C90D785 SWAP2 ADD PUSH2 0x992 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x190C DUP6 DUP5 PUSH2 0x1915 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1981 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1937 JUMPI PUSH2 0x1937 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x195D JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x196E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x1979 DUP2 PUSH2 0x1DF5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x191A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19B4 DUP2 PUSH2 0x1989 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19B4 DUP2 PUSH2 0x19BB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A2F JUMPI PUSH2 0x1A2F PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1A57 JUMPI PUSH2 0x1A57 PUSH2 0x19ED JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1A70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1AB0 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1AC0 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE8 DUP7 DUP3 DUP8 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1B29 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B39 DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B81 DUP6 DUP3 DUP7 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BC0 DUP5 DUP3 DUP6 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1BE6 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1C14 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1C24 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1C60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1C83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1C95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1CD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1CF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1D0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP10 SWAP1 SWAP9 POP SWAP2 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x40 ADD CALLDATALOAD SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x19B4 DUP2 PUSH2 0x1989 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x19B4 DUP2 PUSH2 0x19BB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1DDA JUMPI PUSH2 0x1DDA PUSH2 0x1DB1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1E07 JUMPI PUSH2 0x1E07 PUSH2 0x1DB1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH21 0x59E70061737BE72DEC8B73080165EF30AF9CED7EB5 0xE0 0xFC DUP5 0xB3 0xC3 PUSH11 0x75466F64736F6C63430008 0xF STOP CALLER 0x4F PUSH24 0x6E61626C653A2063616C6C6572206973206E6F7420746865 KECCAK256 PUSH16 0x776E6572000000000000000000000000 ",
							"sourceMap": "428:6546:8:-:0;;;1124:36;;;-1:-1:-1;;1167:37:8;;;2208:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;1701:1:1;1806:22;;2305:36:8;2324:16;2305:18;:36::i;:::-;2352:26;2366:11;2352:13;:26::i;:::-;2389:18;2399:7;2389:9;:18::i;:::-;2208:209;;;428:6546;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;2503:288:8:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;849:2:13;1240:68:0;;;831:21:13;;;868:18;;;861:30;-1:-1:-1;;;;;;;;;;;907:18:13;;;900:62;979:18;;1240:68:0;;;;;;;;;2610:15:8::1;::::0;;-1:-1:-1;;;;;2637:26:8;;::::1;-1:-1:-1::0;;;;;;2637:26:8;::::1;::::0;::::1;::::0;;;2732:51:::1;::::0;;2610:15;;;::::1;1220:34:13::0;;;1285:2;1270:18;;1263:43;;;;2637:26:8;;2732:51:::1;::::0;1155:18:13;2732:51:8::1;;;;;;;2567:224;;2503:288:::0;:::o;3196:220::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;849:2:13;1240:68:0;;;831:21:13;;;868:18;;;861:30;-1:-1:-1;;;;;;;;;;;907:18:13;;;900:62;979:18;;1240:68:0;647:356:13;1240:68:0;3296:10:8::1;::::0;;3317:24;;;;3359:49:::1;::::0;;1491:25:13;;;1547:2;1532:18;;1525:34;;;3359:49:8::1;::::0;1464:18:13;3359:49:8::1;;;;;;;;3257:159;3196:220:::0;:::o;3004:184::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;849:2:13;1240:68:0;;;831:21:13;;;868:18;;;861:30;-1:-1:-1;;;;;;;;;;;907:18:13;;;900:62;979:18;;1240:68:0;647:356:13;1240:68:0;3092:6:8::1;::::0;;-1:-1:-1;;;;;3109:16:8;;::::1;3092:6:::0;3109:16;;::::1;-1:-1:-1::0;;;;;;3109:16:8;::::1;;::::0;;;3143:37:::1;::::0;;3092:6;;;::::1;::::0;;::::1;1220:34:13::0;;;1285:2;1270:18;;1263:43;;;;3092:6:8;3143:37:::1;::::0;1155:18:13;3143:37:8::1;1008:304:13::0;14:141;-1:-1:-1;;;;;99:31:13;;89:42;;79:70;;145:1;142;135:12;79:70;14:141;:::o;160:482::-;264:6;272;280;333:2;321:9;312:7;308:23;304:32;301:52;;;349:1;346;339:12;301:52;381:9;375:16;400:41;435:5;400:41;:::i;:::-;510:2;495:18;;489:25;460:5;;-1:-1:-1;523:43:13;489:25;523:43;:::i;:::-;585:7;575:17;;;632:2;621:9;617:18;611:25;601:35;;160:482;;;;;:::o;1317:248::-;428:6546:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_522": {
									"entryPoint": null,
									"id": 522,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NAGA_HOLDER_MINT_ROUND_519": {
									"entryPoint": null,
									"id": 519,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WHITELIST_MINT_ROUND_514": {
									"entryPoint": null,
									"id": 514,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WITHDRAW_ROLE_527": {
									"entryPoint": null,
									"id": 527,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_efficientHash_452": {
									"entryPoint": null,
									"id": 452,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_350": {
									"entryPoint": null,
									"id": 350,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 6319,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowlistMint_871": {
									"entryPoint": 4975,
									"id": 871,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@currentMintRound_532": {
									"entryPoint": null,
									"id": 532,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getEthSignedMessageHash_1190": {
									"entryPoint": 6156,
									"id": 1190,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMaxSupply_1152": {
									"entryPoint": 1906,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMessageHash_1174": {
									"entryPoint": 1765,
									"id": 1174,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalSupply_1142": {
									"entryPoint": 3845,
									"id": 1142,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isPrivateMintOpen_540": {
									"entryPoint": null,
									"id": 540,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isPublicMintOpen_537": {
									"entryPoint": null,
									"id": 537,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isPublicMinted_965": {
									"entryPoint": null,
									"id": 965,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isUserMinted_1116": {
									"entryPoint": null,
									"id": 1116,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@merkleRoot_534": {
									"entryPoint": null,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nagaKidContract_530": {
									"entryPoint": null,
									"id": 530,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@processProof_441": {
									"entryPoint": 6421,
									"id": 441,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@publicMint_953": {
									"entryPoint": 3919,
									"id": 953,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@recoverSigner_1248": {
									"entryPoint": 3036,
									"id": 1248,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 2462,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMerkleRoot_752": {
									"entryPoint": 2516,
									"id": 752,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNagaKidContract_689": {
									"entryPoint": 3163,
									"id": 689,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPublicMint_657": {
									"entryPoint": 1711,
									"id": 657,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRound_710": {
									"entryPoint": 6215,
									"id": 710,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSigner_731": {
									"entryPoint": 2310,
									"id": 731,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@signer_542": {
									"entryPoint": null,
									"id": 542,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@splitSignature_1269": {
									"entryPoint": 3297,
									"id": 1269,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@transferOwnership_83": {
									"entryPoint": 4823,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userMintedAmount_1132": {
									"entryPoint": null,
									"id": 1132,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@verify_1221": {
									"entryPoint": 1839,
									"id": 1221,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@verify_384": {
									"entryPoint": 6399,
									"id": 384,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdrawCurrency_1053": {
									"entryPoint": 2620,
									"id": 1053,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawNFT_1100": {
									"entryPoint": 3413,
									"id": 1100,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdraw_1008": {
									"entryPoint": 2021,
									"id": 1008,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_bytes": {
									"entryPoint": 6659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr": {
									"entryPoint": 6800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bytes32": {
									"entryPoint": 7112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256t_bytes32": {
									"entryPoint": 7335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 6551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 6898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_bytes_memory_ptr": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 7221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 7051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_INagaKid_$494": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INagaKid_$494__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_44088db98f64bd7f2c584eff446b56f0c15b8c18215ca7ced6e447e24db3d2bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_507f035c670b11e911e1eb5937077419dc7c16add6610aed12b3d2f661e88ec0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7601,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7647,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 6537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18371:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:13",
														"type": ""
													}
												],
												"src": "14:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "238:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "292:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "301:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "304:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "294:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "294:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "294:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "261:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "282:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "275:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "275:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "268:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "268:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "258:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "258:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "251:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "251:40:13"
															},
															"nodeType": "YulIf",
															"src": "248:60:13"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "227:5:13",
														"type": ""
													}
												],
												"src": "196:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "386:174:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "432:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "441:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "444:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "434:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "434:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "434:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "407:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "416:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "428:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:32:13"
															},
															"nodeType": "YulIf",
															"src": "396:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "457:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "483:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "470:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "470:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "461:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "524:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "502:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "502:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "539:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "549:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "539:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "352:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "363:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "375:6:13",
														"type": ""
													}
												],
												"src": "319:241:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "610:86:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "674:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "683:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "686:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "676:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "676:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "676:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "633:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "644:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "659:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "664:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "655:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "655:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "668:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "651:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "651:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "640:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "640:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "630:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "630:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "623:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "623:50:13"
															},
															"nodeType": "YulIf",
															"src": "620:70:13"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "599:5:13",
														"type": ""
													}
												],
												"src": "565:131:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "826:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "829:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "819:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:32:13"
															},
															"nodeType": "YulIf",
															"src": "781:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "842:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "868:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "855:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "855:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "846:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "912:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "887:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "887:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "887:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "927:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "937:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "737:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "748:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "760:6:13",
														"type": ""
													}
												],
												"src": "701:247:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1054:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1064:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1076:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1087:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1072:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1072:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1064:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1106:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1121:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1137:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1142:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1133:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1133:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1146:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1129:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1129:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1117:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1117:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1099:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1099:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1023:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1034:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1045:4:13",
														"type": ""
													}
												],
												"src": "953:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1193:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1210:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1217:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1222:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1213:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1213:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1203:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1203:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1203:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1250:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1253:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1243:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1243:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1243:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1274:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1277:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1267:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1267:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1267:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1161:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1345:666:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1394:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1403:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1406:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1396:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1396:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1396:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1373:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1381:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1369:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1369:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1388:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1365:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1365:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:35:13"
															},
															"nodeType": "YulIf",
															"src": "1355:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1419:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1442:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1429:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1423:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1458:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1468:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1462:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1509:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1511:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1511:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1511:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1501:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1505:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1498:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:13"
															},
															"nodeType": "YulIf",
															"src": "1495:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1540:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1554:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1550:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1550:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1544:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1566:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1586:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1580:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1580:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1570:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1598:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1620:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "1644:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1648:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1640:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1640:13:13"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "1655:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1636:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1636:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1660:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1632:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1632:31:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1665:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1628:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1628:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1616:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1616:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1602:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1728:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1730:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1730:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1687:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1699:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1684:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1684:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1707:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1719:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1704:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1681:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1681:46:13"
															},
															"nodeType": "YulIf",
															"src": "1678:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1770:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1759:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1759:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1759:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1797:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1805:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1790:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1856:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1865:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1868:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1858:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1858:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1858:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1831:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1839:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1827:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1844:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1823:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1823:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1851:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1820:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:35:13"
															},
															"nodeType": "YulIf",
															"src": "1817:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1898:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1906:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1894:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1894:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1917:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1925:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1913:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1913:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1932:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1881:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1881:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1881:54:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1959:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1967:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1955:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1955:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1972:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1951:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1951:26:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1979:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1944:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1944:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1990:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1999:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1990:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1319:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1327:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1335:5:13",
														"type": ""
													}
												],
												"src": "1293:718:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2129:483:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2175:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2184:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2187:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2177:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2177:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2177:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2150:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2159:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2146:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2146:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2142:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:32:13"
															},
															"nodeType": "YulIf",
															"src": "2139:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2200:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2226:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2213:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2213:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2204:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2270:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2245:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2245:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2245:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2285:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2295:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2285:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2309:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2341:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2352:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2337:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2324:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:32:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2313:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2390:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2365:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2365:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2365:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2407:17:13",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2417:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2407:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2433:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2464:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2475:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2460:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2460:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2447:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2447:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2437:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2522:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2531:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2534:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2524:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2524:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2494:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2502:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2491:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2491:30:13"
															},
															"nodeType": "YulIf",
															"src": "2488:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2547:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2578:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2589:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2574:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2574:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2598:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2557:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:49:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2547:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2079:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2090:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2102:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2110:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2118:6:13",
														"type": ""
													}
												],
												"src": "2016:596:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2712:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2722:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2734:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2745:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2730:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2722:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2764:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2789:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2782:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2782:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2775:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2775:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2757:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2757:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2757:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2681:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2692:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2703:4:13",
														"type": ""
													}
												],
												"src": "2617:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2910:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2920:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2932:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2943:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2928:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2928:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2920:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2962:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2973:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2955:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2879:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2890:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2901:4:13",
														"type": ""
													}
												],
												"src": "2809:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3107:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3116:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3119:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3109:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3109:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3109:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3082:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3091:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3078:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3078:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3103:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3074:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3074:32:13"
															},
															"nodeType": "YulIf",
															"src": "3071:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3132:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3155:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3132:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3027:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3038:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3050:6:13",
														"type": ""
													}
												],
												"src": "2991:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3263:301:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3309:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3318:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3321:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3311:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3311:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3311:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3284:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3293:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3305:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3276:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3276:32:13"
															},
															"nodeType": "YulIf",
															"src": "3273:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3334:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3360:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3347:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3347:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3338:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3404:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3379:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3379:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3379:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3419:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3429:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3443:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3475:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3486:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3471:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3471:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3458:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3458:32:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3447:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3524:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3499:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3499:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3499:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3541:17:13",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3551:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3541:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3221:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3232:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3244:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3252:6:13",
														"type": ""
													}
												],
												"src": "3176:388:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3665:292:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3711:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3720:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3723:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3713:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3713:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3713:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3686:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3695:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3682:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3682:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3707:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3678:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3678:32:13"
															},
															"nodeType": "YulIf",
															"src": "3675:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3736:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3759:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3746:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3746:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3736:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3778:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3809:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3820:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3805:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3805:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3792:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3792:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3782:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3867:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3876:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3879:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3869:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3869:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3869:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3839:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3836:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:30:13"
															},
															"nodeType": "YulIf",
															"src": "3833:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3892:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3923:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3934:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3919:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3919:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3943:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3902:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3902:49:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3623:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3634:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3646:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3654:6:13",
														"type": ""
													}
												],
												"src": "3569:388:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4048:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4094:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4103:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4106:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4096:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4096:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4096:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4069:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4078:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4065:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4065:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4090:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4061:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4061:32:13"
															},
															"nodeType": "YulIf",
															"src": "4058:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4119:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4145:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4132:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4132:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4123:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4189:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4164:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4164:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4164:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4204:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4214:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4204:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_INagaKid_$494",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4014:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4025:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4037:6:13",
														"type": ""
													}
												],
												"src": "3962:263:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4309:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4355:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4364:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4367:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4357:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4357:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4357:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4330:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4339:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4326:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4326:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4322:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4322:32:13"
															},
															"nodeType": "YulIf",
															"src": "4319:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4380:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4407:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4394:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4394:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4384:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4460:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4469:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4472:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4462:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4462:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4462:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4432:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4440:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4429:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4429:30:13"
															},
															"nodeType": "YulIf",
															"src": "4426:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4485:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4516:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4527:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4512:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4512:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4536:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4495:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4495:49:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4485:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4275:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4286:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4298:6:13",
														"type": ""
													}
												],
												"src": "4230:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4708:173:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4718:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4730:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4741:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4726:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4726:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4718:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4760:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4771:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4753:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4753:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4753:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4798:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4809:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4794:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4794:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4814:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4787:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4787:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4841:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4852:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4837:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4837:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4861:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4869:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4857:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4857:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4830:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4830:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4830:45:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4661:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4672:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4680:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4688:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4699:4:13",
														"type": ""
													}
												],
												"src": "4555:326:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4973:228:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5019:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5028:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5031:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5021:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5021:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5021:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4994:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5003:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4990:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4990:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5015:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4986:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4986:32:13"
															},
															"nodeType": "YulIf",
															"src": "4983:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5044:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5070:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5057:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5057:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5048:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5114:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5089:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5089:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5089:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5129:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5139:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5129:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5153:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5180:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5191:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5176:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5176:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5163:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5163:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5153:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4931:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4942:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4954:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4962:6:13",
														"type": ""
													}
												],
												"src": "4886:315:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5310:352:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5356:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5365:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5368:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5358:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5358:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5358:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5331:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5340:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5327:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5327:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5352:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5323:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5323:32:13"
															},
															"nodeType": "YulIf",
															"src": "5320:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5381:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5407:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5394:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5394:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5385:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5451:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5426:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5426:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5426:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5466:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5476:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5466:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5490:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5522:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5533:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5518:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5518:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5505:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5505:32:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5494:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5571:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5546:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5546:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5546:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5588:17:13",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5598:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5588:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5614:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5641:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5652:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5637:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5637:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5624:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5624:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5614:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5260:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5271:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5283:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5291:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5299:6:13",
														"type": ""
													}
												],
												"src": "5206:456:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5756:502:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5802:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5811:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5814:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5804:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5804:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5804:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5777:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5786:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5773:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5773:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5798:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5769:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5769:32:13"
															},
															"nodeType": "YulIf",
															"src": "5766:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5827:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5854:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5841:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5841:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5831:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5873:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5883:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5877:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5928:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5937:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5940:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5930:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5930:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5916:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5924:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5913:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5913:14:13"
															},
															"nodeType": "YulIf",
															"src": "5910:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5953:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5967:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5978:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5963:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5963:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5957:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6033:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6042:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6045:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6035:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6035:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6035:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6012:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6016:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6008:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6008:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6023:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6004:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6004:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5997:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5997:35:13"
															},
															"nodeType": "YulIf",
															"src": "5994:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6058:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6085:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6072:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6072:16:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6062:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6115:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6124:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6127:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6117:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6117:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6117:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6103:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6111:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6100:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6100:14:13"
															},
															"nodeType": "YulIf",
															"src": "6097:34:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6181:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6190:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6193:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6183:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6183:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6183:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6154:2:13"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "6158:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6150:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6150:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6167:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6146:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6146:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6172:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6143:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6143:37:13"
															},
															"nodeType": "YulIf",
															"src": "6140:57:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6206:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6220:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6224:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6216:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6216:11:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6206:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6236:16:13",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "6246:6:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6236:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5714:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5725:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5737:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5745:6:13",
														"type": ""
													}
												],
												"src": "5667:591:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6380:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6390:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6402:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6413:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6398:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6398:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6390:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6432:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6447:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6463:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6468:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6459:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6459:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6472:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6455:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6455:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6443:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6443:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6425:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6425:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6425:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INagaKid_$494__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6349:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6360:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6371:4:13",
														"type": ""
													}
												],
												"src": "6263:219:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6626:618:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6672:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6681:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6684:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6674:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6674:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6674:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6647:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6656:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6643:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6643:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6668:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6639:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6639:32:13"
															},
															"nodeType": "YulIf",
															"src": "6636:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6697:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6724:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6711:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6711:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6701:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6743:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6753:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6747:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6798:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6807:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6810:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6800:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6800:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6800:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6786:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6794:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6783:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6783:14:13"
															},
															"nodeType": "YulIf",
															"src": "6780:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6823:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6837:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6848:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6833:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6833:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6827:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6903:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6912:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6915:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6905:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6905:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6905:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6882:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6886:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6878:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6878:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6893:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6874:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6874:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6867:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6867:35:13"
															},
															"nodeType": "YulIf",
															"src": "6864:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6928:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6955:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6942:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6942:16:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6932:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6985:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6994:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6997:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6987:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6987:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6987:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6973:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6981:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6970:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:14:13"
															},
															"nodeType": "YulIf",
															"src": "6967:34:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7061:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7070:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7073:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7063:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7063:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7063:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "7024:2:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7032:1:13",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "7035:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7028:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7028:14:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7020:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7020:23:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7045:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7016:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7016:34:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7052:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7013:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7013:47:13"
															},
															"nodeType": "YulIf",
															"src": "7010:67:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7086:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "7100:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7104:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7096:13:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7086:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7118:16:13",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "7128:6:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7118:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7143:44:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7170:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7181:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7166:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7166:20:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7153:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7153:34:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7143:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7196:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7223:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7234:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7219:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7219:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7206:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7206:32:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7196:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6568:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6579:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6591:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6599:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6607:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6615:6:13",
														"type": ""
													}
												],
												"src": "6487:757:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7423:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7440:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7451:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7433:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7433:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7433:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7474:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7485:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7470:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7470:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7490:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7463:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7463:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7463:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7513:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7524:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7509:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7509:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7529:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7502:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7502:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7502:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7573:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7585:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7596:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7581:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7581:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7573:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7400:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7414:4:13",
														"type": ""
													}
												],
												"src": "7249:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7757:186:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7767:41:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7781:26:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "7777:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7777:31:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7771:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7824:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7837:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "7841:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7833:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7833:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7850:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7829:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7829:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7817:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7817:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7817:37:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7874:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7879:2:13",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7870:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7870:12:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7892:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "7896:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7888:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7888:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7905:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7884:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7884:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7863:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7863:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7863:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7918:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7929:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7934:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7925:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7925:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7918:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7725:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7730:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7738:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7749:3:13",
														"type": ""
													}
												],
												"src": "7610:333:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8029:103:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8075:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8084:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8087:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8077:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8077:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8077:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8050:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8059:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8046:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8046:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8071:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8042:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8042:32:13"
															},
															"nodeType": "YulIf",
															"src": "8039:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8100:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8116:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8110:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8110:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8100:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7995:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8006:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8018:6:13",
														"type": ""
													}
												],
												"src": "7948:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8311:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8328:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8339:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8321:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8321:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8321:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8362:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8373:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8358:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8358:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8378:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8351:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8351:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8351:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8401:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8412:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8397:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8397:18:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742042616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8417:22:13",
																		"type": "",
																		"value": "Insufficient Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8390:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8390:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8390:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8449:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8461:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8472:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8457:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8457:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8449:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8288:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8302:4:13",
														"type": ""
													}
												],
												"src": "8137:344:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8677:14:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8679:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8686:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8679:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8661:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8669:3:13",
														"type": ""
													}
												],
												"src": "8486:205:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8853:188:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8863:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8875:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8886:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8871:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8871:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8863:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8905:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8920:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8936:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8941:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8932:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8932:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8945:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8928:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8928:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8916:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8916:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8898:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8898:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8898:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8969:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8980:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8965:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8965:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8985:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8958:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8958:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8958:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9012:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9023:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9008:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9008:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9028:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9001:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9001:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9001:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8806:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8817:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8825:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8833:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8844:4:13",
														"type": ""
													}
												],
												"src": "8696:345:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9175:175:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9185:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9197:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9208:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9193:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9193:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9185:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9220:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9238:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9243:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9234:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9234:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9247:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9230:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9230:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9224:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9265:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9280:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9288:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9276:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9276:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9258:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9258:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9258:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9312:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9323:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9308:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9308:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9332:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9340:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9328:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9328:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9301:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9301:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9301:43:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9136:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9147:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9155:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9166:4:13",
														"type": ""
													}
												],
												"src": "9046:304:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9484:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9494:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9506:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9517:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9502:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9502:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9494:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9536:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9547:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9529:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9529:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9529:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9574:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9585:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9570:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9570:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9590:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9563:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9563:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9563:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9445:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9456:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9464:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9475:4:13",
														"type": ""
													}
												],
												"src": "9355:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9737:145:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9747:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9759:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9770:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9755:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9755:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9747:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9789:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9804:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9820:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9825:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9816:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9816:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9829:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9812:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9812:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9800:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9800:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9782:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9782:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9782:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9853:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9864:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9849:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9849:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9869:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9842:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9842:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9842:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9698:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9709:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9717:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9728:4:13",
														"type": ""
													}
												],
												"src": "9608:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9965:167:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10011:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10020:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10023:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10013:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10013:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10013:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9986:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9995:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9982:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9982:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10007:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9978:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9978:32:13"
															},
															"nodeType": "YulIf",
															"src": "9975:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10036:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10055:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10049:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10049:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10040:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10096:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "10074:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10074:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10074:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10111:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10121:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10111:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9931:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9942:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9954:6:13",
														"type": ""
													}
												],
												"src": "9887:245:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10322:262:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10332:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10344:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10355:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10340:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10340:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10332:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10368:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10386:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10391:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10382:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10382:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10395:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10378:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10378:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10372:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10413:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10428:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10436:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10424:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10424:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10406:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10406:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10406:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10460:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10471:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10456:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10456:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10480:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10488:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10476:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10476:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10449:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10449:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10449:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10512:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10523:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10508:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10508:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10528:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10501:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10501:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10555:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10566:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10551:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10551:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10571:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10544:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10544:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10544:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10267:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10278:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10286:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10294:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10302:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10313:4:13",
														"type": ""
													}
												],
												"src": "10137:447:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10770:217:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10780:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10792:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10803:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10788:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10788:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10780:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10823:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10834:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10816:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10816:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10816:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10861:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10872:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10857:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10857:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10881:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10889:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10877:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10877:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10850:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10850:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10850:45:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10915:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10926:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10911:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10911:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10931:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10904:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10904:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10904:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10958:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10969:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10954:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10954:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10974:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10947:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10947:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10947:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10715:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10726:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10734:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10742:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10750:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10761:4:13",
														"type": ""
													}
												],
												"src": "10589:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11166:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11183:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11194:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11176:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11176:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11176:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11217:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11228:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11213:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11213:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11233:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11206:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11206:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11206:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11256:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11267:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11252:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11252:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964207369676e6174757265206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11272:26:13",
																		"type": "",
																		"value": "invalid signature length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11245:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11245:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11245:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11308:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11320:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11331:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11316:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11316:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11308:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11143:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11157:4:13",
														"type": ""
													}
												],
												"src": "10992:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11426:170:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11472:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11481:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11484:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11474:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11474:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11474:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11447:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11456:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11443:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11443:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11468:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11439:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11439:32:13"
															},
															"nodeType": "YulIf",
															"src": "11436:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11497:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11516:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11510:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11510:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11501:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11560:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "11535:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11535:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11535:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11575:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11585:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11575:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11392:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11403:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11415:6:13",
														"type": ""
													}
												],
												"src": "11345:251:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11775:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11792:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11803:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11785:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11785:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11785:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11826:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11837:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11822:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11822:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11842:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11815:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11815:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11815:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11865:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11876:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11861:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11861:18:13"
																	},
																	{
																		"hexValue": "5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11881:34:13",
																		"type": "",
																		"value": "This tokenId is not owned by con"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11854:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11854:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11854:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11936:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11947:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11932:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11932:18:13"
																	},
																	{
																		"hexValue": "7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11952:7:13",
																		"type": "",
																		"value": "tract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11925:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11925:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11925:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11969:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11981:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11992:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11977:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11977:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11969:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11752:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11766:4:13",
														"type": ""
													}
												],
												"src": "11601:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12164:218:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12174:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12186:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12197:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12182:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12182:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12174:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12209:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12227:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12232:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12223:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12223:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12236:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12219:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12219:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12213:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12254:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12269:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12277:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12265:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12265:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12247:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12247:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12247:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12301:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12312:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12297:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12297:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12321:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12329:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12317:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12317:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12290:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12290:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12290:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12353:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12364:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12349:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12349:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12369:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12342:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12342:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12342:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12117:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12128:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12136:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12144:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12155:4:13",
														"type": ""
													}
												],
												"src": "12007:375:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12561:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12578:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12589:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12571:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12571:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12571:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12612:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12623:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12608:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12608:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12628:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12601:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12601:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12601:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12651:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12662:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12647:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12647:18:13"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12667:33:13",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12640:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12640:61:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12640:61:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12710:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12722:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12733:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12718:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12718:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12710:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12538:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12552:4:13",
														"type": ""
													}
												],
												"src": "12387:355:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12921:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12938:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12949:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12931:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12931:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12931:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12972:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12983:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12968:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12968:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12988:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12961:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12961:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12961:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13011:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13022:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13007:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13007:18:13"
																	},
																	{
																		"hexValue": "5075626c6963206d696e74206973206e6f74206f70656e2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13027:26:13",
																		"type": "",
																		"value": "Public mint is not open."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13000:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13000:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13000:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13063:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13075:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13086:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13071:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13071:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13063:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_507f035c670b11e911e1eb5937077419dc7c16add6610aed12b3d2f661e88ec0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12898:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12912:4:13",
														"type": ""
													}
												],
												"src": "12747:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13274:177:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13291:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13302:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13284:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13284:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13284:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13325:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13336:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13321:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13321:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13341:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13314:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13314:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13314:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13364:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13375:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13360:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13360:18:13"
																	},
																	{
																		"hexValue": "6861686120436f6e74726163742063616e27742063616c6c206d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13380:29:13",
																		"type": "",
																		"value": "haha Contract can't call me"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13353:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13353:57:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13353:57:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13419:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13431:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13442:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13427:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13427:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13419:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13251:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13265:4:13",
														"type": ""
													}
												],
												"src": "13100:351:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13630:173:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13647:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13658:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13640:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13640:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13640:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13681:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13692:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13677:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13677:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13697:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13670:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13670:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13670:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13720:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13731:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13716:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13716:18:13"
																	},
																	{
																		"hexValue": "596f752061726520616c7265616479206d696e7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13736:25:13",
																		"type": "",
																		"value": "You are already minted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13709:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13709:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13709:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13771:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13783:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13794:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13779:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13779:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13771:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13607:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13621:4:13",
														"type": ""
													}
												],
												"src": "13456:347:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13982:180:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13999:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14010:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13992:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13992:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13992:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14033:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14044:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14029:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14029:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14049:2:13",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14022:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14022:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14022:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14072:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14083:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14068:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14068:18:13"
																	},
																	{
																		"hexValue": "436f6e7472616374204d696e74206973206e6f7420617070726f7665642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14088:32:13",
																		"type": "",
																		"value": "Contract Mint is not approved."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14061:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14061:60:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14061:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14130:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14142:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14153:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14138:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14138:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14130:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13959:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13973:4:13",
														"type": ""
													}
												],
												"src": "13808:354:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14341:224:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14358:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14369:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14351:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14351:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14351:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14392:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14403:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14388:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14388:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14408:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14381:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14381:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14381:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14431:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14442:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14427:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14427:18:13"
																	},
																	{
																		"hexValue": "556e617574686f72697a6564205075626c69634d696e74205468697320557365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14447:34:13",
																		"type": "",
																		"value": "Unauthorized PublicMint This Use"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14420:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14420:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14420:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14502:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14513:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14498:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14498:18:13"
																	},
																	{
																		"hexValue": "722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14518:4:13",
																		"type": "",
																		"value": "r."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14491:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14491:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14491:32:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14532:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14544:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14555:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14540:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14540:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14532:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14318:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14332:4:13",
														"type": ""
													}
												],
												"src": "14167:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14699:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14709:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14721:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14732:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14717:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14717:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14709:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14751:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14762:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14744:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14744:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14744:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14789:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14800:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14785:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14785:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14805:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14778:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14778:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14778:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14660:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14671:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14679:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14690:4:13",
														"type": ""
													}
												],
												"src": "14570:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14997:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15014:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15025:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15007:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15007:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15007:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15048:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15059:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15044:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15044:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15064:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15037:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15037:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15037:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15087:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15098:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15083:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15083:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15103:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15076:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15076:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15076:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15158:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15169:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15154:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15154:18:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15174:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15147:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15147:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15147:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15192:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15204:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15215:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15200:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15200:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15192:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14974:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14988:4:13",
														"type": ""
													}
												],
												"src": "14823:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15404:175:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15421:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15432:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15414:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15414:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15414:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15455:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15466:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15451:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15451:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15471:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15444:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15444:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15444:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15494:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15505:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15490:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15490:18:13"
																	},
																	{
																		"hexValue": "50726976617465206d696e74206973206e6f74206f70656e2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15510:27:13",
																		"type": "",
																		"value": "Private mint is not open."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15483:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15483:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15483:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15547:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15559:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15570:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15555:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15555:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15547:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_44088db98f64bd7f2c584eff446b56f0c15b8c18215ca7ced6e447e24db3d2bb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15381:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15395:4:13",
														"type": ""
													}
												],
												"src": "15230:349:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15758:171:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15775:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15786:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15768:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15768:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15768:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15809:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15820:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15805:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15805:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15825:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15798:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15798:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15798:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15848:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15859:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15844:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15844:18:13"
																	},
																	{
																		"hexValue": "4d696e74206973206e6f7420617070726f7665642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15864:23:13",
																		"type": "",
																		"value": "Mint is not approved."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15837:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15837:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15837:51:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15897:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15909:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15920:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15905:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15905:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15897:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15735:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15749:4:13",
														"type": ""
													}
												],
												"src": "15584:345:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16108:229:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16125:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16136:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16118:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16118:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16118:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16159:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16170:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16155:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16155:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16175:2:13",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16148:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16148:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16148:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16198:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16209:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16194:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16194:18:13"
																	},
																	{
																		"hexValue": "436f6e747261637420617265206e6f7420696e2074686973206d696e74696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16214:34:13",
																		"type": "",
																		"value": "Contract are not in this minting"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16187:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16187:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16269:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16280:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16265:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16265:18:13"
																	},
																	{
																		"hexValue": "20726f756e642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16285:9:13",
																		"type": "",
																		"value": " round."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16258:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16258:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16258:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16304:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16316:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16327:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16312:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16312:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16304:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16085:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16099:4:13",
														"type": ""
													}
												],
												"src": "15934:403:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16374:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16391:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16398:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16403:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16394:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16394:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16384:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16384:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16384:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16431:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16434:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16424:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16424:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16424:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16455:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16458:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16448:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16448:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16448:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16342:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16522:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16549:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16551:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16551:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16551:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16538:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "16545:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16541:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16541:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16535:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16535:13:13"
															},
															"nodeType": "YulIf",
															"src": "16532:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16580:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16591:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16594:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16587:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16587:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "16580:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16505:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16508:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "16514:3:13",
														"type": ""
													}
												],
												"src": "16474:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16781:161:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16798:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16809:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16791:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16791:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16791:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16832:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16843:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16828:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16828:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16848:2:13",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16821:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16821:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16821:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16871:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16882:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16867:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16867:18:13"
																	},
																	{
																		"hexValue": "4f76657220737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16887:13:13",
																		"type": "",
																		"value": "Over supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16860:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16860:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16860:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16910:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16922:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16933:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16918:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16918:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16910:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16758:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16772:4:13",
														"type": ""
													}
												],
												"src": "16607:335:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17122:184:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17139:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17152:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "17156:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "17148:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17148:15:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17169:26:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "17165:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17165:31:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17144:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17144:53:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17132:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17132:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17132:66:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "17218:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17223:2:13",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17214:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17214:12:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17228:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17207:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17207:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17207:28:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "17255:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17260:2:13",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17251:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17251:12:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17265:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17244:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17244:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17244:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17281:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17292:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17297:2:13",
																		"type": "",
																		"value": "84"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17288:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17288:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17281:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17082:3:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17087:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17095:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17103:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17114:3:13",
														"type": ""
													}
												],
												"src": "16947:359:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17485:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17502:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17513:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17495:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17495:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17495:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17536:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17547:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17532:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17532:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17552:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17525:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17525:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17525:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17575:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17586:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17571:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17571:18:13"
																	},
																	{
																		"hexValue": "556e617574686f72697a65642057686974656c6973744d696e74205468697320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17591:34:13",
																		"type": "",
																		"value": "Unauthorized WhitelistMint This "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17564:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17564:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17564:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17646:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17657:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17642:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17642:18:13"
																	},
																	{
																		"hexValue": "557365722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17662:7:13",
																		"type": "",
																		"value": "User."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17635:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17635:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17635:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17679:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17691:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17702:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17687:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17687:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17679:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17462:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17476:4:13",
														"type": ""
													}
												],
												"src": "17311:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17937:160:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17954:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17959:66:13",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17947:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17947:79:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17947:79:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "18046:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18051:2:13",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18042:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18042:12:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18056:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18035:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18035:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18035:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18072:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18083:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18088:2:13",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18079:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18079:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18072:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17913:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17918:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17929:3:13",
														"type": ""
													}
												],
												"src": "17717:380:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18134:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18151:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18158:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18163:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18154:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18154:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18144:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18144:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18144:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18191:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18194:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18184:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18184:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18184:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18215:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18218:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18208:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18208:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18208:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "18102:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18281:88:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18312:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18314:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18314:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18314:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18297:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18308:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "18304:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18304:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18294:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18294:17:13"
															},
															"nodeType": "YulIf",
															"src": "18291:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18343:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18354:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18361:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18350:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18350:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18343:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18263:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "18273:3:13",
														"type": ""
													}
												],
												"src": "18234:135:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_contract$_INagaKid_$494(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_contract$_INagaKid_$494__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := calldataload(add(headStart, 0x20))\n        value3 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient Balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"This tokenId is not owned by con\")\n        mstore(add(headStart, 96), \"tract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_507f035c670b11e911e1eb5937077419dc7c16add6610aed12b3d2f661e88ec0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Public mint is not open.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"haha Contract can't call me\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"You are already minted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Contract Mint is not approved.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Unauthorized PublicMint This Use\")\n        mstore(add(headStart, 96), \"r.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_44088db98f64bd7f2c584eff446b56f0c15b8c18215ca7ced6e447e24db3d2bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Private mint is not open.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Mint is not approved.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Contract are not in this minting\")\n        mstore(add(headStart, 96), \" round.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Over supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        end := add(pos, 84)\n    }\n    function abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Unauthorized WhitelistMint This \")\n        mstore(add(headStart, 96), \"User.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101ee5760003560e01c80639e6c88551161010d578063e02023a1116100a0578063f500cdfc1161006f578063f500cdfc146105e2578063f6b48e5514610616578063fa54080114610629578063ff05fe4a14610649578063ffdc61291461066957600080fd5b8063e02023a11461053f578063ef5fe79f14610573578063f055c7a914610589578063f2fde38b146105c257600080fd5b8063bff863ec116100dc578063bff863ec146104d7578063c4e41b22146104f7578063de6892c81461050c578063df4e58811461051f57600080fd5b80639e6c88551461041c578063a4435dfd1461043c578063a7bb580314610456578063b5abafa11461049457600080fd5b806351cff8d9116101855780638407ecc4116101545780638407ecc41461039f5780638907f3fa146103bf5780638da5cb5b146103de57806397aba7f9146103fc57600080fd5b806351cff8d91461032a5780636c19e7831461034a578063715018a61461036a5780637cb647591461037f57600080fd5b806324c37a85116101c157806324c37a851461029b5780632eb4a7ab146102cf57806342920a46146102e55780634c0f38c21461031557600080fd5b80630a25dea9146101f35780630e2d56cf1461021b5780631f5ac1b21461023d578063238ac9331461025d575b600080fd5b3480156101ff57600080fd5b50610208600081565b6040519081526020015b60405180910390f35b34801561022757600080fd5b5061023b610236366004611997565b6106af565b005b34801561024957600080fd5b506102086102583660046119d0565b6106e5565b34801561026957600080fd5b50600554610283906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610212565b3480156102a757600080fd5b506102087fb3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db381565b3480156102db57600080fd5b5061020860045481565b3480156102f157600080fd5b50610305610300366004611a90565b61072f565b6040519015158152602001610212565b34801561032157600080fd5b50610208610772565b34801561033657600080fd5b5061023b6103453660046119d0565b6107e5565b34801561035657600080fd5b5061023b6103653660046119d0565b610906565b34801561037657600080fd5b5061023b61099e565b34801561038b57600080fd5b5061023b61039a366004611af2565b6109d4565b3480156103ab57600080fd5b5061023b6103ba366004611b0b565b610a3c565b3480156103cb57600080fd5b5060055461030590610100900460ff1681565b3480156103ea57600080fd5b506000546001600160a01b0316610283565b34801561040857600080fd5b50610283610417366004611b44565b610bdc565b34801561042857600080fd5b5061023b6104373660046119d0565b610c5b565b34801561044857600080fd5b506005546103059060ff1681565b34801561046257600080fd5b50610476610471366004611b8b565b610ce1565b60408051938452602084019290925260ff1690820152606001610212565b3480156104a057600080fd5b506102086104af366004611bc8565b6001600160a01b03919091166000908152600760209081526040808320938352929052205490565b3480156104e357600080fd5b5061023b6104f2366004611bf4565b610d55565b34801561050357600080fd5b50610208610f05565b61023b61051a366004611c35565b610f4f565b34801561052b57600080fd5b50600254610283906001600160a01b031681565b34801561054b57600080fd5b506102087f5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec81565b34801561057f57600080fd5b5061020860035481565b34801561059557600080fd5b506103056105a43660046119d0565b6001600160a01b031660009081526008602052604090205460ff1690565b3480156105ce57600080fd5b5061023b6105dd3660046119d0565b6112d7565b3480156105ee57600080fd5b506102087f68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba81565b61023b610624366004611ca7565b61136f565b34801561063557600080fd5b50610208610644366004611af2565b61180c565b34801561065557600080fd5b5061023b610664366004611af2565b611847565b34801561067557600080fd5b50610305610684366004611bc8565b6001600160a01b03919091166000908152600660209081526040808320938352929052205460ff1690565b6000546001600160a01b031633146106e25760405162461bcd60e51b81526004016106d990611d29565b60405180910390fd5b50565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b60008061073b846106e5565b905060006107488261180c565b9050856001600160a01b031661075e8286610bdc565b6001600160a01b0316149695505050505050565b6002546040805163d5abeb0160e01b815290516000926001600160a01b03169163d5abeb019160048083019260209291908290030181865afa1580156107bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e09190611d5e565b905090565b6000546001600160a01b0316331461080f5760405162461bcd60e51b81526004016106d990611d29565b47806108545760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b60448201526064016106d9565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146108a1576040519150601f19603f3d011682016040523d82523d6000602084013e6108a6565b606091505b50509050806108b457600080fd5b604080516001600160a01b03851681526020810184905242918101919091527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906060015b60405180910390a1505050565b6000546001600160a01b031633146109305760405162461bcd60e51b81526004016106d990611d29565b600580546001600160a01b038381166201000081810262010000600160b01b031985161790945560408051949093049091168084526020840191909152917feeb293e1f8f3a9db91ade748726387ed1352ca78f5430c5f06fe3d1e1ad5057991015b60405180910390a15050565b6000546001600160a01b031633146109c85760405162461bcd60e51b81526004016106d990611d29565b6109d260006118af565b565b6000546001600160a01b031633146109fe5760405162461bcd60e51b81526004016106d990611d29565b600480549082905560408051828152602081018490527f123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe9101610992565b6000546001600160a01b03163314610a665760405162461bcd60e51b81526004016106d990611d29565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610aad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad19190611d5e565b905060008111610b1a5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b60448201526064016106d9565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820183905283169063a9059cbb906044016020604051808303816000875af1158015610b69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8d9190611d77565b50604080516001600160a01b038086168252841660208201529081018290524260608201527fb818a975f91276df8ba59329becbc23c793df0d503c19ac296c3c372a1fa0461906080016108f9565b600080600080610beb85610ce1565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015610c46573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000546001600160a01b03163314610c855760405162461bcd60e51b81526004016106d990611d29565b600280546001600160a01b038381166001600160a01b0319831681179093556040805191909216808252602082019390935283917fabdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d97391016108f9565b60008060008351604114610d375760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016106d9565b50505060208101516040820151606090920151909260009190911a90565b6000546001600160a01b03163314610d7f5760405162461bcd60e51b81526004016106d990611d29565b6040516331a9108f60e11b81526004810182905230906001600160a01b03841690636352211e90602401602060405180830381865afa158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea9190611d94565b6001600160a01b031614610e4e5760405162461bcd60e51b815260206004820152602560248201527f5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e6044820152641d1c9858dd60da1b60648201526084016106d9565b604051632142170760e11b81523060048201526001600160a01b038481166024830152604482018390528316906342842e0e90606401600060405180830381600087803b158015610e9e57600080fd5b505af1158015610eb2573d6000803e3d6000fd5b5050604080516001600160a01b038088168252861660208201529081018490524260608201527f0127a8d3f57942833f6930572bce52ad882683e36eeb5830d199d3fa4bfa9467925060800190506108f9565b600254604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa1580156107bc573d6000803e3d6000fd5b600260015403610fa15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106d9565b6002600190815560055460ff16151514610ffd5760405162461bcd60e51b815260206004820152601860248201527f5075626c6963206d696e74206973206e6f74206f70656e2e000000000000000060448201526064016106d9565b32331461104c5760405162461bcd60e51b815260206004820152601b60248201527f6861686120436f6e74726163742063616e27742063616c6c206d65000000000060448201526064016106d9565b3360009081526008602052604090205460ff1615156001036110aa5760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016106d9565b6002546040516355138f0d60e11b81523060048201526001600160a01b039091169063aa271e1a90602401602060405180830381865afa1580156110f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111169190611d77565b6111625760405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374204d696e74206973206e6f7420617070726f7665642e000060448201526064016106d9565b6111b8600560029054906101000a90046001600160a01b03163384848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061072f92505050565b61120f5760405162461bcd60e51b815260206004820152602260248201527f556e617574686f72697a6564205075626c69634d696e74205468697320557365604482015261391760f11b60648201526084016106d9565b3360008181526008602052604090819020805460ff191660019081179091556002549151632851206560e21b8152600481019390935260248301819052916001600160a01b039091169063a144819490604401600060405180830381600087803b15801561127c57600080fd5b505af1158015611290573d6000803e3d6000fd5b5050604080518481524260208201523393507fc1a73b31b32801ebbb4cae30b73eae4345be9f2915ea60306383c245ef8fac4492500160405180910390a250506001805550565b6000546001600160a01b031633146113015760405162461bcd60e51b81526004016106d990611d29565b6001600160a01b0381166113665760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106d9565b6106e2816118af565b6002600154036113c15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106d9565b60026001908155600554610100900460ff161515146114225760405162461bcd60e51b815260206004820152601960248201527f50726976617465206d696e74206973206e6f74206f70656e2e0000000000000060448201526064016106d9565b806114675760405162461bcd60e51b815260206004820152601560248201527426b4b73a1034b9903737ba1030b8383937bb32b21760591b60448201526064016106d9565b80600354146114c85760405162461bcd60e51b815260206004820152602760248201527f436f6e747261637420617265206e6f7420696e2074686973206d696e74696e67604482015266103937bab7321760c91b60648201526084016106d9565b6114d0610772565b826114d9610f05565b6114e39190611dc7565b1061151e5760405162461bcd60e51b815260206004820152600b60248201526a4f76657220737570706c7960a81b60448201526064016106d9565b33600090815260066020908152604080832084845290915290205460ff16156115835760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016106d9565b6002546040516355138f0d60e11b81523060048201526001600160a01b039091169063aa271e1a90602401602060405180830381865afa1580156115cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ef9190611d77565b61163b5760405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374204d696e74206973206e6f7420617070726f7665642e000060448201526064016106d9565b6116be848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506004546040516bffffffffffffffffffffffff193360601b16602082015260348101889052605481018790529092506074019050604051602081830303815290604052805190602001206118ff565b6117185760405162461bcd60e51b815260206004820152602560248201527f556e617574686f72697a65642057686974656c6973744d696e742054686973206044820152642ab9b2b91760d91b60648201526084016106d9565b3360008181526006602090815260408083208584528252808320805460ff19166001179055928252600781528282208483529052908120805484929061175f908490611dc7565b9091555050600254604051632851206560e21b8152336004820152602481018490526001600160a01b039091169063a144819490604401600060405180830381600087803b1580156117b057600080fd5b505af11580156117c4573d6000803e3d6000fd5b5050604080518581524260208201523393507fe9e607753e80542a9021d5149990f18919907f0136fad424eaac3d15056ccf6e92500160405180910390a25050600180555050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610712565b6000546001600160a01b031633146118715760405162461bcd60e51b81526004016106d990611d29565b600380549082905560408051828152602081018490527f521ec96875ca228cd2fc1dbd4c927a34328c9ce1a83bcb8c1f633f012c90d7859101610992565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008261190c8584611915565b14949350505050565b600081815b845181101561198157600085828151811061193757611937611ddf565b6020026020010151905080831161195d576000838152602082905260409020925061196e565b600081815260208490526040902092505b508061197981611df5565b91505061191a565b509392505050565b80151581146106e257600080fd5b6000602082840312156119a957600080fd5b81356119b481611989565b9392505050565b6001600160a01b03811681146106e257600080fd5b6000602082840312156119e257600080fd5b81356119b4816119bb565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611a1457600080fd5b813567ffffffffffffffff80821115611a2f57611a2f6119ed565b604051601f8301601f19908116603f01168101908282118183101715611a5757611a576119ed565b81604052838152866020858801011115611a7057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611aa557600080fd5b8335611ab0816119bb565b92506020840135611ac0816119bb565b9150604084013567ffffffffffffffff811115611adc57600080fd5b611ae886828701611a03565b9150509250925092565b600060208284031215611b0457600080fd5b5035919050565b60008060408385031215611b1e57600080fd5b8235611b29816119bb565b91506020830135611b39816119bb565b809150509250929050565b60008060408385031215611b5757600080fd5b82359150602083013567ffffffffffffffff811115611b7557600080fd5b611b8185828601611a03565b9150509250929050565b600060208284031215611b9d57600080fd5b813567ffffffffffffffff811115611bb457600080fd5b611bc084828501611a03565b949350505050565b60008060408385031215611bdb57600080fd5b8235611be6816119bb565b946020939093013593505050565b600080600060608486031215611c0957600080fd5b8335611c14816119bb565b92506020840135611c24816119bb565b929592945050506040919091013590565b60008060208385031215611c4857600080fd5b823567ffffffffffffffff80821115611c6057600080fd5b818501915085601f830112611c7457600080fd5b813581811115611c8357600080fd5b866020828501011115611c9557600080fd5b60209290920196919550909350505050565b60008060008060608587031215611cbd57600080fd5b843567ffffffffffffffff80821115611cd557600080fd5b818701915087601f830112611ce957600080fd5b813581811115611cf857600080fd5b8860208260051b8501011115611d0d57600080fd5b6020928301999098509187013596604001359550909350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611d7057600080fd5b5051919050565b600060208284031215611d8957600080fd5b81516119b481611989565b600060208284031215611da657600080fd5b81516119b4816119bb565b634e487b7160e01b600052601160045260246000fd5b60008219821115611dda57611dda611db1565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201611e0757611e07611db1565b506001019056fea2646970667358221220c97459e70061737be72dec8b73080165ef30af9ced7eb5e0fc84b3c36a75466f64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E6C8855 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xE02023A1 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF500CDFC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF500CDFC EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xF6B48E55 EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0xFF05FE4A EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0xFFDC6129 EQ PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE02023A1 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xEF5FE79F EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0xF055C7A9 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBFF863EC GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xBFF863EC EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xDE6892C8 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xDF4E5881 EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E6C8855 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xA4435DFD EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0xB5ABAFA1 EQ PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51CFF8D9 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x8407ECC4 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x8407ECC4 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x8907F3FA EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24C37A85 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x24C37A85 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x4C0F38C2 EQ PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA25DEA9 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xE2D56CF EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x25D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D0 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x283 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH32 0xB3C595E55271590809F54E2F4FC3A582754F45B104DD3C41666E2AD310493DB3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x772 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D0 JUMP JUMPDEST PUSH2 0x7E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D0 JUMP JUMPDEST PUSH2 0x906 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x99E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x9D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1B0B JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x305 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x283 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH2 0x417 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0xBDC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D0 JUMP JUMPDEST PUSH2 0xC5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x305 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x476 PUSH2 0x471 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x4AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0xD55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x51A CALLDATASIZE PUSH1 0x4 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x283 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH32 0x5D8E12C39142FF96D79D04D15D1BA1269E4FE57BB9D26F43523628B34BA108EC DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x19D0 JUMP JUMPDEST PUSH2 0x12D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH32 0x68E7D51FDB912CB107DDA2E59B053D87FCCA666DD0EF5339CD3474CCB5276BBA DUP2 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x624 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CA7 JUMP JUMPDEST PUSH2 0x136F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x644 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x180C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x664 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x1847 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0x684 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x73B DUP5 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x748 DUP3 PUSH2 0x180C JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x75E DUP3 DUP7 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5ABEB01 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD5ABEB01 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x80F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x854 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH3 0x10000 DUP2 DUP2 MUL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH32 0xEEB293E1F8F3A9DB91ADE748726387ED1352CA78F5430C5F06FE3D1E1AD50579 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH2 0x9D2 PUSH1 0x0 PUSH2 0x18AF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE SWAP2 ADD PUSH2 0x992 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD1 SWAP2 SWAP1 PUSH2 0x1D5E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0xB818A975F91276DF8BA59329BECBC23C793DF0D503C19AC296C3C372A1FA0461 SWAP1 PUSH1 0x80 ADD PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xBEB DUP6 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC46 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 SWAP2 PUSH32 0xABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973 SWAP2 ADD PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDEA SWAP2 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E4964206973206E6F74206F776E656420627920636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x127A8D3F57942833F6930572BCE52AD882683E36EEB5830D199D3FA4BFA9467 SWAP3 POP PUSH1 0x80 ADD SWAP1 POP PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xFA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xFFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C6963206D696E74206973206E6F74206F70656E2E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0x104C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6861686120436F6E74726163742063616E27742063616C6C206D650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x10AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x55138F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAA271E1A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1116 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x11B8 PUSH1 0x5 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x72F SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x120F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A6564205075626C69634D696E74205468697320557365 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3917 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6D9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH4 0x28512065 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA1448194 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x127C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1290 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP4 POP PUSH32 0xC1A73B31B32801EBBB4CAE30B73EAE4345BE9F2915EA60306383C245EF8FAC44 SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1366 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x6E2 DUP2 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x13C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1422 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726976617465206D696E74206973206E6F74206F70656E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST DUP1 PUSH2 0x1467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x26B4B73A1034B9903737BA1030B8383937BB32B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST DUP1 PUSH1 0x3 SLOAD EQ PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420617265206E6F7420696E2074686973206D696E74696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x103937BAB73217 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x14D0 PUSH2 0x772 JUMP JUMPDEST DUP3 PUSH2 0x14D9 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x14E3 SWAP2 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST LT PUSH2 0x151E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4F76657220737570706C79 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1583 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x55138F0D PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAA271E1A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15EF SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x163B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x16BE DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH1 0x74 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x18FF JUMP JUMPDEST PUSH2 0x1718 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642057686974656C6973744D696E74205468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2AB9B2B917 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6D9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0x7 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x175F SWAP1 DUP5 SWAP1 PUSH2 0x1DC7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x28512065 PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA1448194 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP4 POP PUSH32 0xE9E607753E80542A9021D5149990F18919907F0136FAD424EAAC3D15056CCF6E SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x712 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1871 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x521EC96875CA228CD2FC1DBD4C927A34328C9CE1A83BCB8C1F633F012C90D785 SWAP2 ADD PUSH2 0x992 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x190C DUP6 DUP5 PUSH2 0x1915 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1981 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1937 JUMPI PUSH2 0x1937 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x195D JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x196E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x1979 DUP2 PUSH2 0x1DF5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x191A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19B4 DUP2 PUSH2 0x1989 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19B4 DUP2 PUSH2 0x19BB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A2F JUMPI PUSH2 0x1A2F PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1A57 JUMPI PUSH2 0x1A57 PUSH2 0x19ED JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1A70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1AB0 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1AC0 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE8 DUP7 DUP3 DUP8 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1B29 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B39 DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B81 DUP6 DUP3 DUP7 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BC0 DUP5 DUP3 DUP6 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1BE6 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1C14 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1C24 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1C60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1C83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1C95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1CD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1CF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1D0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP10 SWAP1 SWAP9 POP SWAP2 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x40 ADD CALLDATALOAD SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x19B4 DUP2 PUSH2 0x1989 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x19B4 DUP2 PUSH2 0x19BB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1DDA JUMPI PUSH2 0x1DDA PUSH2 0x1DB1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1E07 JUMPI PUSH2 0x1E07 PUSH2 0x1DB1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH21 0x59E70061737BE72DEC8B73080165EF30AF9CED7EB5 0xE0 0xFC DUP5 0xB3 0xC3 PUSH11 0x75466F64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "428:6546:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;826:100;;;;;;;;;;-1:-1:-1;826:100:8;860:66;826:100;;;;;160:25:13;;;148:2;133:18;826:100:8;;;;;;;;2425:70;;;;;;;;;;-1:-1:-1;2425:70:8;;;;;:::i;:::-;;:::i;:::-;;99:160:9;;;;;;;;;;-1:-1:-1;99:160:9;;;;;:::i;:::-;;:::i;1213:21:8:-;;;;;;;;;;-1:-1:-1;1213:21:8;;;;;;;-1:-1:-1;;;;;1213:21:8;;;;;;-1:-1:-1;;;;;1117:32:13;;;1099:51;;1087:2;1072:18;1213:21:8;953:203:13;661:84:8;;;;;;;;;;;;710:35;661:84;;1090:25;;;;;;;;;;;;;;;;769:350:9;;;;;;;;;;-1:-1:-1;769:350:9;;;;;:::i;:::-;;:::i;:::-;;;2782:14:13;;2775:22;2757:41;;2745:2;2730:18;769:350:9;2617:187:13;6862:107:8;;;;;;;;;;;;;:::i;5370:338::-;;;;;;;;;;-1:-1:-1;5370:338:8;;;;;:::i;:::-;;:::i;3004:184::-;;;;;;;;;;-1:-1:-1;3004:184:8;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;3196:220:8:-;;;;;;;;;;-1:-1:-1;3196:220:8;;;;;:::i;:::-;;:::i;5716:377::-;;;;;;;;;;-1:-1:-1;5716:377:8;;;;;:::i;:::-;;:::i;1167:37::-;;;;;;;;;;-1:-1:-1;1167:37:8;;;;;;;;;;;1036:85:0;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;1127:274:9;;;;;;;;;;-1:-1:-1;1127:274:9;;;;;:::i;:::-;;:::i;2503:288:8:-;;;;;;;;;;-1:-1:-1;2503:288:8;;;;;:::i;:::-;;:::i;1124:36::-;;;;;;;;;;-1:-1:-1;1124:36:8;;;;;;;;1409:891:9;;;;;;;;;;-1:-1:-1;1409:891:9;;;;;:::i;:::-;;:::i;:::-;;;;4753:25:13;;;4809:2;4794:18;;4787:34;;;;4869:4;4857:17;4837:18;;;4830:45;4741:2;4726:18;1409:891:9;4555:326:13;6592:143:8;;;;;;;;;;-1:-1:-1;6592:143:8;;;;;:::i;:::-;-1:-1:-1;;;;;6695:24:8;;;;6668:7;6695:24;;;:17;:24;;;;;;;;:32;;;;;;;;;6592:143;6101:343;;;;;;;;;;-1:-1:-1;6101:343:8;;;;;:::i;:::-;;:::i;6743:111::-;;;;;;;;;;;;;:::i;4427:815::-;;;;;;:::i;:::-;;:::i;1014:31::-;;;;;;;;;;-1:-1:-1;1014:31:8;;;;-1:-1:-1;;;;;1014:31:8;;;939:66;;;;;;;;;;;;979:26;939:66;;1052:31;;;;;;;;;;;;;;;;5250:112;;;;;;;;;;-1:-1:-1;5250:112:8;;;;;:::i;:::-;-1:-1:-1;;;;;5332:22:8;5309:4;5332:22;;;:15;:22;;;;;;;;;5250:112;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;504:80:8:-;;;;;;;;;;;;551:33;504:80;;3424:995;;;;;;:::i;:::-;;:::i;267:494:9:-;;;;;;;;;;-1:-1:-1;267:494:9;;;;;:::i;:::-;;:::i;2799:197:8:-;;;;;;;;;;-1:-1:-1;2799:197:8;;;;;:::i;:::-;;:::i;6452:132::-;;;;;;;;;;-1:-1:-1;6452:132:8;;;;;:::i;:::-;-1:-1:-1;;;;;6548:20:8;;;;6524:4;6548:20;;;:13;:20;;;;;;;;:28;;;;;;;;;;;6452:132;2425:70;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;2425:70:8;:::o;99:160:9:-;212:38;;-1:-1:-1;;7837:2:13;7833:15;;;7829:24;;212:38:9;;;7817:37:13;244:4:9;7888:15:13;;7884:24;7870:12;;;7863:46;175:7:9;;7925:12:13;;212:38:9;;;;;;;;;;;;;202:49;;;;;;195:56;;99:160;;;:::o;769:350::-;896:4;913:19;935:21;950:5;935:14;:21::i;:::-;913:43;;967:28;998:36;1022:11;998:23;:36::i;:::-;967:67;;1104:7;-1:-1:-1;;;;;1054:57:9;:46;1068:20;1090:9;1054:13;:46::i;:::-;-1:-1:-1;;;;;1054:57:9;;;769:350;-1:-1:-1;;;;;;769:350:9:o;6862:107:8:-;6934:15;;:27;;;-1:-1:-1;;;6934:27:8;;;;6907:7;;-1:-1:-1;;;;;6934:15:8;;:25;;:27;;;;;;;;;;;;;;:15;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6927:34;;6862:107;:::o;5370:338::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5454:21:8::1;5494::::0;5486:54:::1;;;::::0;-1:-1:-1;;;5486:54:8;;8339:2:13;5486:54:8::1;::::0;::::1;8321:21:13::0;8378:2;8358:18;;;8351:30;-1:-1:-1;;;8397:18:13;;;8390:50;8457:18;;5486:54:8::1;8137:344:13::0;5486:54:8::1;5552:11;5568:3;-1:-1:-1::0;;;;;5568:8:8::1;5584:17;5568:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5551:56;;;5626:6;5618:15;;;::::0;::::1;;5651:49;::::0;;-1:-1:-1;;;;;8916:32:13;;8898:51;;8980:2;8965:18;;8958:34;;;5684:15:8::1;9008:18:13::0;;;9001:34;;;;5651:49:8::1;::::0;8886:2:13;8871:18;5651:49:8::1;;;;;;;;5418:290;;5370:338:::0;:::o;3004:184::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3092:6:8::1;::::0;;-1:-1:-1;;;;;3109:16:8;;::::1;3092:6:::0;3109:16;;::::1;-1:-1:-1::0;;;;;;3109:16:8;::::1;;::::0;;;3143:37:::1;::::0;;3092:6;;;::::1;::::0;;::::1;9258:34:13::0;;;9323:2;9308:18;;9301:43;;;;3092:6:8;3143:37:::1;::::0;9193:18:13;3143:37:8::1;;;;;;;;3057:131;3004:184:::0;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3196:220:8:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3296:10:8::1;::::0;;3317:24;;;;3359:49:::1;::::0;;9529:25:13;;;9585:2;9570:18;;9563:34;;;3359:49:8::1;::::0;9502:18:13;3359:49:8::1;9355:248:13::0;5716:377:8;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5826:42:8::1;::::0;-1:-1:-1;;;5826:42:8;;5862:4:::1;5826:42;::::0;::::1;1099:51:13::0;5801:22:8::1;::::0;-1:-1:-1;;;;;5826:27:8;::::1;::::0;::::1;::::0;1072:18:13;;5826:42:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5801:67;;5907:1;5887:17;:21;5879:54;;;::::0;-1:-1:-1;;;5879:54:8;;8339:2:13;5879:54:8::1;::::0;::::1;8321:21:13::0;8378:2;8358:18;;;8351:30;-1:-1:-1;;;8397:18:13;;;8390:50;8457:18;;5879:54:8::1;8137:344:13::0;5879:54:8::1;5944:50;::::0;-1:-1:-1;;;5944:50:8;;-1:-1:-1;;;;;9800:32:13;;;5944:50:8::1;::::0;::::1;9782:51:13::0;9849:18;;;9842:34;;;5944:26:8;::::1;::::0;::::1;::::0;9755:18:13;;5944:50:8::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6020:65:8::1;::::0;;-1:-1:-1;;;;;10424:15:13;;;10406:34;;10476:15;;10471:2;10456:18;;10449:43;10508:18;;;10501:34;;;6069:15:8::1;10566:2:13::0;10551:18;;10544:34;6020:65:8::1;::::0;10355:3:13;10340:19;6020:65:8::1;10137:447:13::0;1127:274:9;1252:7;1273:9;1284;1295:7;1306:26;1321:10;1306:14;:26::i;:::-;1352:41;;;;;;;;;;;;10816:25:13;;;10889:4;10877:17;;10857:18;;;10850:45;;;;10911:18;;;10904:34;;;10954:18;;;10947:34;;;1272:60:9;;-1:-1:-1;1272:60:9;;-1:-1:-1;1272:60:9;-1:-1:-1;1352:41:9;;10788:19:13;;1352:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1352:41:9;;-1:-1:-1;;1352:41:9;;;1127:274;-1:-1:-1;;;;;;;1127:274:9:o;2503:288:8:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2610:15:8::1;::::0;;-1:-1:-1;;;;;2637:26:8;;::::1;-1:-1:-1::0;;;;;;2637:26:8;::::1;::::0;::::1;::::0;;;2732:51:::1;::::0;;2610:15;;;::::1;9258:34:13::0;;;9323:2;9308:18;;9301:43;;;;2637:26:8;;2732:51:::1;::::0;9193:18:13;2732:51:8::1;9046:304:13::0;1409:891:9;1513:9;1537;1561:7;1604:3;:10;1618:2;1604:16;1596:53;;;;-1:-1:-1;;;1596:53:9;;11194:2:13;1596:53:9;;;11176:21:13;11233:2;11213:18;;;11206:30;11272:26;11252:18;;;11245:54;11316:18;;1596:53:9;10992:348:13;1596:53:9;-1:-1:-1;;;2058:2:9;2049:12;;2043:19;2128:2;2119:12;;2113:19;2235:2;2226:12;;;2220:19;2043;;2217:1;2212:28;;;;;1409:891::o;6101:343:8:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6201:31:8::1;::::0;-1:-1:-1;;;6201:31:8;;::::1;::::0;::::1;160:25:13::0;;;6244:4:8::1;::::0;-1:-1:-1;;;;;6201:21:8;::::1;::::0;::::1;::::0;133:18:13;;6201:31:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6201:48:8::1;;6193:98;;;::::0;-1:-1:-1;;;6193:98:8;;11803:2:13;6193:98:8::1;::::0;::::1;11785:21:13::0;11842:2;11822:18;;;11815:30;11881:34;11861:18;;;11854:62;-1:-1:-1;;;11932:18:13;;;11925:35;11977:19;;6193:98:8::1;11601:401:13::0;6193:98:8::1;6304:60;::::0;-1:-1:-1;;;6304:60:8;;6343:4:::1;6304:60;::::0;::::1;12247:34:13::0;-1:-1:-1;;;;;12317:15:13;;;12297:18;;;12290:43;12349:18;;;12342:34;;;6304:30:8;::::1;::::0;::::1;::::0;12182:18:13;;6304:60:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6390:46:8::1;::::0;;-1:-1:-1;;;;;10424:15:13;;;10406:34;;10476:15;;10471:2;10456:18;;10449:43;10508:18;;;10501:34;;;6420:15:8::1;10566:2:13::0;10551:18;;10544:34;6390:46:8::1;::::0;-1:-1:-1;10355:3:13;10340:19;;-1:-1:-1;6390:46:8::1;10137:447:13::0;6743:111:8;6817:15;;:29;;;-1:-1:-1;;;6817:29:8;;;;6790:7;;-1:-1:-1;;;;;6817:15:8;;:27;;:29;;;;;;;;;;;;;;:15;:29;;;;;;;;;;;;;;4427:815;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;12589:2:13;2317:63:1;;;12571:21:13;12628:2;12608:18;;;12601:30;12667:33;12647:18;;;12640:61;12718:18;;2317:63:1;12387:355:13;2317:63:1;1744:1;2455:7;:18;;;4517:16:8::1;::::0;::::1;;:24;;;4509:61;;;::::0;-1:-1:-1;;;4509:61:8;;12949:2:13;4509:61:8::1;::::0;::::1;12931:21:13::0;12988:2;12968:18;;;12961:30;13027:26;13007:18;;;13000:54;13071:18;;4509:61:8::1;12747:348:13::0;4509:61:8::1;4589:9;4602:10;4589:23;4581:63;;;::::0;-1:-1:-1;;;4581:63:8;;13302:2:13;4581:63:8::1;::::0;::::1;13284:21:13::0;13341:2;13321:18;;;13314:30;13380:29;13360:18;;;13353:57;13427:18;;4581:63:8::1;13100:351:13::0;4581:63:8::1;4678:10;5309:4:::0;5332:22;;;:15;:22;;;;;;;;4663:34:::1;;4693:4;4663:34:::0;4655:70:::1;;;::::0;-1:-1:-1;;;4655:70:8;;13658:2:13;4655:70:8::1;::::0;::::1;13640:21:13::0;13697:2;13677:18;;;13670:30;-1:-1:-1;;;13716:18:13;;;13709:53;13779:18;;4655:70:8::1;13456:347:13::0;4655:70:8::1;4815:15;::::0;:39:::1;::::0;-1:-1:-1;;;4815:39:8;;4848:4:::1;4815:39;::::0;::::1;1099:51:13::0;-1:-1:-1;;;;;4815:15:8;;::::1;::::0;:24:::1;::::0;1072:18:13;;4815:39:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4807:82;;;::::0;-1:-1:-1;;;4807:82:8;;14010:2:13;4807:82:8::1;::::0;::::1;13992:21:13::0;14049:2;14029:18;;;14022:30;14088:32;14068:18;;;14061:60;14138:18;;4807:82:8::1;13808:354:13::0;4807:82:8::1;4908:30;4915:6;;;;;;;;;-1:-1:-1::0;;;;;4915:6:8::1;4922:10;4933:4;;4908:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;4908:6:8::1;::::0;-1:-1:-1;;;4908:30:8:i:1;:::-;4900:77;;;::::0;-1:-1:-1;;;4900:77:8;;14369:2:13;4900:77:8::1;::::0;::::1;14351:21:13::0;14408:2;14388:18;;;14381:30;14447:34;14427:18;;;14420:62;-1:-1:-1;;;14498:18:13;;;14491:32;14540:19;;4900:77:8::1;14167:398:13::0;4900:77:8::1;5085:10;5036:15;5069:27:::0;;;:15:::1;:27;::::0;;;;;;:34;;-1:-1:-1;;5069:34:8::1;5054:1;5069:34:::0;;::::1;::::0;;;5114:15:::1;::::0;:44;;-1:-1:-1;;;5114:44:8;;::::1;::::0;::::1;9782:51:13::0;;;;9849:18;;;9842:34;;;5054:1:8;-1:-1:-1;;;;;5114:15:8;;::::1;::::0;:24:::1;::::0;9755:18:13;;5114:44:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5184:48:8::1;::::0;;9529:25:13;;;5216:15:8::1;9585:2:13::0;9570:18;;9563:34;5197:10:8::1;::::0;-1:-1:-1;5184:48:8::1;::::0;-1:-1:-1;9502:18:13;5184:48:8::1;;;;;;;-1:-1:-1::0;;1701:1:1;2628:22;;-1:-1:-1;4427:815:8:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;15025:2:13;1998:73:0::1;::::0;::::1;15007:21:13::0;15064:2;15044:18;;;15037:30;15103:34;15083:18;;;15076:62;-1:-1:-1;;;15154:18:13;;;15147:36;15200:19;;1998:73:0::1;14823:402:13::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;3424:995:8:-:0;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;12589:2:13;2317:63:1;;;12571:21:13;12628:2;12608:18;;;12601:30;12667:33;12647:18;;;12640:61;12718:18;;2317:63:1;12387:355:13;2317:63:1;1744:1;2455:7;:18;;;3554:17:8::1;::::0;::::1;::::0;::::1;;;:25;;;3546:62;;;::::0;-1:-1:-1;;;3546:62:8;;15432:2:13;3546:62:8::1;::::0;::::1;15414:21:13::0;15471:2;15451:18;;;15444:30;15510:27;15490:18;;;15483:55;15555:18;;3546:62:8::1;15230:349:13::0;3546:62:8::1;3627:6:::0;3619:50:::1;;;::::0;-1:-1:-1;;;3619:50:8;;15786:2:13;3619:50:8::1;::::0;::::1;15768:21:13::0;15825:2;15805:18;;;15798:30;-1:-1:-1;;;15844:18:13;;;15837:51;15905:18;;3619:50:8::1;15584:345:13::0;3619:50:8::1;3708:6;3688:16;;:26;3680:78;;;::::0;-1:-1:-1;;;3680:78:8;;16136:2:13;3680:78:8::1;::::0;::::1;16118:21:13::0;16175:2;16155:18;;;16148:30;16214:34;16194:18;;;16187:62;-1:-1:-1;;;16265:18:13;;;16258:37;16312:19;;3680:78:8::1;15934:403:13::0;3680:78:8::1;3806:14;:12;:14::i;:::-;3796:7;3777:16;:14;:16::i;:::-;:26;;;;:::i;:::-;:43;3769:67;;;::::0;-1:-1:-1;;;3769:67:8;;16809:2:13;3769:67:8::1;::::0;::::1;16791:21:13::0;16848:2;16828:18;;;16821:30;-1:-1:-1;;;16867:18:13;;;16860:41;16918:18;;3769:67:8::1;16607:335:13::0;3769:67:8::1;3868:10;6524:4:::0;6548:20;;;:13;:20;;;;;;;;:28;;;;;;;;;;;3855:40:::1;3847:76;;;::::0;-1:-1:-1;;;3847:76:8;;13658:2:13;3847:76:8::1;::::0;::::1;13640:21:13::0;13697:2;13677:18;;;13670:30;-1:-1:-1;;;13716:18:13;;;13709:53;13779:18;;3847:76:8::1;13456:347:13::0;3847:76:8::1;3942:15;::::0;:39:::1;::::0;-1:-1:-1;;;3942:39:8;;3975:4:::1;3942:39;::::0;::::1;1099:51:13::0;-1:-1:-1;;;;;3942:15:8;;::::1;::::0;:24:::1;::::0;1072:18:13;;3942:39:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3934:82;;;::::0;-1:-1:-1;;;3934:82:8;;14010:2:13;3934:82:8::1;::::0;::::1;13992:21:13::0;14049:2;14029:18;;;14022:30;14088:32;14068:18;;;14061:60;14138:18;;3934:82:8::1;13808:354:13::0;3934:82:8::1;4035:96;4054:6;;4035:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;4062:10:8::1;::::0;4084:45:::1;::::0;-1:-1:-1;;4101:10:8::1;17152:2:13::0;17148:15;17144:53;4084:45:8::1;::::0;::::1;17132:66:13::0;17214:12;;;17207:28;;;17251:12;;;17244:28;;;4062:10:8;;-1:-1:-1;17288:12:13;;;-1:-1:-1;4084:45:8::1;;;;;;;;;;;;4074:56;;;;;;4035:18;:96::i;:::-;4027:146;;;::::0;-1:-1:-1;;;4027:146:8;;17513:2:13;4027:146:8::1;::::0;::::1;17495:21:13::0;17552:2;17532:18;;;17525:30;17591:34;17571:18;;;17564:62;-1:-1:-1;;;17642:18:13;;;17635:35;17687:19;;4027:146:8::1;17311:401:13::0;4027:146:8::1;4200:10;4186:25;::::0;;;:13:::1;:25;::::0;;;;;;;:33;;;;;;;;:40;;-1:-1:-1;;4186:40:8::1;4222:4;4186:40;::::0;;4237:29;;;:17:::1;:29:::0;;;;;:37;;;;;;;;:48;;4278:7;;4186:25;4237:48:::1;::::0;4278:7;;4237:48:::1;:::i;:::-;::::0;;;-1:-1:-1;;4298:15:8::1;::::0;:44:::1;::::0;-1:-1:-1;;;4298:44:8;;4323:10:::1;4298:44;::::0;::::1;9782:51:13::0;9849:18;;;9842:34;;;-1:-1:-1;;;;;4298:15:8;;::::1;::::0;:24:::1;::::0;9755:18:13;;4298:44:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4360:51:8::1;::::0;;9529:25:13;;;4395:15:8::1;9585:2:13::0;9570:18;;9563:34;4374:10:8::1;::::0;-1:-1:-1;4360:51:8::1;::::0;-1:-1:-1;9502:18:13;4360:51:8::1;;;;;;;-1:-1:-1::0;;1701:1:1;2628:22;;-1:-1:-1;;3424:995:8:o;267:494:9:-;611:127;;17959:66:13;611:127:9;;;17947:79:13;18042:12;;;18035:28;;;370:7:9;;18079:12:13;;611:127:9;17717:380:13;2799:197:8;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2884:16:8::1;::::0;;2911:25;;;;2954:34:::1;::::0;;9529:25:13;;;9585:2;9570:18;;9563:34;;;2954::8::1;::::0;9502:18:13;2954:34:8::1;9355:248:13::0;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1154:184:5:-;1275:4;1327;1298:25;1311:5;1318:4;1298:12;:25::i;:::-;:33;;1154:184;-1:-1:-1;;;;1154:184:5:o;1689:662::-;1772:7;1814:4;1772:7;1828:488;1852:5;:12;1848:1;:16;1828:488;;;1885:20;1908:5;1914:1;1908:8;;;;;;;;:::i;:::-;;;;;;;1885:31;;1950:12;1934;:28;1930:376;;2425:13;2473:15;;;2508:4;2501:15;;;2554:4;2538:21;;2060:57;;1930:376;;;2425:13;2473:15;;;2508:4;2501:15;;;2554:4;2538:21;;2234:57;;1930:376;-1:-1:-1;1866:3:5;;;;:::i;:::-;;;;1828:488;;;-1:-1:-1;2332:12:5;1689:662;-1:-1:-1;;;1689:662:5:o;196:118:13:-;282:5;275:13;268:21;261:5;258:32;248:60;;304:1;301;294:12;319:241;375:6;428:2;416:9;407:7;403:23;399:32;396:52;;;444:1;441;434:12;396:52;483:9;470:23;502:28;524:5;502:28;:::i;:::-;549:5;319:241;-1:-1:-1;;;319:241:13:o;565:131::-;-1:-1:-1;;;;;640:31:13;;630:42;;620:70;;686:1;683;676:12;701:247;760:6;813:2;801:9;792:7;788:23;784:32;781:52;;;829:1;826;819:12;781:52;868:9;855:23;887:31;912:5;887:31;:::i;1161:127::-;1222:10;1217:3;1213:20;1210:1;1203:31;1253:4;1250:1;1243:15;1277:4;1274:1;1267:15;1293:718;1335:5;1388:3;1381:4;1373:6;1369:17;1365:27;1355:55;;1406:1;1403;1396:12;1355:55;1442:6;1429:20;1468:18;1505:2;1501;1498:10;1495:36;;;1511:18;;:::i;:::-;1586:2;1580:9;1554:2;1640:13;;-1:-1:-1;;1636:22:13;;;1660:2;1632:31;1628:40;1616:53;;;1684:18;;;1704:22;;;1681:46;1678:72;;;1730:18;;:::i;:::-;1770:10;1766:2;1759:22;1805:2;1797:6;1790:18;1851:3;1844:4;1839:2;1831:6;1827:15;1823:26;1820:35;1817:55;;;1868:1;1865;1858:12;1817:55;1932:2;1925:4;1917:6;1913:17;1906:4;1898:6;1894:17;1881:54;1979:1;1972:4;1967:2;1959:6;1955:15;1951:26;1944:37;1999:6;1990:15;;;;;;1293:718;;;;:::o;2016:596::-;2102:6;2110;2118;2171:2;2159:9;2150:7;2146:23;2142:32;2139:52;;;2187:1;2184;2177:12;2139:52;2226:9;2213:23;2245:31;2270:5;2245:31;:::i;:::-;2295:5;-1:-1:-1;2352:2:13;2337:18;;2324:32;2365:33;2324:32;2365:33;:::i;:::-;2417:7;-1:-1:-1;2475:2:13;2460:18;;2447:32;2502:18;2491:30;;2488:50;;;2534:1;2531;2524:12;2488:50;2557:49;2598:7;2589:6;2578:9;2574:22;2557:49;:::i;:::-;2547:59;;;2016:596;;;;;:::o;2991:180::-;3050:6;3103:2;3091:9;3082:7;3078:23;3074:32;3071:52;;;3119:1;3116;3109:12;3071:52;-1:-1:-1;3142:23:13;;2991:180;-1:-1:-1;2991:180:13:o;3176:388::-;3244:6;3252;3305:2;3293:9;3284:7;3280:23;3276:32;3273:52;;;3321:1;3318;3311:12;3273:52;3360:9;3347:23;3379:31;3404:5;3379:31;:::i;:::-;3429:5;-1:-1:-1;3486:2:13;3471:18;;3458:32;3499:33;3458:32;3499:33;:::i;:::-;3551:7;3541:17;;;3176:388;;;;;:::o;3569:::-;3646:6;3654;3707:2;3695:9;3686:7;3682:23;3678:32;3675:52;;;3723:1;3720;3713:12;3675:52;3759:9;3746:23;3736:33;;3820:2;3809:9;3805:18;3792:32;3847:18;3839:6;3836:30;3833:50;;;3879:1;3876;3869:12;3833:50;3902:49;3943:7;3934:6;3923:9;3919:22;3902:49;:::i;:::-;3892:59;;;3569:388;;;;;:::o;4230:320::-;4298:6;4351:2;4339:9;4330:7;4326:23;4322:32;4319:52;;;4367:1;4364;4357:12;4319:52;4407:9;4394:23;4440:18;4432:6;4429:30;4426:50;;;4472:1;4469;4462:12;4426:50;4495:49;4536:7;4527:6;4516:9;4512:22;4495:49;:::i;:::-;4485:59;4230:320;-1:-1:-1;;;;4230:320:13:o;4886:315::-;4954:6;4962;5015:2;5003:9;4994:7;4990:23;4986:32;4983:52;;;5031:1;5028;5021:12;4983:52;5070:9;5057:23;5089:31;5114:5;5089:31;:::i;:::-;5139:5;5191:2;5176:18;;;;5163:32;;-1:-1:-1;;;4886:315:13:o;5206:456::-;5283:6;5291;5299;5352:2;5340:9;5331:7;5327:23;5323:32;5320:52;;;5368:1;5365;5358:12;5320:52;5407:9;5394:23;5426:31;5451:5;5426:31;:::i;:::-;5476:5;-1:-1:-1;5533:2:13;5518:18;;5505:32;5546:33;5505:32;5546:33;:::i;:::-;5206:456;;5598:7;;-1:-1:-1;;;5652:2:13;5637:18;;;;5624:32;;5206:456::o;5667:591::-;5737:6;5745;5798:2;5786:9;5777:7;5773:23;5769:32;5766:52;;;5814:1;5811;5804:12;5766:52;5854:9;5841:23;5883:18;5924:2;5916:6;5913:14;5910:34;;;5940:1;5937;5930:12;5910:34;5978:6;5967:9;5963:22;5953:32;;6023:7;6016:4;6012:2;6008:13;6004:27;5994:55;;6045:1;6042;6035:12;5994:55;6085:2;6072:16;6111:2;6103:6;6100:14;6097:34;;;6127:1;6124;6117:12;6097:34;6172:7;6167:2;6158:6;6154:2;6150:15;6146:24;6143:37;6140:57;;;6193:1;6190;6183:12;6140:57;6224:2;6216:11;;;;;6246:6;;-1:-1:-1;5667:591:13;;-1:-1:-1;;;;5667:591:13:o;6487:757::-;6591:6;6599;6607;6615;6668:2;6656:9;6647:7;6643:23;6639:32;6636:52;;;6684:1;6681;6674:12;6636:52;6724:9;6711:23;6753:18;6794:2;6786:6;6783:14;6780:34;;;6810:1;6807;6800:12;6780:34;6848:6;6837:9;6833:22;6823:32;;6893:7;6886:4;6882:2;6878:13;6874:27;6864:55;;6915:1;6912;6905:12;6864:55;6955:2;6942:16;6981:2;6973:6;6970:14;6967:34;;;6997:1;6994;6987:12;6967:34;7052:7;7045:4;7035:6;7032:1;7028:14;7024:2;7020:23;7016:34;7013:47;7010:67;;;7073:1;7070;7063:12;7010:67;7104:4;7096:13;;;;7128:6;;-1:-1:-1;7166:20:13;;;7153:34;;7234:2;7219:18;7206:32;;-1:-1:-1;6487:757:13;;-1:-1:-1;;;;6487:757:13:o;7249:356::-;7451:2;7433:21;;;7470:18;;;7463:30;7529:34;7524:2;7509:18;;7502:62;7596:2;7581:18;;7249:356::o;7948:184::-;8018:6;8071:2;8059:9;8050:7;8046:23;8042:32;8039:52;;;8087:1;8084;8077:12;8039:52;-1:-1:-1;8110:16:13;;7948:184;-1:-1:-1;7948:184:13:o;9887:245::-;9954:6;10007:2;9995:9;9986:7;9982:23;9978:32;9975:52;;;10023:1;10020;10013:12;9975:52;10055:9;10049:16;10074:28;10096:5;10074:28;:::i;11345:251::-;11415:6;11468:2;11456:9;11447:7;11443:23;11439:32;11436:52;;;11484:1;11481;11474:12;11436:52;11516:9;11510:16;11535:31;11560:5;11535:31;:::i;16342:127::-;16403:10;16398:3;16394:20;16391:1;16384:31;16434:4;16431:1;16424:15;16458:4;16455:1;16448:15;16474:128;16514:3;16545:1;16541:6;16538:1;16535:13;16532:39;;;16551:18;;:::i;:::-;-1:-1:-1;16587:9:13;;16474:128::o;18102:127::-;18163:10;18158:3;18154:20;18151:1;18144:31;18194:4;18191:1;18184:15;18218:4;18215:1;18208:15;18234:135;18273:3;18294:17;;;18291:43;;18314:18;;:::i;:::-;-1:-1:-1;18361:1:13;18350:13;;18234:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1549600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT()": "231",
								"NAGA_HOLDER_MINT_ROUND()": "230",
								"WHITELIST_MINT_ROUND()": "228",
								"WITHDRAW_ROLE()": "229",
								"allowlistMint(bytes32[],uint256,bytes32)": "infinite",
								"currentMintRound()": "2351",
								"getEthSignedMessageHash(bytes32)": "533",
								"getMaxSupply()": "infinite",
								"getMessageHash(address)": "626",
								"getTotalSupply()": "infinite",
								"isPrivateMintOpen()": "2388",
								"isPublicMintOpen()": "2378",
								"isPublicMinted(address)": "2632",
								"isUserMinted(address,bytes32)": "2774",
								"merkleRoot()": "2352",
								"nagaKidContract()": "2448",
								"owner()": "2420",
								"publicMint(bytes)": "infinite",
								"recoverSigner(bytes32,bytes)": "infinite",
								"renounceOwnership()": "28204",
								"setMerkleRoot(bytes32)": "28038",
								"setNagaKidContract(address)": "28121",
								"setPublicMint(bool)": "infinite",
								"setRound(bytes32)": "28036",
								"setSigner(address)": "28149",
								"signer()": "2461",
								"splitSignature(bytes)": "infinite",
								"transferOwnership(address)": "infinite",
								"userMintedAmount(address,bytes32)": "2731",
								"verify(address,address,bytes)": "infinite",
								"withdraw(address)": "infinite",
								"withdrawCurrency(address,address)": "infinite",
								"withdrawNFT(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 428,
									"end": 6974,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 428,
									"end": 6974,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 6974,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1124,
									"end": 1160,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1124,
									"end": 1160,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1124,
									"end": 1160,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1167,
									"end": 1204,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1204,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1204,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2208,
									"end": 2417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 921,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2341,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2324,
									"end": 2340,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 2305,
									"end": 2341,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2305,
									"end": 2341,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2305,
									"end": 2341,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2352,
									"end": 2378,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2366,
									"end": 2377,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2352,
									"end": 2365,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 2352,
									"end": 2378,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2352,
									"end": 2378,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2352,
									"end": 2378,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2389,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 2399,
									"end": 2406,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2389,
									"end": 2398,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 2389,
									"end": 2407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2389,
									"end": 2407,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 2389,
									"end": 2407,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2208,
									"end": 2417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 428,
									"end": 6974,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 428,
									"end": 6974,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2503,
									"end": 2791,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 2503,
									"end": 2791,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1248,
									"end": 1271,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 849,
									"end": 851,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 831,
									"end": 852,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 831,
									"end": 852,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 831,
									"end": 852,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 868,
									"end": 886,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 868,
									"end": 886,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 861,
									"end": 891,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 907,
									"end": 925,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 907,
									"end": 925,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 900,
									"end": 962,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 979,
									"end": 997,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 979,
									"end": 997,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2610,
									"end": 2625,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2610,
									"end": 2625,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2610,
									"end": 2625,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2637,
									"end": 2663,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2663,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2663,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2637,
									"end": 2663,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2663,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2663,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2663,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2663,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2663,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2663,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2783,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2732,
									"end": 2783,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2783,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2610,
									"end": 2625,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2610,
									"end": 2625,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2610,
									"end": 2625,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2610,
									"end": 2625,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1220,
									"end": 1254,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1220,
									"end": 1254,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1220,
									"end": 1254,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1285,
									"end": 1287,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2637,
									"end": 2663,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2637,
									"end": 2663,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2783,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "ABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973"
								},
								{
									"begin": 2732,
									"end": 2783,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1173,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2732,
									"end": 2783,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2732,
									"end": 2783,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2783,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2783,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2783,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2783,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2783,
									"modifierDepth": 1,
									"name": "LOG1",
									"source": 8
								},
								{
									"begin": 2567,
									"end": 2791,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2567,
									"end": 2791,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2503,
									"end": 2791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2503,
									"end": 2791,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3196,
									"end": 3416,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 3196,
									"end": 3416,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1248,
									"end": 1271,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 849,
									"end": 851,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 831,
									"end": 852,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 831,
									"end": 852,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 831,
									"end": 852,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 868,
									"end": 886,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 868,
									"end": 886,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 861,
									"end": 891,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 907,
									"end": 925,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 907,
									"end": 925,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 900,
									"end": 962,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 979,
									"end": 997,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 979,
									"end": 997,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 647,
									"end": 1003,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3296,
									"end": 3306,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3296,
									"end": 3306,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3296,
									"end": 3306,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3317,
									"end": 3341,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3317,
									"end": 3341,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3317,
									"end": 3341,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3317,
									"end": 3341,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3408,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3359,
									"end": 3408,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3408,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1491,
									"end": 1516,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1491,
									"end": 1516,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1491,
									"end": 1516,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1547,
									"end": 1549,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 1550,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1532,
									"end": 1550,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1525,
									"end": 1559,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1525,
									"end": 1559,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1525,
									"end": 1559,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3408,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE"
								},
								{
									"begin": 3359,
									"end": 3408,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1464,
									"end": 1482,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3408,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 3359,
									"end": 3408,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3408,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3359,
									"end": 3408,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3408,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3408,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3408,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3408,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3408,
									"modifierDepth": 1,
									"name": "LOG1",
									"source": 8
								},
								{
									"begin": 3257,
									"end": 3416,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3196,
									"end": 3416,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3196,
									"end": 3416,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3188,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 3004,
									"end": 3188,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1248,
									"end": 1271,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 849,
									"end": 851,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 831,
									"end": 852,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 831,
									"end": 852,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 831,
									"end": 852,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 868,
									"end": 886,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 868,
									"end": 886,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 861,
									"end": 891,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 907,
									"end": 925,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 907,
									"end": 925,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 907,
									"end": 925,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 900,
									"end": 962,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 979,
									"end": 997,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 979,
									"end": 997,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 647,
									"end": 1003,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 1240,
									"end": 1308,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3092,
									"end": 3098,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3109,
									"end": 3125,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3109,
									"end": 3125,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3109,
									"end": 3125,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "10000"
								},
								{
									"begin": 3109,
									"end": 3125,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3109,
									"end": 3125,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3109,
									"end": 3125,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "10000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3109,
									"end": 3125,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3109,
									"end": 3125,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3109,
									"end": 3125,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3109,
									"end": 3125,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3109,
									"end": 3125,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3109,
									"end": 3125,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3143,
									"end": 3180,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3143,
									"end": 3180,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3143,
									"end": 3180,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3092,
									"end": 3098,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3092,
									"end": 3098,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1220,
									"end": 1254,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1220,
									"end": 1254,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1220,
									"end": 1254,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1285,
									"end": 1287,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1263,
									"end": 1306,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3143,
									"end": 3180,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "EEB293E1F8F3A9DB91ADE748726387ED1352CA78F5430C5F06FE3D1E1AD50579"
								},
								{
									"begin": 3143,
									"end": 3180,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1173,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3143,
									"end": 3180,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1008,
									"end": 1312,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 155,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 14,
									"end": 155,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 99,
									"end": 130,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 99,
									"end": 130,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 89,
									"end": 131,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 89,
									"end": 131,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 79,
									"end": 149,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 79,
									"end": 149,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 145,
									"end": 146,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 143,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 135,
									"end": 147,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 79,
									"end": 149,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 79,
									"end": 149,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 14,
									"end": 155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 160,
									"end": 642,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 160,
									"end": 642,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 264,
									"end": 270,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 278,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 280,
									"end": 286,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 333,
									"end": 335,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 321,
									"end": 330,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 312,
									"end": 319,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 308,
									"end": 331,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 304,
									"end": 336,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 301,
									"end": 353,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 301,
									"end": 353,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 301,
									"end": 353,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 349,
									"end": 350,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 346,
									"end": 347,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 339,
									"end": 351,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 301,
									"end": 353,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 301,
									"end": 353,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 381,
									"end": 390,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 375,
									"end": 391,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 400,
									"end": 441,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 435,
									"end": 440,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 400,
									"end": 441,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 400,
									"end": 441,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 400,
									"end": 441,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 400,
									"end": 441,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 510,
									"end": 512,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 495,
									"end": 513,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 489,
									"end": 514,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 460,
									"end": 465,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 460,
									"end": 465,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 523,
									"end": 566,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 489,
									"end": 514,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 523,
									"end": 566,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 523,
									"end": 566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 523,
									"end": 566,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 523,
									"end": 566,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 585,
									"end": 592,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 575,
									"end": 592,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 575,
									"end": 592,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 575,
									"end": 592,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 632,
									"end": 634,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 630,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 617,
									"end": 635,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 611,
									"end": 636,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 601,
									"end": 636,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 601,
									"end": 636,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 160,
									"end": 642,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 160,
									"end": 642,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 160,
									"end": 642,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 160,
									"end": 642,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 160,
									"end": 642,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 160,
									"end": 642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1317,
									"end": 1565,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 1317,
									"end": 1565,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 428,
									"end": 6974,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 428,
									"end": 6974,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 428,
									"end": 6974,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 428,
									"end": 6974,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 6974,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 428,
									"end": 6974,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 6974,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c97459e70061737be72dec8b73080165ef30af9ced7eb5e0fc84b3c36a75466f64736f6c634300080f0033",
									".code": [
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "9E6C8855"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "E02023A1"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "F500CDFC"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "F500CDFC"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "F6B48E55"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "FA540801"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "FF05FE4A"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "FFDC6129"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "E02023A1"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "EF5FE79F"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "F055C7A9"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "BFF863EC"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "BFF863EC"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "C4E41B22"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "DE6892C8"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "DF4E5881"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "9E6C8855"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "A4435DFD"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "A7BB5803"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "B5ABAFA1"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "51CFF8D9"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "8407ECC4"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "8407ECC4"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "8907F3FA"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "97ABA7F9"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "51CFF8D9"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "6C19E783"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "7CB64759"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "24C37A85"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "24C37A85"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "2EB4A7AB"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "42920A46"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "4C0F38C2"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "A25DEA9"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "E2D56CF"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "1F5AC1B2"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "238AC933"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 428,
											"end": 6974,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 826,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 860,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 826,
											"end": 926,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 926,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 826,
											"end": 926,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 2425,
											"end": 2495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2425,
											"end": 2495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 8,
											"value": "10000"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1117,
											"end": 1149,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1117,
											"end": 1149,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1117,
											"end": 1149,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1087,
											"end": 1089,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1213,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 953,
											"end": 1156,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 661,
											"end": 745,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 661,
											"end": 745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 661,
											"end": 745,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 661,
											"end": 745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 710,
											"end": 745,
											"name": "PUSH",
											"source": 8,
											"value": "B3C595E55271590809F54E2F4FC3A582754F45B104DD3C41666E2AD310493DB3"
										},
										{
											"begin": 661,
											"end": 745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 661,
											"end": 745,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1115,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2796,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2782,
											"end": 2796,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2797,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2757,
											"end": 2798,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2757,
											"end": 2798,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2745,
											"end": 2747,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2730,
											"end": 2748,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2617,
											"end": 2804,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6862,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 5370,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 5370,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 3004,
											"end": 3188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 3004,
											"end": 3188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 3196,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 3196,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5716,
											"end": 6093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5716,
											"end": 6093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2503,
											"end": 2791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2503,
											"end": 2791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1160,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4753,
											"end": 4778,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4753,
											"end": 4778,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4753,
											"end": 4778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4809,
											"end": 4811,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4869,
											"end": 4873,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4855,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4855,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4855,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4830,
											"end": 4875,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4743,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 4555,
											"end": 4881,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 6592,
											"end": 6735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6668,
											"end": 6675,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6712,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6727,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6727,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6727,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6727,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6727,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6727,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6727,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6592,
											"end": 6735,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 6101,
											"end": 6444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 6101,
											"end": 6444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 6743,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 5242,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4427,
											"end": 5242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4427,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 4427,
											"end": 5242,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 5242,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4427,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 4427,
											"end": 5242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 5242,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 4427,
											"end": 5242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 4427,
											"end": 5242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 979,
											"end": 1005,
											"name": "PUSH",
											"source": 8,
											"value": "5D8E12C39142FF96D79D04D15D1BA1269E4FE57BB9D26F43523628B34BA108EC"
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1005,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1083,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 5250,
											"end": 5362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5347,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5362,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 504,
											"end": 584,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 504,
											"end": 584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 504,
											"end": 584,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 584,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 504,
											"end": 584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 551,
											"end": 584,
											"name": "PUSH",
											"source": 8,
											"value": "68E7D51FDB912CB107DDA2E59B053D87FCCA666DD0EF5339CD3474CCB5276BBA"
										},
										{
											"begin": 504,
											"end": 584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 504,
											"end": 584,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 4419,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3424,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3424,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3424,
											"end": 4419,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 4419,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3424,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 3424,
											"end": 4419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 4419,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3424,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 3424,
											"end": 4419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2799,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2799,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 6452,
											"end": 6584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6561,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6584,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7837,
											"end": 7839,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7833,
											"end": 7848,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7833,
											"end": 7848,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7833,
											"end": 7848,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7829,
											"end": 7853,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7829,
											"end": 7853,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7817,
											"end": 7854,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 244,
											"end": 248,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7884,
											"end": 7908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7870,
											"end": 7882,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 7870,
											"end": 7882,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7870,
											"end": 7882,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7863,
											"end": 7909,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 175,
											"end": 182,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7925,
											"end": 7937,
											"name": "PUSH",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 7925,
											"end": 7937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 202,
											"end": 251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 195,
											"end": 251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 195,
											"end": 251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 896,
											"end": 900,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 932,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 935,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 935,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 935,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 935,
											"end": 956,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 913,
											"end": 956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 913,
											"end": 956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 967,
											"end": 995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1022,
											"end": 1033,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 998,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1054,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6949,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6934,
											"end": 6949,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D5ABEB01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 6914,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 6914,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6934,
											"end": 6949,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6949,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6959,
											"name": "PUSH",
											"source": 8,
											"value": "D5ABEB01"
										},
										{
											"begin": 6934,
											"end": 6959,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6949,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 6934,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 6934,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6927,
											"end": 6961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6927,
											"end": 6961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5475,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 5494,
											"end": 5515,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5486,
											"end": 5540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 5486,
											"end": 5540,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5486,
											"end": 5540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5486,
											"end": 5540,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5486,
											"end": 5540,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5486,
											"end": 5540,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8339,
											"end": 8341,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5486,
											"end": 5540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5486,
											"end": 5540,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5486,
											"end": 5540,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8342,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8378,
											"end": 8380,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 8358,
											"end": 8376,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8358,
											"end": 8376,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8358,
											"end": 8376,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8351,
											"end": 8381,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742042616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8390,
											"end": 8440,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8457,
											"end": 8475,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8457,
											"end": 8475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5486,
											"end": 5540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 8137,
											"end": 8481,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5486,
											"end": 5540,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 5486,
											"end": 5540,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5552,
											"end": 5563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5571,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5568,
											"end": 5576,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5601,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5551,
											"end": 5607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5632,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5618,
											"end": 5633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 5618,
											"end": 5633,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5618,
											"end": 5633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5618,
											"end": 5633,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5618,
											"end": 5633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 5618,
											"end": 5633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5651,
											"end": 5700,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5700,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8916,
											"end": 8948,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8898,
											"end": 8949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8980,
											"end": 8982,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8965,
											"end": 8983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8965,
											"end": 8983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8958,
											"end": 8992,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8958,
											"end": 8992,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8958,
											"end": 8992,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5684,
											"end": 5699,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9001,
											"end": 9035,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9001,
											"end": 9035,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9001,
											"end": 9035,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9001,
											"end": 9035,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5651,
											"end": 5700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 5651,
											"end": 5700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8886,
											"end": 8888,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5651,
											"end": 5700,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 5651,
											"end": 5700,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5651,
											"end": 5700,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5700,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5700,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5700,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5700,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5700,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5708,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3109,
											"end": 3125,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3109,
											"end": 3125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3109,
											"end": 3125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "10000"
										},
										{
											"begin": 3109,
											"end": 3125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3109,
											"end": 3125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3109,
											"end": 3125,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3109,
											"end": 3125,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3109,
											"end": 3125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3109,
											"end": 3125,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3109,
											"end": 3125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3109,
											"end": 3125,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3109,
											"end": 3125,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3180,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3180,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3092,
											"end": 3098,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3092,
											"end": 3098,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9258,
											"end": 9292,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9258,
											"end": 9292,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9258,
											"end": 9292,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9323,
											"end": 9325,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9308,
											"end": 9326,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9308,
											"end": 9326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9301,
											"end": 9344,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9301,
											"end": 9344,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9301,
											"end": 9344,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9301,
											"end": 9344,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "EEB293E1F8F3A9DB91ADE748726387ED1352CA78F5430C5F06FE3D1E1AD50579"
										},
										{
											"begin": 3143,
											"end": 3180,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3143,
											"end": 3180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3180,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3180,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3180,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3180,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3180,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3057,
											"end": 3188,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1759,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1732,
											"end": 1762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 3196,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3306,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3306,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3341,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3341,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3341,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3341,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3408,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3408,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9529,
											"end": 9554,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9529,
											"end": 9554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9529,
											"end": 9554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9585,
											"end": 9587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9597,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9597,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9597,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "123D88BA82600DFC3F219F8885C691B0FF020CAA535666874B3F5174973757FE"
										},
										{
											"begin": 3359,
											"end": 3408,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9502,
											"end": 9520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 9355,
											"end": 9603,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5716,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5826,
											"end": 5868,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5826,
											"end": 5868,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5866,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5826,
											"end": 5868,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5801,
											"end": 5823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5826,
											"end": 5853,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5853,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 5826,
											"end": 5853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5826,
											"end": 5868,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 5826,
											"end": 5868,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 5826,
											"end": 5868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5801,
											"end": 5868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5801,
											"end": 5868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5907,
											"end": 5908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5887,
											"end": 5904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5887,
											"end": 5908,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5879,
											"end": 5933,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5879,
											"end": 5933,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5879,
											"end": 5933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5879,
											"end": 5933,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5879,
											"end": 5933,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5879,
											"end": 5933,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8339,
											"end": 8341,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5879,
											"end": 5933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5879,
											"end": 5933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5879,
											"end": 5933,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8342,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8378,
											"end": 8380,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 8358,
											"end": 8376,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8358,
											"end": 8376,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8358,
											"end": 8376,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8351,
											"end": 8381,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742042616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8390,
											"end": 8440,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8457,
											"end": 8475,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8457,
											"end": 8475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5879,
											"end": 5933,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 8137,
											"end": 8481,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5879,
											"end": 5933,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5879,
											"end": 5933,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5944,
											"end": 5994,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5944,
											"end": 5994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9800,
											"end": 9832,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9800,
											"end": 9832,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9800,
											"end": 9832,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5944,
											"end": 5994,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9833,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9842,
											"end": 9876,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9842,
											"end": 9876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9842,
											"end": 9876,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5944,
											"end": 5970,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5970,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 5944,
											"end": 5970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9773,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9755,
											"end": 9773,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 5994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 5944,
											"end": 5994,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5944,
											"end": 5994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6020,
											"end": 6085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6020,
											"end": 6085,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6085,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10424,
											"end": 10439,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10424,
											"end": 10439,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10424,
											"end": 10439,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10406,
											"end": 10440,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10406,
											"end": 10440,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10476,
											"end": 10491,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10476,
											"end": 10491,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10471,
											"end": 10473,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10456,
											"end": 10474,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10456,
											"end": 10474,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10449,
											"end": 10492,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10501,
											"end": 10535,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10501,
											"end": 10535,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10501,
											"end": 10535,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6069,
											"end": 6084,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 10566,
											"end": 10568,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10551,
											"end": 10569,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10551,
											"end": 10569,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10544,
											"end": 10578,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6020,
											"end": 6085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B818A975F91276DF8BA59329BECBC23C793DF0D503C19AC296C3C372A1FA0461"
										},
										{
											"begin": 6020,
											"end": 6085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10355,
											"end": 10358,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10340,
											"end": 10359,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6020,
											"end": 6085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 10137,
											"end": 10584,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1284,
											"end": 1293,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1302,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 1321,
											"end": 1331,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 1306,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10816,
											"end": 10841,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 10816,
											"end": 10841,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10816,
											"end": 10841,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10889,
											"end": 10893,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 10877,
											"end": 10894,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10894,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10850,
											"end": 10895,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10850,
											"end": 10895,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10850,
											"end": 10895,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10850,
											"end": 10895,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10911,
											"end": 10929,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10911,
											"end": 10929,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10911,
											"end": 10929,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10904,
											"end": 10938,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10904,
											"end": 10938,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10904,
											"end": 10938,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10947,
											"end": 10981,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10947,
											"end": 10981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10947,
											"end": 10981,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10788,
											"end": 10807,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 10788,
											"end": 10807,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2503,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2610,
											"end": 2625,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2625,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2637,
											"end": 2663,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2663,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2637,
											"end": 2663,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2663,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2663,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2663,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2663,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2663,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2625,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2625,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2625,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9258,
											"end": 9292,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9258,
											"end": 9292,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9258,
											"end": 9292,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9323,
											"end": 9325,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9308,
											"end": 9326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9308,
											"end": 9326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9301,
											"end": 9344,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9301,
											"end": 9344,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9301,
											"end": 9344,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9301,
											"end": 9344,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2637,
											"end": 2663,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2663,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "ABDF056C85A221FCB31D0366C4475B6B2C613DF2EEEA951A9FCB3E1A8595D973"
										},
										{
											"begin": 2732,
											"end": 2783,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2732,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 9046,
											"end": 9350,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1522,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1604,
											"end": 1614,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1604,
											"end": 1620,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11194,
											"end": 11196,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11176,
											"end": 11197,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11233,
											"end": 11235,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 11213,
											"end": 11231,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11213,
											"end": 11231,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11213,
											"end": 11231,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11206,
											"end": 11236,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11272,
											"end": 11298,
											"name": "PUSH",
											"source": 13,
											"value": "696E76616C6964207369676E6174757265206C656E6774680000000000000000"
										},
										{
											"begin": 11252,
											"end": 11270,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11252,
											"end": 11270,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11252,
											"end": 11270,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11245,
											"end": 11299,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11316,
											"end": 11334,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11316,
											"end": 11334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 10992,
											"end": 11340,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2130,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2132,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 6101,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6201,
											"end": 6232,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6201,
											"end": 6232,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6201,
											"end": 6232,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6244,
											"end": 6248,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6201,
											"end": 6222,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6222,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6222,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6352211E"
										},
										{
											"begin": 6201,
											"end": 6222,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6232,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 6201,
											"end": 6232,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 6201,
											"end": 6232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6201,
											"end": 6249,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6249,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 6193,
											"end": 6291,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6193,
											"end": 6291,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6193,
											"end": 6291,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6291,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11803,
											"end": 11805,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6193,
											"end": 6291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6193,
											"end": 6291,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6291,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11785,
											"end": 11806,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11842,
											"end": 11844,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11815,
											"end": 11845,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11881,
											"end": 11915,
											"name": "PUSH",
											"source": 13,
											"value": "5468697320746F6B656E4964206973206E6F74206F776E656420627920636F6E"
										},
										{
											"begin": 11861,
											"end": 11879,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11861,
											"end": 11879,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11861,
											"end": 11879,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11854,
											"end": 11916,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11925,
											"end": 11960,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11977,
											"end": 11996,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 11977,
											"end": 11996,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6193,
											"end": 6291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 11601,
											"end": 12002,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6193,
											"end": 6291,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 6193,
											"end": 6291,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6304,
											"end": 6364,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21421707"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6304,
											"end": 6364,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6343,
											"end": 6347,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6304,
											"end": 6364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12247,
											"end": 12281,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12317,
											"end": 12332,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12317,
											"end": 12332,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12317,
											"end": 12332,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12297,
											"end": 12315,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12297,
											"end": 12315,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12297,
											"end": 12315,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12290,
											"end": 12333,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12349,
											"end": 12367,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12349,
											"end": 12367,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12349,
											"end": 12367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12342,
											"end": 12376,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12342,
											"end": 12376,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12342,
											"end": 12376,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6304,
											"end": 6334,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6334,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 6304,
											"end": 6334,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12182,
											"end": 12200,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12182,
											"end": 12200,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6364,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6364,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 6304,
											"end": 6364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6390,
											"end": 6436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6436,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6390,
											"end": 6436,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10424,
											"end": 10439,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10424,
											"end": 10439,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10424,
											"end": 10439,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10406,
											"end": 10440,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10406,
											"end": 10440,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10476,
											"end": 10491,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10476,
											"end": 10491,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10471,
											"end": 10473,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10456,
											"end": 10474,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10456,
											"end": 10474,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10449,
											"end": 10492,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10501,
											"end": 10535,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10501,
											"end": 10535,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10501,
											"end": 10535,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6420,
											"end": 6435,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 10566,
											"end": 10568,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10551,
											"end": 10569,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10551,
											"end": 10569,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10544,
											"end": 10578,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6390,
											"end": 6436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "127A8D3F57942833F6930572BCE52AD882683E36EEB5830D199D3FA4BFA9467"
										},
										{
											"begin": 6390,
											"end": 6436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10355,
											"end": 10358,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10340,
											"end": 10359,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10340,
											"end": 10359,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6390,
											"end": 6436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 10137,
											"end": 10584,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 6743,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6832,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6817,
											"end": 6832,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18160DDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6790,
											"end": 6797,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6790,
											"end": 6797,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6817,
											"end": 6832,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6832,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6844,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 6817,
											"end": 6844,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6832,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6846,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 5242,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 4427,
											"end": 5242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12589,
											"end": 12591,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12571,
											"end": 12592,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12628,
											"end": 12630,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12608,
											"end": 12626,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12608,
											"end": 12626,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12608,
											"end": 12626,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12601,
											"end": 12631,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12667,
											"end": 12700,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 12647,
											"end": 12665,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12647,
											"end": 12665,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12647,
											"end": 12665,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12640,
											"end": 12701,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12718,
											"end": 12736,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12718,
											"end": 12736,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 12387,
											"end": 12742,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4517,
											"end": 4533,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4517,
											"end": 4533,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4541,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4541,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4541,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4509,
											"end": 4570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 4509,
											"end": 4570,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4509,
											"end": 4570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4509,
											"end": 4570,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4509,
											"end": 4570,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4509,
											"end": 4570,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12949,
											"end": 12951,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4509,
											"end": 4570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4509,
											"end": 4570,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4509,
											"end": 4570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12931,
											"end": 12952,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 12990,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 12968,
											"end": 12986,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12968,
											"end": 12986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12968,
											"end": 12986,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12961,
											"end": 12991,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13027,
											"end": 13053,
											"name": "PUSH",
											"source": 13,
											"value": "5075626C6963206D696E74206973206E6F74206F70656E2E0000000000000000"
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13000,
											"end": 13054,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13071,
											"end": 13089,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13071,
											"end": 13089,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 12747,
											"end": 13095,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 4509,
											"end": 4570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4589,
											"end": 4598,
											"modifierDepth": 1,
											"name": "ORIGIN",
											"source": 8
										},
										{
											"begin": 4602,
											"end": 4612,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4589,
											"end": 4612,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 4581,
											"end": 4644,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4581,
											"end": 4644,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4581,
											"end": 4644,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4644,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13302,
											"end": 13304,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4581,
											"end": 4644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4581,
											"end": 4644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4644,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13284,
											"end": 13305,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13343,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 13321,
											"end": 13339,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13321,
											"end": 13339,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13321,
											"end": 13339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13314,
											"end": 13344,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13380,
											"end": 13409,
											"name": "PUSH",
											"source": 13,
											"value": "6861686120436F6E74726163742063616E27742063616C6C206D650000000000"
										},
										{
											"begin": 13360,
											"end": 13378,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13360,
											"end": 13378,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13360,
											"end": 13378,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13353,
											"end": 13410,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13427,
											"end": 13445,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13427,
											"end": 13445,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 13100,
											"end": 13451,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 4581,
											"end": 4644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4678,
											"end": 4688,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5347,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4697,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4697,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4693,
											"end": 4697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4663,
											"end": 4697,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4655,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 4655,
											"end": 4725,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4655,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4655,
											"end": 4725,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4655,
											"end": 4725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4655,
											"end": 4725,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13658,
											"end": 13660,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4655,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4655,
											"end": 4725,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4655,
											"end": 4725,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13640,
											"end": 13661,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13697,
											"end": 13699,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 13677,
											"end": 13695,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13677,
											"end": 13695,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13677,
											"end": 13695,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13670,
											"end": 13700,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13716,
											"end": 13734,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13716,
											"end": 13734,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13716,
											"end": 13734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13709,
											"end": 13762,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13779,
											"end": 13797,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13779,
											"end": 13797,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 13456,
											"end": 13803,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 4655,
											"end": 4725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4815,
											"end": 4830,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4815,
											"end": 4854,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55138F0D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4815,
											"end": 4854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4852,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4815,
											"end": 4854,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4815,
											"end": 4830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4830,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4830,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "AA271E1A"
										},
										{
											"begin": 4815,
											"end": 4839,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4854,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 4815,
											"end": 4854,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 4815,
											"end": 4854,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4807,
											"end": 4889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 4807,
											"end": 4889,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4807,
											"end": 4889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4807,
											"end": 4889,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4807,
											"end": 4889,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4807,
											"end": 4889,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14010,
											"end": 14012,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4807,
											"end": 4889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4807,
											"end": 4889,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4807,
											"end": 4889,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13992,
											"end": 14013,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14049,
											"end": 14051,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 14029,
											"end": 14047,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14029,
											"end": 14047,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14029,
											"end": 14047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14022,
											"end": 14052,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14088,
											"end": 14120,
											"name": "PUSH",
											"source": 13,
											"value": "436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000"
										},
										{
											"begin": 14068,
											"end": 14086,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14068,
											"end": 14086,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14068,
											"end": 14086,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14061,
											"end": 14121,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14138,
											"end": 14156,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14138,
											"end": 14156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4807,
											"end": 4889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 13808,
											"end": 14162,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4807,
											"end": 4889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 4807,
											"end": 4889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 4915,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4915,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4915,
											"end": 4921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4915,
											"end": 4921,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4915,
											"end": 4921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4915,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4915,
											"end": 4921,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4915,
											"end": 4921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4915,
											"end": 4921,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4915,
											"end": 4921,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4922,
											"end": 4932,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4937,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4937,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4938,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4914,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 4908,
											"end": 4914,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4938,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 4908,
											"end": 4938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4900,
											"end": 4977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4900,
											"end": 4977,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4900,
											"end": 4977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4900,
											"end": 4977,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4900,
											"end": 4977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4900,
											"end": 4977,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14369,
											"end": 14371,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4900,
											"end": 4977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4900,
											"end": 4977,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4900,
											"end": 4977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14372,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14408,
											"end": 14410,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 14388,
											"end": 14406,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14388,
											"end": 14406,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14388,
											"end": 14406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14381,
											"end": 14411,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14447,
											"end": 14481,
											"name": "PUSH",
											"source": 13,
											"value": "556E617574686F72697A6564205075626C69634D696E74205468697320557365"
										},
										{
											"begin": 14427,
											"end": 14445,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14427,
											"end": 14445,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14427,
											"end": 14445,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14420,
											"end": 14482,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14498,
											"end": 14516,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14498,
											"end": 14516,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14498,
											"end": 14516,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14491,
											"end": 14523,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14540,
											"end": 14559,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 14540,
											"end": 14559,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 14167,
											"end": 14565,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4900,
											"end": 4977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5095,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5036,
											"end": 5051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5069,
											"end": 5096,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5096,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5096,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5069,
											"end": 5096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5069,
											"end": 5096,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5096,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5069,
											"end": 5096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5096,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5096,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5103,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5103,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5069,
											"end": 5103,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5054,
											"end": 5055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5069,
											"end": 5103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5103,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5103,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5103,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5069,
											"end": 5103,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5114,
											"end": 5129,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "28512065"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5114,
											"end": 5158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5114,
											"end": 5158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9833,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9782,
											"end": 9833,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9782,
											"end": 9833,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9782,
											"end": 9833,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9842,
											"end": 9876,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9842,
											"end": 9876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9842,
											"end": 9876,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5055,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5114,
											"end": 5129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5129,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5129,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A1448194"
										},
										{
											"begin": 5114,
											"end": 5138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9773,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9755,
											"end": 9773,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 5114,
											"end": 5158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5184,
											"end": 5232,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5184,
											"end": 5232,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9529,
											"end": 9554,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9529,
											"end": 9554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9529,
											"end": 9554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5216,
											"end": 5231,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 9585,
											"end": 9587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9597,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5197,
											"end": 5207,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5197,
											"end": 5207,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C1A73B31B32801EBBB4CAE30B73EAE4345BE9F2915EA60306383C245EF8FAC44"
										},
										{
											"begin": 5184,
											"end": 5232,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9502,
											"end": 9520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5184,
											"end": 5232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5184,
											"end": 5232,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5184,
											"end": 5232,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5184,
											"end": 5232,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5184,
											"end": 5232,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5184,
											"end": 5232,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5184,
											"end": 5232,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4427,
											"end": 5242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15025,
											"end": 15027,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15007,
											"end": 15028,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15064,
											"end": 15066,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 15044,
											"end": 15062,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15044,
											"end": 15062,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15044,
											"end": 15062,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15037,
											"end": 15067,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15103,
											"end": 15137,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 15083,
											"end": 15101,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15083,
											"end": 15101,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15083,
											"end": 15101,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15138,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15147,
											"end": 15183,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 15200,
											"end": 15219,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 14823,
											"end": 15225,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2100,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2081,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 4419,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 3424,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12589,
											"end": 12591,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12571,
											"end": 12592,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12628,
											"end": 12630,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12608,
											"end": 12626,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12608,
											"end": 12626,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12608,
											"end": 12626,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12601,
											"end": 12631,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12667,
											"end": 12700,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 12647,
											"end": 12665,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12647,
											"end": 12665,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12647,
											"end": 12665,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12640,
											"end": 12701,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12718,
											"end": 12736,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12718,
											"end": 12736,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 12387,
											"end": 12742,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3554,
											"end": 3571,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3554,
											"end": 3571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3571,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3554,
											"end": 3571,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3579,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3579,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3579,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3546,
											"end": 3608,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3546,
											"end": 3608,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3546,
											"end": 3608,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3608,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15432,
											"end": 15434,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3546,
											"end": 3608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3546,
											"end": 3608,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3608,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15414,
											"end": 15435,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15471,
											"end": 15473,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 15451,
											"end": 15469,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15451,
											"end": 15469,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15451,
											"end": 15469,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15444,
											"end": 15474,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15510,
											"end": 15537,
											"name": "PUSH",
											"source": 13,
											"value": "50726976617465206D696E74206973206E6F74206F70656E2E00000000000000"
										},
										{
											"begin": 15490,
											"end": 15508,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15490,
											"end": 15508,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15490,
											"end": 15508,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15483,
											"end": 15538,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15555,
											"end": 15573,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15555,
											"end": 15573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3546,
											"end": 3608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 15230,
											"end": 15579,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3546,
											"end": 3608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 3546,
											"end": 3608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3669,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 3619,
											"end": 3669,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3669,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3619,
											"end": 3669,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3669,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15786,
											"end": 15788,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3619,
											"end": 3669,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3669,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15789,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15825,
											"end": 15827,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 15805,
											"end": 15823,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15805,
											"end": 15823,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15805,
											"end": 15823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15798,
											"end": 15828,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26B4B73A1034B9903737BA1030B8383937BB32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15844,
											"end": 15862,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15844,
											"end": 15862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15844,
											"end": 15862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15837,
											"end": 15888,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15905,
											"end": 15923,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15905,
											"end": 15923,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3669,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 15584,
											"end": 15929,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3669,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 3619,
											"end": 3669,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3714,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3688,
											"end": 3704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3688,
											"end": 3704,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3688,
											"end": 3714,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 3680,
											"end": 3758,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3758,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3680,
											"end": 3758,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3758,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16136,
											"end": 16138,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3680,
											"end": 3758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3680,
											"end": 3758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3758,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16118,
											"end": 16139,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16175,
											"end": 16177,
											"name": "PUSH",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 16155,
											"end": 16173,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16155,
											"end": 16173,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16155,
											"end": 16173,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16148,
											"end": 16178,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16214,
											"end": 16248,
											"name": "PUSH",
											"source": 13,
											"value": "436F6E747261637420617265206E6F7420696E2074686973206D696E74696E67"
										},
										{
											"begin": 16194,
											"end": 16212,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 16194,
											"end": 16212,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16194,
											"end": 16212,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16187,
											"end": 16249,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937BAB73217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16265,
											"end": 16283,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 16265,
											"end": 16283,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16265,
											"end": 16283,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16258,
											"end": 16295,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16312,
											"end": 16331,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 16312,
											"end": 16331,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3680,
											"end": 3758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 15934,
											"end": 16337,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3680,
											"end": 3758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 3680,
											"end": 3758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3806,
											"end": 3820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 3806,
											"end": 3818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3806,
											"end": 3820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3806,
											"end": 3820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 3806,
											"end": 3820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3803,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 3777,
											"end": 3791,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3777,
											"end": 3793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 3777,
											"end": 3793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 3777,
											"end": 3803,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3803,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 3777,
											"end": 3803,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3803,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 3777,
											"end": 3803,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3777,
											"end": 3820,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3769,
											"end": 3836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3769,
											"end": 3836,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3769,
											"end": 3836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3769,
											"end": 3836,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3769,
											"end": 3836,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3769,
											"end": 3836,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16809,
											"end": 16811,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3769,
											"end": 3836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3769,
											"end": 3836,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3769,
											"end": 3836,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16791,
											"end": 16812,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16848,
											"end": 16850,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 16828,
											"end": 16846,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16828,
											"end": 16846,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16828,
											"end": 16846,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16821,
											"end": 16851,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F76657220737570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16867,
											"end": 16885,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 16867,
											"end": 16885,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16867,
											"end": 16885,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16860,
											"end": 16901,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16918,
											"end": 16936,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 16918,
											"end": 16936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3769,
											"end": 3836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 16607,
											"end": 16942,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3769,
											"end": 3836,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3769,
											"end": 3836,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3868,
											"end": 3878,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6561,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 6548,
											"end": 6576,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3855,
											"end": 3895,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3847,
											"end": 3923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 3847,
											"end": 3923,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3847,
											"end": 3923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3847,
											"end": 3923,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3847,
											"end": 3923,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3847,
											"end": 3923,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13658,
											"end": 13660,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3847,
											"end": 3923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3847,
											"end": 3923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3847,
											"end": 3923,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13640,
											"end": 13661,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13697,
											"end": 13699,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 13677,
											"end": 13695,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13677,
											"end": 13695,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13677,
											"end": 13695,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13670,
											"end": 13700,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13716,
											"end": 13734,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13716,
											"end": 13734,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13716,
											"end": 13734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13709,
											"end": 13762,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13779,
											"end": 13797,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13779,
											"end": 13797,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 3923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 13456,
											"end": 13803,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 3923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 3847,
											"end": 3923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3942,
											"end": 3957,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 3981,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55138F0D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3975,
											"end": 3979,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3942,
											"end": 3981,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1099,
											"end": 1150,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3957,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3957,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "AA271E1A"
										},
										{
											"begin": 3942,
											"end": 3966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1072,
											"end": 1090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3981,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 3942,
											"end": 3981,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 3942,
											"end": 3981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 3934,
											"end": 4016,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 4016,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3934,
											"end": 4016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 4016,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14010,
											"end": 14012,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3934,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3934,
											"end": 4016,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 4016,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13992,
											"end": 14013,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14049,
											"end": 14051,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 14029,
											"end": 14047,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14029,
											"end": 14047,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14029,
											"end": 14047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14022,
											"end": 14052,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14088,
											"end": 14120,
											"name": "PUSH",
											"source": 13,
											"value": "436F6E7472616374204D696E74206973206E6F7420617070726F7665642E0000"
										},
										{
											"begin": 14068,
											"end": 14086,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14068,
											"end": 14086,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14068,
											"end": 14086,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14061,
											"end": 14121,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14138,
											"end": 14156,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14138,
											"end": 14156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 13808,
											"end": 14162,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 4016,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 3934,
											"end": 4016,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 4054,
											"end": 4060,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4054,
											"end": 4060,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4035,
											"end": 4131,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4062,
											"end": 4072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4062,
											"end": 4072,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4084,
											"end": 4129,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4101,
											"end": 4111,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 17152,
											"end": 17154,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 17148,
											"end": 17163,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 17144,
											"end": 17197,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4129,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17132,
											"end": 17198,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17214,
											"end": 17226,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 17214,
											"end": 17226,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17214,
											"end": 17226,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17207,
											"end": 17235,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17207,
											"end": 17235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17207,
											"end": 17235,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17251,
											"end": 17263,
											"name": "PUSH",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 17251,
											"end": 17263,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17251,
											"end": 17263,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17244,
											"end": 17272,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 17244,
											"end": 17272,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17244,
											"end": 17272,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4072,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4072,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17288,
											"end": 17300,
											"name": "PUSH",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 17288,
											"end": 17300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17288,
											"end": 17300,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4084,
											"end": 4129,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4130,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4130,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4130,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4074,
											"end": 4130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4130,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 4035,
											"end": 4131,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 4035,
											"end": 4131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 4027,
											"end": 4173,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4173,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4027,
											"end": 4173,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4173,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17513,
											"end": 17515,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4027,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4027,
											"end": 4173,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17495,
											"end": 17516,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17552,
											"end": 17554,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 17532,
											"end": 17550,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17532,
											"end": 17550,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17532,
											"end": 17550,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17525,
											"end": 17555,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17591,
											"end": 17625,
											"name": "PUSH",
											"source": 13,
											"value": "556E617574686F72697A65642057686974656C6973744D696E74205468697320"
										},
										{
											"begin": 17571,
											"end": 17589,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 17571,
											"end": 17589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17571,
											"end": 17589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17564,
											"end": 17626,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2AB9B2B917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17642,
											"end": 17660,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 17642,
											"end": 17660,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17642,
											"end": 17660,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17635,
											"end": 17670,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17687,
											"end": 17706,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 17687,
											"end": 17706,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4027,
											"end": 4173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 17311,
											"end": 17712,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4027,
											"end": 4173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 4027,
											"end": 4173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4210,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4211,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4186,
											"end": 4211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4186,
											"end": 4211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4211,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4211,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4186,
											"end": 4211,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4211,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4211,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4219,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4219,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4219,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4219,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4219,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4219,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4219,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4219,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4226,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4226,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4226,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4222,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4186,
											"end": 4226,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4226,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4266,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4237,
											"end": 4266,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4266,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4274,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4274,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4274,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4274,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4274,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4274,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4274,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4274,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4285,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4285,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4285,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4285,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 4237,
											"end": 4285,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4285,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4285,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 4237,
											"end": 4285,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 4237,
											"end": 4285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4285,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4285,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4285,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4298,
											"end": 4313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4298,
											"end": 4313,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "28512065"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4323,
											"end": 4333,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9833,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9842,
											"end": 9876,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9842,
											"end": 9876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9842,
											"end": 9876,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4298,
											"end": 4313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A1448194"
										},
										{
											"begin": 4298,
											"end": 4322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9773,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9755,
											"end": 9773,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 4298,
											"end": 4342,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4360,
											"end": 4411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4360,
											"end": 4411,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4411,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9529,
											"end": 9554,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9529,
											"end": 9554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9529,
											"end": 9554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4395,
											"end": 4410,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 9585,
											"end": 9587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9597,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4374,
											"end": 4384,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4374,
											"end": 4384,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4360,
											"end": 4411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E9E607753E80542A9021D5149990F18919907F0136FAD424EAAC3D15056CCF6E"
										},
										{
											"begin": 4360,
											"end": 4411,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9502,
											"end": 9520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4360,
											"end": 4411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4360,
											"end": 4411,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4411,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4411,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4411,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4411,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4411,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3424,
											"end": 4419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17959,
											"end": 18025,
											"name": "PUSH",
											"source": 13,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 611,
											"end": 738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17947,
											"end": 18026,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18042,
											"end": 18054,
											"name": "PUSH",
											"source": 13,
											"value": "3C"
										},
										{
											"begin": 18042,
											"end": 18054,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18042,
											"end": 18054,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18035,
											"end": 18063,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18035,
											"end": 18063,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18035,
											"end": 18063,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18079,
											"end": 18091,
											"name": "PUSH",
											"source": 13,
											"value": "5C"
										},
										{
											"begin": 18079,
											"end": 18091,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 17717,
											"end": 18097,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2799,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2884,
											"end": 2900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2884,
											"end": 2900,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 2900,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2911,
											"end": 2936,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2911,
											"end": 2936,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2911,
											"end": 2936,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2911,
											"end": 2936,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2988,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2988,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9529,
											"end": 9554,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9529,
											"end": 9554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9529,
											"end": 9554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9585,
											"end": 9587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9597,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9597,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9597,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2954,
											"end": 2988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "521EC96875CA228CD2FC1DBD4C927A34328C9CE1A83BCB8C1F633F012C90D785"
										},
										{
											"begin": 2954,
											"end": 2988,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9502,
											"end": 9520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2954,
											"end": 2988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 9355,
											"end": 9603,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1279,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1331,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 1311,
											"end": 1316,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1318,
											"end": 1322,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 1298,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1331,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1331,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1154,
											"end": 1338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "tag",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1818,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "tag",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1852,
											"end": 1857,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1852,
											"end": 1864,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1864,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 1908,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "tag",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1962,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1946,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1962,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2558,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2117,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2558,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "tag",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 1866,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "tag",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2332,
											"end": 2344,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1689,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 196,
											"end": 314,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 196,
											"end": 314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 282,
											"end": 287,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 275,
											"end": 288,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 268,
											"end": 289,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 261,
											"end": 266,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 258,
											"end": 290,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 248,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 248,
											"end": 308,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 304,
											"end": 305,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 302,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 294,
											"end": 306,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 319,
											"end": 560,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 319,
											"end": 560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 375,
											"end": 381,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 430,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 416,
											"end": 425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 407,
											"end": 414,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 403,
											"end": 426,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 399,
											"end": 431,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 396,
											"end": 448,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 396,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 396,
											"end": 448,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 444,
											"end": 445,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 442,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 434,
											"end": 446,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 396,
											"end": 448,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 396,
											"end": 448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 483,
											"end": 492,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 470,
											"end": 493,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 502,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 524,
											"end": 529,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 502,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 502,
											"end": 530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 502,
											"end": 530,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 502,
											"end": 530,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 549,
											"end": 554,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 319,
											"end": 560,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 319,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 565,
											"end": 696,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 565,
											"end": 696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 640,
											"end": 671,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 640,
											"end": 671,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 630,
											"end": 672,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 630,
											"end": 672,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 620,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 620,
											"end": 690,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 686,
											"end": 687,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 684,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 688,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 701,
											"end": 948,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 701,
											"end": 948,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 760,
											"end": 766,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 815,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 810,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 792,
											"end": 799,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 788,
											"end": 811,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 784,
											"end": 816,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 781,
											"end": 833,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 781,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 781,
											"end": 833,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 829,
											"end": 830,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 827,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 819,
											"end": 831,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 781,
											"end": 833,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 781,
											"end": 833,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 855,
											"end": 878,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 912,
											"end": 917,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 887,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 887,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1288,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 1161,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1222,
											"end": 1232,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 1217,
											"end": 1220,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1213,
											"end": 1233,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1234,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1253,
											"end": 1257,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1250,
											"end": 1251,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1243,
											"end": 1258,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1277,
											"end": 1281,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1267,
											"end": 1282,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 2011,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 1293,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1335,
											"end": 1340,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1391,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1385,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1373,
											"end": 1379,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1392,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 1355,
											"end": 1410,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1406,
											"end": 1407,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1404,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1396,
											"end": 1408,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 1410,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 1355,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1429,
											"end": 1449,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1486,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1505,
											"end": 1507,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1498,
											"end": 1508,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1495,
											"end": 1531,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1495,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 1495,
											"end": 1531,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 1511,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 1511,
											"end": 1529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1529,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 1511,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1586,
											"end": 1588,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 1589,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1554,
											"end": 1556,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1640,
											"end": 1653,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1640,
											"end": 1653,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1636,
											"end": 1658,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1636,
											"end": 1658,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1636,
											"end": 1658,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1662,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 1632,
											"end": 1663,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1668,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1669,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1669,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1669,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1684,
											"end": 1702,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1704,
											"end": 1726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1704,
											"end": 1726,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1704,
											"end": 1726,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1727,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1678,
											"end": 1750,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1678,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 1678,
											"end": 1750,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 1730,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 1768,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1781,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1807,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1797,
											"end": 1803,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1808,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1851,
											"end": 1854,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1848,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1827,
											"end": 1842,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1855,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1817,
											"end": 1872,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1817,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 1817,
											"end": 1872,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1868,
											"end": 1869,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1866,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1870,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1817,
											"end": 1872,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 1817,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 1929,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1923,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1906,
											"end": 1910,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1911,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 1935,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 1979,
											"end": 1980,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1976,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1967,
											"end": 1969,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1955,
											"end": 1970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1977,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1944,
											"end": 1981,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1999,
											"end": 2005,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 2011,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 2011,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 2011,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 2011,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 2011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2612,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2016,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2124,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2159,
											"end": 2168,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2150,
											"end": 2157,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2142,
											"end": 2174,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2191,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 2139,
											"end": 2191,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2185,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2177,
											"end": 2189,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2191,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 2139,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2226,
											"end": 2235,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2213,
											"end": 2236,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2245,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 2270,
											"end": 2275,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2245,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 2245,
											"end": 2276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2245,
											"end": 2276,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 2245,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2295,
											"end": 2300,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2352,
											"end": 2354,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2337,
											"end": 2355,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2355,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2356,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2365,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 2324,
											"end": 2356,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2365,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 2365,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2365,
											"end": 2398,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 2365,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2475,
											"end": 2477,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2478,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2478,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2447,
											"end": 2479,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2491,
											"end": 2521,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2491,
											"end": 2521,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2488,
											"end": 2538,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2488,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 2488,
											"end": 2538,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2534,
											"end": 2535,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2532,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2488,
											"end": 2538,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 2488,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2557,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2578,
											"end": 2587,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2596,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2557,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 2557,
											"end": 2606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2557,
											"end": 2606,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 2557,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2606,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2612,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2612,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2612,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2612,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2612,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2991,
											"end": 3171,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2991,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3056,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3105,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3091,
											"end": 3100,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3078,
											"end": 3101,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3074,
											"end": 3106,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3119,
											"end": 3120,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3121,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3142,
											"end": 3165,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3165,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2991,
											"end": 3171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2991,
											"end": 3171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3564,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 3176,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3244,
											"end": 3250,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 3307,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3284,
											"end": 3291,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3280,
											"end": 3303,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3276,
											"end": 3308,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3273,
											"end": 3325,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3273,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 3273,
											"end": 3325,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3321,
											"end": 3322,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3319,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3273,
											"end": 3325,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 3273,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3379,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 3404,
											"end": 3409,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3379,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 3379,
											"end": 3410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3379,
											"end": 3410,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 3379,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3486,
											"end": 3488,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3490,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 3458,
											"end": 3490,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 3499,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3532,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 3499,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3558,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3558,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3558,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3558,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3564,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3564,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3564,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3957,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 3569,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3646,
											"end": 3652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3654,
											"end": 3660,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3709,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3695,
											"end": 3704,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3686,
											"end": 3693,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3710,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3675,
											"end": 3727,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3675,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 3675,
											"end": 3727,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3724,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3721,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3725,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3675,
											"end": 3727,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 3675,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 3768,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3769,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3736,
											"end": 3769,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3736,
											"end": 3769,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3822,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3818,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3805,
											"end": 3823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3824,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3847,
											"end": 3865,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3839,
											"end": 3845,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3836,
											"end": 3866,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3883,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 3833,
											"end": 3883,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3879,
											"end": 3880,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3869,
											"end": 3881,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3883,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 3833,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3902,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 3943,
											"end": 3950,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3940,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3923,
											"end": 3932,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3919,
											"end": 3941,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3902,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 3902,
											"end": 3951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3902,
											"end": 3951,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 3902,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3951,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3957,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3957,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3957,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4550,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 4230,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4298,
											"end": 4304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4339,
											"end": 4348,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4330,
											"end": 4337,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4326,
											"end": 4349,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4322,
											"end": 4354,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4319,
											"end": 4371,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4319,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 4319,
											"end": 4371,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4367,
											"end": 4368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4365,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4369,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4319,
											"end": 4371,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 4319,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4407,
											"end": 4416,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4394,
											"end": 4417,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4432,
											"end": 4438,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4429,
											"end": 4459,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4426,
											"end": 4476,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4426,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 4426,
											"end": 4476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4472,
											"end": 4473,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4470,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4462,
											"end": 4474,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4426,
											"end": 4476,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 4426,
											"end": 4476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 4536,
											"end": 4543,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4527,
											"end": 4533,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4516,
											"end": 4525,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4512,
											"end": 4534,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 4495,
											"end": 4544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4544,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 4495,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4485,
											"end": 4544,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4550,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4230,
											"end": 4550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4886,
											"end": 5201,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 4886,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 4960,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 4968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5015,
											"end": 5017,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5012,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4990,
											"end": 5013,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 5018,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4983,
											"end": 5035,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4983,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 4983,
											"end": 5035,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5031,
											"end": 5032,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5028,
											"end": 5029,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5021,
											"end": 5033,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4983,
											"end": 5035,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 4983,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5080,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5089,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 5114,
											"end": 5119,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5089,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 5089,
											"end": 5120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5089,
											"end": 5120,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 5089,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5139,
											"end": 5144,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5195,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4886,
											"end": 5201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5662,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 5206,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5289,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5291,
											"end": 5297,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5354,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5340,
											"end": 5349,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5331,
											"end": 5338,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5327,
											"end": 5350,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5323,
											"end": 5355,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5320,
											"end": 5372,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5320,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 5320,
											"end": 5372,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5368,
											"end": 5369,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5366,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5358,
											"end": 5370,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5320,
											"end": 5372,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 5320,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5407,
											"end": 5416,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5417,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5426,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 5451,
											"end": 5456,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5426,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 5426,
											"end": 5457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5426,
											"end": 5457,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 5426,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 5481,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5533,
											"end": 5535,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5505,
											"end": 5537,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 5505,
											"end": 5537,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 5546,
											"end": 5579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5579,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 5546,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5662,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5662,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5598,
											"end": 5605,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5598,
											"end": 5605,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5652,
											"end": 5654,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5637,
											"end": 5655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5637,
											"end": 5655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5637,
											"end": 5655,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5637,
											"end": 5655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5624,
											"end": 5656,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5624,
											"end": 5656,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 6258,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 5667,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5737,
											"end": 5743,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5798,
											"end": 5800,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5786,
											"end": 5795,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5784,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5773,
											"end": 5796,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5769,
											"end": 5801,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5766,
											"end": 5818,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5766,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 5766,
											"end": 5818,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5814,
											"end": 5815,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5811,
											"end": 5812,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5804,
											"end": 5816,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5766,
											"end": 5818,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 5766,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5854,
											"end": 5863,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5841,
											"end": 5864,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5924,
											"end": 5926,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5916,
											"end": 5922,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5913,
											"end": 5927,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5944,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 5910,
											"end": 5944,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5940,
											"end": 5941,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5937,
											"end": 5938,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5930,
											"end": 5942,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5944,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 5910,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5978,
											"end": 5984,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5967,
											"end": 5976,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5985,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5953,
											"end": 5985,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5953,
											"end": 5985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6030,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6016,
											"end": 6020,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6012,
											"end": 6014,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6008,
											"end": 6021,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6004,
											"end": 6031,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 5994,
											"end": 6049,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6045,
											"end": 6046,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6042,
											"end": 6043,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6035,
											"end": 6047,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6049,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 5994,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6087,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6111,
											"end": 6113,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6103,
											"end": 6109,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6100,
											"end": 6114,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6131,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 6097,
											"end": 6131,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6128,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6125,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6117,
											"end": 6129,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6131,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 6097,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6172,
											"end": 6179,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6169,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6158,
											"end": 6164,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6154,
											"end": 6156,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6150,
											"end": 6165,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6143,
											"end": 6180,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6197,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 6140,
											"end": 6197,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6193,
											"end": 6194,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6190,
											"end": 6191,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6197,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 6140,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6224,
											"end": 6226,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6216,
											"end": 6227,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6216,
											"end": 6227,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6216,
											"end": 6227,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6216,
											"end": 6227,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6216,
											"end": 6227,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 6246,
											"end": 6252,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6246,
											"end": 6252,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5667,
											"end": 6258,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 6258,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5667,
											"end": 6258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6487,
											"end": 7244,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 6487,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6591,
											"end": 6597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6605,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6607,
											"end": 6613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6668,
											"end": 6670,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6656,
											"end": 6665,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6647,
											"end": 6654,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6643,
											"end": 6666,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6639,
											"end": 6671,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6636,
											"end": 6688,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6636,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 6636,
											"end": 6688,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6684,
											"end": 6685,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6681,
											"end": 6682,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6674,
											"end": 6686,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6636,
											"end": 6688,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 6636,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6724,
											"end": 6733,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6711,
											"end": 6734,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6753,
											"end": 6771,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6794,
											"end": 6796,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 6792,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6783,
											"end": 6797,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6814,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 6780,
											"end": 6814,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6810,
											"end": 6811,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 6808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6800,
											"end": 6812,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6814,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 6780,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6848,
											"end": 6854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6833,
											"end": 6855,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6823,
											"end": 6855,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6823,
											"end": 6855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6893,
											"end": 6900,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6886,
											"end": 6890,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6882,
											"end": 6884,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6878,
											"end": 6891,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6874,
											"end": 6901,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 6864,
											"end": 6919,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6915,
											"end": 6916,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 6913,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6905,
											"end": 6917,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6919,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 6864,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6955,
											"end": 6957,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6942,
											"end": 6958,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 6983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6973,
											"end": 6979,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6970,
											"end": 6984,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6967,
											"end": 7001,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6967,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 6967,
											"end": 7001,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6997,
											"end": 6998,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6994,
											"end": 6995,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6987,
											"end": 6999,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6967,
											"end": 7001,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 6967,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7052,
											"end": 7059,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7045,
											"end": 7049,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7035,
											"end": 7041,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7032,
											"end": 7033,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 7028,
											"end": 7042,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7024,
											"end": 7026,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7020,
											"end": 7043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7016,
											"end": 7050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7013,
											"end": 7060,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7010,
											"end": 7077,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7010,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 7010,
											"end": 7077,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7073,
											"end": 7074,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7070,
											"end": 7071,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7063,
											"end": 7075,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7010,
											"end": 7077,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 7010,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7104,
											"end": 7108,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7096,
											"end": 7109,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7096,
											"end": 7109,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7096,
											"end": 7109,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7096,
											"end": 7109,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 7128,
											"end": 7134,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7128,
											"end": 7134,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7166,
											"end": 7186,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7166,
											"end": 7186,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7166,
											"end": 7186,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7153,
											"end": 7187,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7153,
											"end": 7187,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 7234,
											"end": 7236,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7219,
											"end": 7237,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7206,
											"end": 7238,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7206,
											"end": 7238,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6487,
											"end": 7244,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6487,
											"end": 7244,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6487,
											"end": 7244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7605,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 7249,
											"end": 7605,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7451,
											"end": 7453,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7433,
											"end": 7454,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7433,
											"end": 7454,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7433,
											"end": 7454,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7463,
											"end": 7493,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7529,
											"end": 7563,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7524,
											"end": 7526,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7502,
											"end": 7564,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7596,
											"end": 7598,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7581,
											"end": 7599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7581,
											"end": 7599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7948,
											"end": 8132,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 7948,
											"end": 8132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8018,
											"end": 8024,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8071,
											"end": 8073,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8059,
											"end": 8068,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8050,
											"end": 8057,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8046,
											"end": 8069,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8042,
											"end": 8074,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8039,
											"end": 8091,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8039,
											"end": 8091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 8039,
											"end": 8091,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8087,
											"end": 8088,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8084,
											"end": 8085,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8077,
											"end": 8089,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8039,
											"end": 8091,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 8039,
											"end": 8091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8110,
											"end": 8126,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8110,
											"end": 8126,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7948,
											"end": 8132,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7948,
											"end": 8132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9887,
											"end": 10132,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 9887,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9954,
											"end": 9960,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10007,
											"end": 10009,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9995,
											"end": 10004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 9993,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 10005,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9978,
											"end": 10010,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9975,
											"end": 10027,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9975,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 9975,
											"end": 10027,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10023,
											"end": 10024,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10020,
											"end": 10021,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10013,
											"end": 10025,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9975,
											"end": 10027,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 9975,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10049,
											"end": 10065,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10074,
											"end": 10102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 10096,
											"end": 10101,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10074,
											"end": 10102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 10074,
											"end": 10102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11345,
											"end": 11596,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 11345,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11415,
											"end": 11421,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11468,
											"end": 11470,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11456,
											"end": 11465,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11447,
											"end": 11454,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11443,
											"end": 11466,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11439,
											"end": 11471,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 11488,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 11436,
											"end": 11488,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11484,
											"end": 11485,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11481,
											"end": 11482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11474,
											"end": 11486,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 11488,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 11436,
											"end": 11488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11516,
											"end": 11525,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11510,
											"end": 11526,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11535,
											"end": 11566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 11560,
											"end": 11565,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11535,
											"end": 11566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 11535,
											"end": 11566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16469,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 16342,
											"end": 16469,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16403,
											"end": 16413,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 16398,
											"end": 16401,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 16394,
											"end": 16414,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 16391,
											"end": 16392,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16384,
											"end": 16415,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16434,
											"end": 16438,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 16431,
											"end": 16432,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16424,
											"end": 16439,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16458,
											"end": 16462,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16455,
											"end": 16456,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16448,
											"end": 16463,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16474,
											"end": 16602,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 16474,
											"end": 16602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16514,
											"end": 16517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16545,
											"end": 16546,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16541,
											"end": 16547,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 16538,
											"end": 16539,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16535,
											"end": 16548,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16532,
											"end": 16571,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16532,
											"end": 16571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 16532,
											"end": 16571,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16551,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 16551,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 16551,
											"end": 16569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16551,
											"end": 16569,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 16551,
											"end": 16569,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16587,
											"end": 16596,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16587,
											"end": 16596,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16474,
											"end": 16602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18102,
											"end": 18229,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 18102,
											"end": 18229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18163,
											"end": 18173,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 18158,
											"end": 18161,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 18154,
											"end": 18174,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 18151,
											"end": 18152,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18144,
											"end": 18175,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18194,
											"end": 18198,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 18191,
											"end": 18192,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 18184,
											"end": 18199,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18218,
											"end": 18222,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 18215,
											"end": 18216,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18208,
											"end": 18223,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18234,
											"end": 18369,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 18234,
											"end": 18369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18273,
											"end": 18276,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18294,
											"end": 18311,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 18294,
											"end": 18311,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18294,
											"end": 18311,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18291,
											"end": 18334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 18291,
											"end": 18334,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18314,
											"end": 18332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 18314,
											"end": 18332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 18314,
											"end": 18332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18314,
											"end": 18332,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 18314,
											"end": 18332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18361,
											"end": 18362,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 18350,
											"end": 18363,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18350,
											"end": 18363,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18234,
											"end": 18369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								},
								"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ERC721A/INagaKid.sol",
								"ERC721A/MintNagaKids.sol",
								"ERC721A/VerifySignature.sol",
								"erc721a/contracts/IERC721A.sol",
								"erc721a/contracts/extensions/IERC721ABurnable.sol",
								"erc721a/contracts/extensions/IERC721AQueryable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT()": "0a25dea9",
							"NAGA_HOLDER_MINT_ROUND()": "24c37a85",
							"WHITELIST_MINT_ROUND()": "f500cdfc",
							"WITHDRAW_ROLE()": "e02023a1",
							"allowlistMint(bytes32[],uint256,bytes32)": "f6b48e55",
							"currentMintRound()": "ef5fe79f",
							"getEthSignedMessageHash(bytes32)": "fa540801",
							"getMaxSupply()": "4c0f38c2",
							"getMessageHash(address)": "1f5ac1b2",
							"getTotalSupply()": "c4e41b22",
							"isPrivateMintOpen()": "8907f3fa",
							"isPublicMintOpen()": "a4435dfd",
							"isPublicMinted(address)": "f055c7a9",
							"isUserMinted(address,bytes32)": "ffdc6129",
							"merkleRoot()": "2eb4a7ab",
							"nagaKidContract()": "df4e5881",
							"owner()": "8da5cb5b",
							"publicMint(bytes)": "de6892c8",
							"recoverSigner(bytes32,bytes)": "97aba7f9",
							"renounceOwnership()": "715018a6",
							"setMerkleRoot(bytes32)": "7cb64759",
							"setNagaKidContract(address)": "9e6c8855",
							"setPublicMint(bool)": "0e2d56cf",
							"setRound(bytes32)": "ff05fe4a",
							"setSigner(address)": "6c19e783",
							"signer()": "238ac933",
							"splitSignature(bytes)": "a7bb5803",
							"transferOwnership(address)": "f2fde38b",
							"userMintedAmount(address,bytes32)": "b5abafa1",
							"verify(address,address,bytes)": "42920a46",
							"withdraw(address)": "51cff8d9",
							"withdrawCurrency(address,address)": "8407ecc4",
							"withdrawNFT(address,address,uint256)": "bff863ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract INagaKid\",\"name\":\"_nagaKidContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRootBefore\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRootAfter\",\"type\":\"bytes32\"}],\"name\":\"MerkleRootChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nagaKidBefore\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nagaKidAfter\",\"type\":\"address\"}],\"name\":\"NagaKidContractChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PrivateMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PublicMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"roundBefore\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"roundAfter\",\"type\":\"bytes32\"}],\"name\":\"RoundChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signerBefore\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signerAfter\",\"type\":\"address\"}],\"name\":\"SignerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceOFContract\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceOfContract\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WithdrawCurrency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"NFT\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WithdrawNFT\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAGA_HOLDER_MINT_ROUND\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WHITELIST_MINT_ROUND\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_round\",\"type\":\"bytes32\"}],\"name\":\"allowlistMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMintRound\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPrivateMintOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPublicMintOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isPublicMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_round\",\"type\":\"bytes32\"}],\"name\":\"isUserMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nagaKidContract\",\"outputs\":[{\"internalType\":\"contract INagaKid\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"publicMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"recoverSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INagaKid\",\"name\":\"_nagaKid\",\"type\":\"address\"}],\"name\":\"setNagaKidContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"setPublicMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_round\",\"type\":\"bytes32\"}],\"name\":\"setRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_round\",\"type\":\"bytes32\"}],\"name\":\"userMintedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"withdrawCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_NFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721A/MintNagaKids.sol\":\"MintNagaKids\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xaaa504ac17eb0298dcdf5733ce24021b4914f035b97f4400b92827341d3facb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aa68fa19422863cc91d23b5896917dbe79175ed47b591148aaeb3e98cb49752\",\"dweb:/ipfs/QmeY64vTRbGhdXcytRKusfJsAfNF4aqr9e1SGBGdCYvW2j\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"ERC721A/INagaKid.sol\":{\"keccak256\":\"0x6d40b0cc478b970043e5567d209eda8b52325f1d271022e638f43e4aefb4e595\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c6f40836e74cc2739a624d11dd24565c4b63fcbe5a06481566e73c1512dfe63\",\"dweb:/ipfs/QmbJKRZNVHk55PV6fEjbE5kgNGLaTJzu8eAvwk2derkhnq\"]},\"ERC721A/MintNagaKids.sol\":{\"keccak256\":\"0x0ffeae822ed3a1b4e5fb15f68b8969ddef1b823a2110b223e2050a1a70e233fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08f9f165b531416c1eb2113a3ae08f715c7285bb23b8bc9c1e2591c8f0b3b4b9\",\"dweb:/ipfs/QmNrWk6GAbJTBkebYFkFbebb7go6eC5DGtNgM93oWNmDV1\"]},\"ERC721A/VerifySignature.sol\":{\"keccak256\":\"0x7b595fba7b304df2d793814bf6f1ead1687b6de712cdbf02113e57ba478df9b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1c72776be7d04ed5cf7f224d796db5ec4a48c9523c1367cc513c6476e7db1d\",\"dweb:/ipfs/QmanAvNztLiKWauT1Usjmfzm8kvs3iMgYBx1Q8JEZLg1ej\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]},\"erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x55e6863d273b676d65797fee7aac1b520848a0e31c0dd2e5a29887457043b7a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8477b7c9788e36787f79ef9b1580c46bdadc13da4c8ef85ce82d42a754743\",\"dweb:/ipfs/QmQvqKtF8YyJKqpEiNh1KkeC1Q5JmvEkQmP2ZCPYSW72BS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 115,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 530,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "nagaKidContract",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(INagaKid)494"
							},
							{
								"astId": 532,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "currentMintRound",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 534,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "merkleRoot",
								"offset": 0,
								"slot": "4",
								"type": "t_bytes32"
							},
							{
								"astId": 537,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "isPublicMintOpen",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 540,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "isPrivateMintOpen",
								"offset": 1,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 542,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "signer",
								"offset": 2,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 548,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "_isUserMinted",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))"
							},
							{
								"astId": 554,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "_userMintedAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
							},
							{
								"astId": 558,
								"contract": "ERC721A/MintNagaKids.sol:MintNagaKids",
								"label": "_isPublicMinted",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(INagaKid)494": {
								"encoding": "inplace",
								"label": "contract INagaKid",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(bytes32 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bytes32,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(bytes32 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bytes32,t_uint256)"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC721A/VerifySignature.sol": {
				"VerifySignature": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_messageHash",
									"type": "bytes32"
								}
							],
							"name": "getEthSignedMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_ethSignedMessageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "recoverSigner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "splitSignature",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC721A/VerifySignature.sol\":61:2303  contract VerifySignature {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC721A/VerifySignature.sol\":61:2303  contract VerifySignature {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1f5ac1b2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x42920a46\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x97aba7f9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa7bb5803\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfa540801\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC721A/VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"ERC721A/VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n    tag_4:\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n        /* \"#utility.yul\":2058:2072   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2051:2073   */\n      iszero\n        /* \"#utility.yul\":2033:2074   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2021:2023   */\n      0x20\n        /* \"#utility.yul\":2006:2024   */\n      add\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n      tag_12\n        /* \"#utility.yul\":1893:2080   */\n      jump\n        /* \"ERC721A/VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_5:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2642:2674   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2624:2675   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2612:2614   */\n      0x20\n        /* \"#utility.yul\":2597:2615   */\n      add\n        /* \"ERC721A/VerifySignature.sol\":1127:1401  function recoverSigner(... */\n      tag_12\n        /* \"#utility.yul\":2478:2681   */\n      jump\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_6:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3209:3234   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":3265:3267   */\n      0x20\n        /* \"#utility.yul\":3250:3268   */\n      dup5\n      add\n        /* \"#utility.yul\":3243:3277   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3325:3329   */\n      0xff\n        /* \"#utility.yul\":3313:3330   */\n      and\n        /* \"#utility.yul\":3293:3311   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3286:3331   */\n      mstore\n        /* \"#utility.yul\":3197:3199   */\n      0x60\n        /* \"#utility.yul\":3182:3200   */\n      add\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      tag_12\n        /* \"#utility.yul\":3011:3337   */\n      jump\n        /* \"ERC721A/VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_7:\n      tag_8\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"ERC721A/VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_11:\n        /* \"ERC721A/VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":3754:3756   */\n      0x60\n        /* \"#utility.yul\":3750:3765   */\n      dup4\n      dup2\n      shl\n        /* \"#utility.yul\":3746:3770   */\n      dup3\n      and\n        /* \"ERC721A/VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      0x20\n      dup5\n      add\n        /* \"#utility.yul\":3734:3771   */\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":244:248  this */\n      address\n        /* \"#utility.yul\":3805:3820   */\n      swap1\n      shl\n        /* \"#utility.yul\":3801:3825   */\n      and\n        /* \"#utility.yul\":3787:3799   */\n      0x34\n      dup3\n      add\n        /* \"#utility.yul\":3780:3826   */\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":175:182  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":3842:3854   */\n      0x48\n      add\n        /* \"ERC721A/VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n    tag_38:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":202:251  keccak256(abi.encodePacked(_user, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"ERC721A/VerifySignature.sol\":195:251  return keccak256(abi.encodePacked(_user, address(this))) */\n      swap1\n      pop\n        /* \"ERC721A/VerifySignature.sol\":99:259  function getMessageHash(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n    tag_17:\n        /* \"ERC721A/VerifySignature.sol\":896:900  bool */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":913:932  bytes32 messageHash */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":935:956  getMessageHash(_user) */\n      tag_41\n        /* \"ERC721A/VerifySignature.sol\":950:955  _user */\n      dup5\n        /* \"ERC721A/VerifySignature.sol\":935:949  getMessageHash */\n      tag_11\n        /* \"ERC721A/VerifySignature.sol\":935:956  getMessageHash(_user) */\n      jump\t// in\n    tag_41:\n        /* \"ERC721A/VerifySignature.sol\":913:956  bytes32 messageHash = getMessageHash(_user) */\n      swap1\n      pop\n        /* \"ERC721A/VerifySignature.sol\":967:995  bytes32 ethSignedMessageHash */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      tag_42\n        /* \"ERC721A/VerifySignature.sol\":1022:1033  messageHash */\n      dup3\n        /* \"ERC721A/VerifySignature.sol\":998:1021  getEthSignedMessageHash */\n      tag_35\n        /* \"ERC721A/VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      jump\t// in\n    tag_42:\n        /* \"ERC721A/VerifySignature.sol\":967:1034  bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash) */\n      swap1\n      pop\n        /* \"ERC721A/VerifySignature.sol\":1104:1111  _signer */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n        /* \"ERC721A/VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      tag_43\n        /* \"ERC721A/VerifySignature.sol\":1068:1088  ethSignedMessageHash */\n      dup3\n        /* \"ERC721A/VerifySignature.sol\":1090:1099  signature */\n      dup7\n        /* \"ERC721A/VerifySignature.sol\":1054:1067  recoverSigner */\n      tag_23\n        /* \"ERC721A/VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC721A/VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n      eq\n      swap7\n        /* \"ERC721A/VerifySignature.sol\":769:1119  function verify(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A/VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_23:\n        /* \"ERC721A/VerifySignature.sol\":1252:1259  address */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1273:1282  bytes32 r */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":1284:1293  bytes32 s */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1295:1302  uint8 v */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      tag_45\n        /* \"ERC721A/VerifySignature.sol\":1321:1331  _signature */\n      dup6\n        /* \"ERC721A/VerifySignature.sol\":1306:1320  splitSignature */\n      tag_29\n        /* \"ERC721A/VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      jump\t// in\n    tag_45:\n        /* \"ERC721A/VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x40\n      dup1\n      mload\n      0x00\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":4092:4117   */\n      dup12\n      swap1\n      mstore\n        /* \"#utility.yul\":4165:4169   */\n      0xff\n        /* \"#utility.yul\":4153:4170   */\n      dup4\n      and\n        /* \"#utility.yul\":4133:4151   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":4126:4171   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4187:4205   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":4180:4214   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":4230:4248   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":4223:4257   */\n      dup4\n      swap1\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":1272:1332  (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature) */\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n        /* \"ERC721A/VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":4064:4083   */\n      0xa0\n      add\n        /* \"ERC721A/VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap8\n        /* \"ERC721A/VerifySignature.sol\":1127:1401  function recoverSigner(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_29:\n        /* \"ERC721A/VerifySignature.sol\":1513:1522  bytes32 r */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1537:1546  bytes32 s */\n      dup1\n        /* \"ERC721A/VerifySignature.sol\":1561:1568  uint8 v */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":1604:1607  sig */\n      dup4\n        /* \"ERC721A/VerifySignature.sol\":1604:1614  sig.length */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":1618:1620  65 */\n      0x41\n        /* \"ERC721A/VerifySignature.sol\":1604:1620  sig.length == 65 */\n      eq\n        /* \"ERC721A/VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4470:4472   */\n      0x20\n        /* \"ERC721A/VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4452:4473   */\n      mstore\n        /* \"#utility.yul\":4509:4511   */\n      0x18\n        /* \"#utility.yul\":4489:4507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4482:4512   */\n      mstore\n        /* \"#utility.yul\":4548:4574   */\n      0x696e76616c6964207369676e6174757265206c656e6774680000000000000000\n        /* \"#utility.yul\":4528:4546   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4521:4575   */\n      mstore\n        /* \"#utility.yul\":4592:4610   */\n      0x64\n      add\n        /* \"ERC721A/VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n      pop\n      pop\n      pop\n        /* \"ERC721A/VerifySignature.sol\":2058:2060  32 */\n      0x20\n        /* \"ERC721A/VerifySignature.sol\":2049:2061  add(sig, 32) */\n      dup2\n      add\n        /* \"ERC721A/VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":2128:2130  64 */\n      0x40\n        /* \"ERC721A/VerifySignature.sol\":2119:2131  add(sig, 64) */\n      dup3\n      add\n        /* \"ERC721A/VerifySignature.sol\":2113:2132  mload(add(sig, 64)) */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":2235:2237  96 */\n      0x60\n        /* \"ERC721A/VerifySignature.sol\":2226:2238  add(sig, 96) */\n      swap1\n      swap3\n      add\n        /* \"ERC721A/VerifySignature.sol\":2220:2239  mload(add(sig, 96)) */\n      mload\n        /* \"ERC721A/VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      swap1\n      swap3\n        /* \"ERC721A/VerifySignature.sol\":2217:2218  0 */\n      0x00\n        /* \"ERC721A/VerifySignature.sol\":2212:2240  byte(0, mload(add(sig, 96))) */\n      swap2\n      swap1\n      swap2\n      byte\n      swap1\n        /* \"ERC721A/VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      jump\t// out\n        /* \"ERC721A/VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_35:\n        /* \"ERC721A/VerifySignature.sol\":611:738  abi.encodePacked(... */\n      mload(0x40)\n        /* \"#utility.yul\":4863:4929   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"ERC721A/VerifySignature.sol\":611:738  abi.encodePacked(... */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":4851:4930   */\n      mstore\n        /* \"#utility.yul\":4946:4958   */\n      0x3c\n      dup2\n      add\n        /* \"#utility.yul\":4939:4967   */\n      dup3\n      swap1\n      mstore\n        /* \"ERC721A/VerifySignature.sol\":370:377  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":4983:4995   */\n      0x5c\n      add\n        /* \"ERC721A/VerifySignature.sol\":611:738  abi.encodePacked(... */\n      tag_38\n        /* \"#utility.yul\":4621:5001   */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_57:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_62:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_10:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_64:\n        /* \"#utility.yul\":343:372   */\n      tag_65\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_57\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:692   */\n    tag_58:\n        /* \"#utility.yul\":626:636   */\n      0x4e487b71\n        /* \"#utility.yul\":621:624   */\n      0xe0\n        /* \"#utility.yul\":617:637   */\n      shl\n        /* \"#utility.yul\":614:615   */\n      0x00\n        /* \"#utility.yul\":607:638   */\n      mstore\n        /* \"#utility.yul\":657:661   */\n      0x41\n        /* \"#utility.yul\":654:655   */\n      0x04\n        /* \"#utility.yul\":647:662   */\n      mstore\n        /* \"#utility.yul\":681:685   */\n      0x24\n        /* \"#utility.yul\":678:679   */\n      0x00\n        /* \"#utility.yul\":671:686   */\n      revert\n        /* \"#utility.yul\":697:1415   */\n    tag_59:\n        /* \"#utility.yul\":739:744   */\n      0x00\n        /* \"#utility.yul\":792:795   */\n      dup3\n        /* \"#utility.yul\":785:789   */\n      0x1f\n        /* \"#utility.yul\":777:783   */\n      dup4\n        /* \"#utility.yul\":773:790   */\n      add\n        /* \"#utility.yul\":769:796   */\n      slt\n        /* \"#utility.yul\":759:814   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":759:814   */\n    tag_69:\n        /* \"#utility.yul\":846:852   */\n      dup2\n        /* \"#utility.yul\":833:853   */\n      calldataload\n        /* \"#utility.yul\":872:890   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":909:911   */\n      dup1\n        /* \"#utility.yul\":905:907   */\n      dup3\n        /* \"#utility.yul\":902:912   */\n      gt\n        /* \"#utility.yul\":899:935   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":915:933   */\n      tag_71\n      tag_58\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":990:992   */\n      0x40\n        /* \"#utility.yul\":984:993   */\n      mload\n        /* \"#utility.yul\":958:960   */\n      0x1f\n        /* \"#utility.yul\":1044:1057   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1040:1062   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1064:1066   */\n      0x3f\n        /* \"#utility.yul\":1036:1067   */\n      add\n        /* \"#utility.yul\":1032:1072   */\n      and\n        /* \"#utility.yul\":1020:1073   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1088:1106   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":1108:1130   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1085:1131   */\n      or\n        /* \"#utility.yul\":1082:1154   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1134:1152   */\n      tag_73\n      tag_58\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1174:1184   */\n      dup2\n        /* \"#utility.yul\":1170:1172   */\n      0x40\n        /* \"#utility.yul\":1163:1185   */\n      mstore\n        /* \"#utility.yul\":1209:1211   */\n      dup4\n        /* \"#utility.yul\":1201:1207   */\n      dup2\n        /* \"#utility.yul\":1194:1212   */\n      mstore\n        /* \"#utility.yul\":1255:1258   */\n      dup7\n        /* \"#utility.yul\":1248:1252   */\n      0x20\n        /* \"#utility.yul\":1243:1245   */\n      dup6\n        /* \"#utility.yul\":1235:1241   */\n      dup9\n        /* \"#utility.yul\":1231:1246   */\n      add\n        /* \"#utility.yul\":1227:1253   */\n      add\n        /* \"#utility.yul\":1224:1259   */\n      gt\n        /* \"#utility.yul\":1221:1276   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1272:1273   */\n      0x00\n        /* \"#utility.yul\":1269:1270   */\n      dup1\n        /* \"#utility.yul\":1262:1274   */\n      revert\n        /* \"#utility.yul\":1221:1276   */\n    tag_74:\n        /* \"#utility.yul\":1336:1338   */\n      dup4\n        /* \"#utility.yul\":1329:1333   */\n      0x20\n        /* \"#utility.yul\":1321:1327   */\n      dup8\n        /* \"#utility.yul\":1317:1334   */\n      add\n        /* \"#utility.yul\":1310:1314   */\n      0x20\n        /* \"#utility.yul\":1302:1308   */\n      dup4\n        /* \"#utility.yul\":1298:1315   */\n      add\n        /* \"#utility.yul\":1285:1339   */\n      calldatacopy\n        /* \"#utility.yul\":1383:1384   */\n      0x00\n        /* \"#utility.yul\":1376:1380   */\n      0x20\n        /* \"#utility.yul\":1371:1373   */\n      dup6\n        /* \"#utility.yul\":1363:1369   */\n      dup4\n        /* \"#utility.yul\":1359:1374   */\n      add\n        /* \"#utility.yul\":1355:1381   */\n      add\n        /* \"#utility.yul\":1348:1385   */\n      mstore\n        /* \"#utility.yul\":1403:1409   */\n      dup1\n        /* \"#utility.yul\":1394:1409   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":697:1415   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1420:1888   */\n    tag_16:\n        /* \"#utility.yul\":1506:1512   */\n      0x00\n        /* \"#utility.yul\":1514:1520   */\n      dup1\n        /* \"#utility.yul\":1522:1528   */\n      0x00\n        /* \"#utility.yul\":1575:1577   */\n      0x60\n        /* \"#utility.yul\":1563:1572   */\n      dup5\n        /* \"#utility.yul\":1554:1561   */\n      dup7\n        /* \"#utility.yul\":1550:1573   */\n      sub\n        /* \"#utility.yul\":1546:1578   */\n      slt\n        /* \"#utility.yul\":1543:1595   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":1591:1592   */\n      0x00\n        /* \"#utility.yul\":1588:1589   */\n      dup1\n        /* \"#utility.yul\":1581:1593   */\n      revert\n        /* \"#utility.yul\":1543:1595   */\n    tag_76:\n        /* \"#utility.yul\":1614:1643   */\n      tag_77\n        /* \"#utility.yul\":1633:1642   */\n      dup5\n        /* \"#utility.yul\":1614:1643   */\n      tag_57\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1604:1643   */\n      swap3\n      pop\n        /* \"#utility.yul\":1662:1700   */\n      tag_78\n        /* \"#utility.yul\":1696:1698   */\n      0x20\n        /* \"#utility.yul\":1685:1694   */\n      dup6\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1662:1700   */\n      tag_57\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1652:1700   */\n      swap2\n      pop\n        /* \"#utility.yul\":1751:1753   */\n      0x40\n        /* \"#utility.yul\":1740:1749   */\n      dup5\n        /* \"#utility.yul\":1736:1754   */\n      add\n        /* \"#utility.yul\":1723:1755   */\n      calldataload\n        /* \"#utility.yul\":1778:1796   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1770:1776   */\n      dup2\n        /* \"#utility.yul\":1767:1797   */\n      gt\n        /* \"#utility.yul\":1764:1814   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":1810:1811   */\n      0x00\n        /* \"#utility.yul\":1807:1808   */\n      dup1\n        /* \"#utility.yul\":1800:1812   */\n      revert\n        /* \"#utility.yul\":1764:1814   */\n    tag_79:\n        /* \"#utility.yul\":1833:1882   */\n      tag_80\n        /* \"#utility.yul\":1874:1881   */\n      dup7\n        /* \"#utility.yul\":1865:1871   */\n      dup3\n        /* \"#utility.yul\":1854:1863   */\n      dup8\n        /* \"#utility.yul\":1850:1872   */\n      add\n        /* \"#utility.yul\":1833:1882   */\n      tag_59\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1823:1882   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1420:1888   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2085:2473   */\n    tag_22:\n        /* \"#utility.yul\":2162:2168   */\n      0x00\n        /* \"#utility.yul\":2170:2176   */\n      dup1\n        /* \"#utility.yul\":2223:2225   */\n      0x40\n        /* \"#utility.yul\":2211:2220   */\n      dup4\n        /* \"#utility.yul\":2202:2209   */\n      dup6\n        /* \"#utility.yul\":2198:2221   */\n      sub\n        /* \"#utility.yul\":2194:2226   */\n      slt\n        /* \"#utility.yul\":2191:2243   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":2239:2240   */\n      0x00\n        /* \"#utility.yul\":2236:2237   */\n      dup1\n        /* \"#utility.yul\":2229:2241   */\n      revert\n        /* \"#utility.yul\":2191:2243   */\n    tag_83:\n        /* \"#utility.yul\":2275:2284   */\n      dup3\n        /* \"#utility.yul\":2262:2285   */\n      calldataload\n        /* \"#utility.yul\":2252:2285   */\n      swap2\n      pop\n        /* \"#utility.yul\":2336:2338   */\n      0x20\n        /* \"#utility.yul\":2325:2334   */\n      dup4\n        /* \"#utility.yul\":2321:2339   */\n      add\n        /* \"#utility.yul\":2308:2340   */\n      calldataload\n        /* \"#utility.yul\":2363:2381   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2355:2361   */\n      dup2\n        /* \"#utility.yul\":2352:2382   */\n      gt\n        /* \"#utility.yul\":2349:2399   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":2395:2396   */\n      0x00\n        /* \"#utility.yul\":2392:2393   */\n      dup1\n        /* \"#utility.yul\":2385:2397   */\n      revert\n        /* \"#utility.yul\":2349:2399   */\n    tag_84:\n        /* \"#utility.yul\":2418:2467   */\n      tag_85\n        /* \"#utility.yul\":2459:2466   */\n      dup6\n        /* \"#utility.yul\":2450:2456   */\n      dup3\n        /* \"#utility.yul\":2439:2448   */\n      dup7\n        /* \"#utility.yul\":2435:2457   */\n      add\n        /* \"#utility.yul\":2418:2467   */\n      tag_59\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2408:2467   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2085:2473   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2686:3006   */\n    tag_28:\n        /* \"#utility.yul\":2754:2760   */\n      0x00\n        /* \"#utility.yul\":2807:2809   */\n      0x20\n        /* \"#utility.yul\":2795:2804   */\n      dup3\n        /* \"#utility.yul\":2786:2793   */\n      dup5\n        /* \"#utility.yul\":2782:2805   */\n      sub\n        /* \"#utility.yul\":2778:2810   */\n      slt\n        /* \"#utility.yul\":2775:2827   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":2823:2824   */\n      0x00\n        /* \"#utility.yul\":2820:2821   */\n      dup1\n        /* \"#utility.yul\":2813:2825   */\n      revert\n        /* \"#utility.yul\":2775:2827   */\n    tag_88:\n        /* \"#utility.yul\":2863:2872   */\n      dup2\n        /* \"#utility.yul\":2850:2873   */\n      calldataload\n        /* \"#utility.yul\":2896:2914   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2888:2894   */\n      dup2\n        /* \"#utility.yul\":2885:2915   */\n      gt\n        /* \"#utility.yul\":2882:2932   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":2928:2929   */\n      0x00\n        /* \"#utility.yul\":2925:2926   */\n      dup1\n        /* \"#utility.yul\":2918:2930   */\n      revert\n        /* \"#utility.yul\":2882:2932   */\n    tag_89:\n        /* \"#utility.yul\":2951:3000   */\n      tag_90\n        /* \"#utility.yul\":2992:2999   */\n      dup5\n        /* \"#utility.yul\":2983:2989   */\n      dup3\n        /* \"#utility.yul\":2972:2981   */\n      dup6\n        /* \"#utility.yul\":2968:2990   */\n      add\n        /* \"#utility.yul\":2951:3000   */\n      tag_59\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2941:3000   */\n      swap5\n        /* \"#utility.yul\":2686:3006   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3342:3522   */\n    tag_34:\n        /* \"#utility.yul\":3401:3407   */\n      0x00\n        /* \"#utility.yul\":3454:3456   */\n      0x20\n        /* \"#utility.yul\":3442:3451   */\n      dup3\n        /* \"#utility.yul\":3433:3440   */\n      dup5\n        /* \"#utility.yul\":3429:3452   */\n      sub\n        /* \"#utility.yul\":3425:3457   */\n      slt\n        /* \"#utility.yul\":3422:3474   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":3470:3471   */\n      0x00\n        /* \"#utility.yul\":3467:3468   */\n      dup1\n        /* \"#utility.yul\":3460:3472   */\n      revert\n        /* \"#utility.yul\":3422:3474   */\n    tag_93:\n      pop\n        /* \"#utility.yul\":3493:3516   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3342:3522   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204bd3a502567a1edbd5ebf7012501299fc763cc387d434dd37975771b1f7d6b4764736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506104e5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631f5ac1b21461005c57806342920a461461008257806397aba7f9146100a5578063a7bb5803146100d0578063fa54080114610101575b600080fd5b61006f61006a3660046102ef565b610114565b6040519081526020015b60405180910390f35b6100956100903660046103b4565b61015e565b6040519015158152602001610079565b6100b86100b3366004610412565b6101a1565b6040516001600160a01b039091168152602001610079565b6100e36100de366004610459565b610220565b60408051938452602084019290925260ff1690820152606001610079565b61006f61010f366004610496565b610298565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b60008061016a84610114565b9050600061017782610298565b9050856001600160a01b031661018d82866101a1565b6001600160a01b0316149695505050505050565b6000806000806101b085610220565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa15801561020b573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411461027a5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e6774680000000000000000604482015260640160405180910390fd5b50505060208101516040820151606090920151909260009190911a90565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610141565b80356001600160a01b03811681146102ea57600080fd5b919050565b60006020828403121561030157600080fd5b61030a826102d3565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261033857600080fd5b813567ffffffffffffffff8082111561035357610353610311565b604051601f8301601f19908116603f0116810190828211818310171561037b5761037b610311565b8160405283815286602085880101111561039457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156103c957600080fd5b6103d2846102d3565b92506103e0602085016102d3565b9150604084013567ffffffffffffffff8111156103fc57600080fd5b61040886828701610327565b9150509250925092565b6000806040838503121561042557600080fd5b82359150602083013567ffffffffffffffff81111561044357600080fd5b61044f85828601610327565b9150509250929050565b60006020828403121561046b57600080fd5b813567ffffffffffffffff81111561048257600080fd5b61048e84828501610327565b949350505050565b6000602082840312156104a857600080fd5b503591905056fea26469706673582212204bd3a502567a1edbd5ebf7012501299fc763cc387d434dd37975771b1f7d6b4764736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x101 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x412 JUMP JUMPDEST PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16A DUP5 PUSH2 0x114 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x177 DUP3 PUSH2 0x298 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18D DUP3 DUP7 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1B0 DUP6 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x141 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30A DUP3 PUSH2 0x2D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x353 JUMPI PUSH2 0x353 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x37B JUMPI PUSH2 0x37B PUSH2 0x311 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D2 DUP5 PUSH2 0x2D3 JUMP JUMPDEST SWAP3 POP PUSH2 0x3E0 PUSH1 0x20 DUP6 ADD PUSH2 0x2D3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x408 DUP7 DUP3 DUP8 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44F DUP6 DUP3 DUP7 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48E DUP5 DUP3 DUP6 ADD PUSH2 0x327 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xD3 0xA5 MUL JUMP PUSH27 0x1EDBD5EBF7012501299FC763CC387D434DD37975771B1F7D6B4764 PUSH20 0x6F6C634300080F00330000000000000000000000 ",
							"sourceMap": "61:2242:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getEthSignedMessageHash_1190": {
									"entryPoint": 664,
									"id": 1190,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMessageHash_1174": {
									"entryPoint": 276,
									"id": 1174,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@recoverSigner_1248": {
									"entryPoint": 417,
									"id": 1248,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@splitSignature_1269": {
									"entryPoint": 544,
									"id": 1269,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@verify_1221": {
									"entryPoint": 350,
									"id": 1221,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_bytes_memory_ptr": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5003:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:13"
															},
															"nodeType": "YulIf",
															"src": "111:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:13",
														"type": ""
													}
												],
												"src": "14:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:13"
															},
															"nodeType": "YulIf",
															"src": "272:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:13",
														"type": ""
													}
												],
												"src": "192:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "453:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "464:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "475:4:13",
														"type": ""
													}
												],
												"src": "383:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "614:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "621:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "626:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "617:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "617:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "607:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "654:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "657:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "647:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "647:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "678:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "681:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "671:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "671:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "671:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "565:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "749:666:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "777:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "785:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "773:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "773:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "792:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "762:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:35:13"
															},
															"nodeType": "YulIf",
															"src": "759:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "823:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "846:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "833:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "827:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "862:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "872:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "866:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "913:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "915:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "915:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "915:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "905:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "909:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "902:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "902:10:13"
															},
															"nodeType": "YulIf",
															"src": "899:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "944:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "954:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "948:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "970:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "990:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "984:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "974:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1002:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1024:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "1048:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1052:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1044:13:13"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "1059:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1040:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1040:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1064:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:31:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1069:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1032:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1032:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1020:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1006:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1134:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1134:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1134:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1091:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1103:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1088:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1088:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1111:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1123:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1108:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1108:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1085:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:46:13"
															},
															"nodeType": "YulIf",
															"src": "1082:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1170:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1174:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1163:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1163:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1201:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1209:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1260:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1269:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1272:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1262:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1262:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1262:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1243:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1231:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1231:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1248:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1227:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1255:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1224:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1224:35:13"
															},
															"nodeType": "YulIf",
															"src": "1221:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1302:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1310:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1317:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1317:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1336:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1285:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1285:54:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1363:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1371:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1359:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1359:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1376:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:26:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1348:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1348:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1394:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1403:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1394:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "723:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "731:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "739:5:13",
														"type": ""
													}
												],
												"src": "697:718:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1533:355:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1579:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1588:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1591:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1581:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1581:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1581:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1554:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1563:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1550:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1550:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:32:13"
															},
															"nodeType": "YulIf",
															"src": "1543:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1604:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1633:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1614:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1614:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1604:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1652:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1662:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1709:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1740:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1751:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1736:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1736:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1723:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1713:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1798:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1807:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1810:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1800:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1800:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1770:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1778:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1767:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:30:13"
															},
															"nodeType": "YulIf",
															"src": "1764:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1823:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1854:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1865:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1850:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1850:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1874:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1833:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:49:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1483:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1494:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1506:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1514:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1522:6:13",
														"type": ""
													}
												],
												"src": "1420:468:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1988:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1998:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2010:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2021:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2006:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2006:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1998:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2040:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2065:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2058:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2058:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2051:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2051:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2033:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2033:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1957:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1968:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1979:4:13",
														"type": ""
													}
												],
												"src": "1893:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2181:292:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2227:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2239:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2229:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2229:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2229:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2202:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2211:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2198:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2198:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2223:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2194:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2194:32:13"
															},
															"nodeType": "YulIf",
															"src": "2191:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2252:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2275:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2262:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2262:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2252:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2294:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2325:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2336:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2321:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2321:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2308:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2298:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2383:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2392:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2395:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2385:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2385:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2385:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2355:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2363:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2352:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2352:30:13"
															},
															"nodeType": "YulIf",
															"src": "2349:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2408:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2439:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2450:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2435:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2459:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2418:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:49:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2408:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2139:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2150:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2162:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2170:6:13",
														"type": ""
													}
												],
												"src": "2085:388:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2579:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2589:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2601:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2612:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2597:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2589:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2631:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2646:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2662:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2667:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2658:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2658:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2671:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2654:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2654:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2642:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2642:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2624:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2624:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2548:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2559:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2570:4:13",
														"type": ""
													}
												],
												"src": "2478:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2765:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2811:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2820:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2823:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2813:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2813:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2813:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2786:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2795:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2782:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2782:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2807:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2778:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:32:13"
															},
															"nodeType": "YulIf",
															"src": "2775:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2836:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2863:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2850:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2850:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2840:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2916:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2925:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2928:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2918:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2918:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2918:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2888:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2896:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2885:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2885:30:13"
															},
															"nodeType": "YulIf",
															"src": "2882:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2941:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2972:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2983:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2968:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2968:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2992:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2951:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:49:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2941:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2731:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2742:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2754:6:13",
														"type": ""
													}
												],
												"src": "2686:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3164:173:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3174:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3186:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3197:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3182:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3174:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3216:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3227:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3209:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3209:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3209:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3254:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3265:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3250:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3250:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3270:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3243:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3243:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3297:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3308:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3293:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3293:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "3317:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3325:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3313:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3286:45:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3117:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3128:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3136:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3144:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3155:4:13",
														"type": ""
													}
												],
												"src": "3011:326:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3412:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3458:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3467:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3470:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3460:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3460:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3460:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3433:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3442:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3429:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3454:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3425:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3425:32:13"
															},
															"nodeType": "YulIf",
															"src": "3422:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3483:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3506:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3493:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3493:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3483:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3378:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3389:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3401:6:13",
														"type": ""
													}
												],
												"src": "3342:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3674:186:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3684:41:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3698:26:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3694:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3694:31:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3688:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3741:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3754:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3758:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3750:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3750:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3767:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3746:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3746:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3734:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3734:37:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3791:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3796:2:13",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3787:12:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3809:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "3813:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3805:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3805:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3822:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3801:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3801:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3780:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3780:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3780:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3835:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3846:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3842:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3835:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3642:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3647:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3655:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3666:3:13",
														"type": ""
													}
												],
												"src": "3527:333:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4046:217:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4056:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4068:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4079:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4064:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4064:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4056:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4099:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4110:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4092:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4092:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4092:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4137:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4148:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4133:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4133:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4157:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4165:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4153:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4153:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4126:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4126:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4126:45:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4191:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4202:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4187:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4187:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4207:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4180:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4180:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4180:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4234:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4245:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4230:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4230:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4250:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4223:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4223:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4223:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3991:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4002:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4010:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4018:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4026:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4037:4:13",
														"type": ""
													}
												],
												"src": "3865:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4442:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4459:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4470:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4452:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4452:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4452:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4493:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4504:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4489:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4489:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4509:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4482:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4482:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4482:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4532:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4543:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4528:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4528:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964207369676e6174757265206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4548:26:13",
																		"type": "",
																		"value": "invalid signature length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4521:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4521:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4521:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4584:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4596:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4607:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4592:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4592:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4584:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4419:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4433:4:13",
														"type": ""
													}
												],
												"src": "4268:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4841:160:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4858:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4863:66:13",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4851:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:79:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4851:79:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4950:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4955:2:13",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4946:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4946:12:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4960:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4939:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4939:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4976:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4987:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4992:2:13",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4983:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4983:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4976:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4817:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4822:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4833:3:13",
														"type": ""
													}
												],
												"src": "4621:380:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80631f5ac1b21461005c57806342920a461461008257806397aba7f9146100a5578063a7bb5803146100d0578063fa54080114610101575b600080fd5b61006f61006a3660046102ef565b610114565b6040519081526020015b60405180910390f35b6100956100903660046103b4565b61015e565b6040519015158152602001610079565b6100b86100b3366004610412565b6101a1565b6040516001600160a01b039091168152602001610079565b6100e36100de366004610459565b610220565b60408051938452602084019290925260ff1690820152606001610079565b61006f61010f366004610496565b610298565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b60008061016a84610114565b9050600061017782610298565b9050856001600160a01b031661018d82866101a1565b6001600160a01b0316149695505050505050565b6000806000806101b085610220565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa15801561020b573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411461027a5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e6774680000000000000000604482015260640160405180910390fd5b50505060208101516040820151606090920151909260009190911a90565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610141565b80356001600160a01b03811681146102ea57600080fd5b919050565b60006020828403121561030157600080fd5b61030a826102d3565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261033857600080fd5b813567ffffffffffffffff8082111561035357610353610311565b604051601f8301601f19908116603f0116810190828211818310171561037b5761037b610311565b8160405283815286602085880101111561039457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156103c957600080fd5b6103d2846102d3565b92506103e0602085016102d3565b9150604084013567ffffffffffffffff8111156103fc57600080fd5b61040886828701610327565b9150509250925092565b6000806040838503121561042557600080fd5b82359150602083013567ffffffffffffffff81111561044357600080fd5b61044f85828601610327565b9150509250929050565b60006020828403121561046b57600080fd5b813567ffffffffffffffff81111561048257600080fd5b61048e84828501610327565b949350505050565b6000602082840312156104a857600080fd5b503591905056fea26469706673582212204bd3a502567a1edbd5ebf7012501299fc763cc387d434dd37975771b1f7d6b4764736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x101 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x412 JUMP JUMPDEST PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16A DUP5 PUSH2 0x114 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x177 DUP3 PUSH2 0x298 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18D DUP3 DUP7 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1B0 DUP6 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x141 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30A DUP3 PUSH2 0x2D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x353 JUMPI PUSH2 0x353 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x37B JUMPI PUSH2 0x37B PUSH2 0x311 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D2 DUP5 PUSH2 0x2D3 JUMP JUMPDEST SWAP3 POP PUSH2 0x3E0 PUSH1 0x20 DUP6 ADD PUSH2 0x2D3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x408 DUP7 DUP3 DUP8 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44F DUP6 DUP3 DUP7 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48E DUP5 DUP3 DUP6 ADD PUSH2 0x327 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xD3 0xA5 MUL JUMP PUSH27 0x1EDBD5EBF7012501299FC763CC387D434DD37975771B1F7D6B4764 PUSH20 0x6F6C634300080F00330000000000000000000000 ",
							"sourceMap": "61:2242:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;99:160;;;;;;:::i;:::-;;:::i;:::-;;;529:25:13;;;517:2;502:18;99:160:9;;;;;;;;769:350;;;;;;:::i;:::-;;:::i;:::-;;;2058:14:13;;2051:22;2033:41;;2021:2;2006:18;769:350:9;1893:187:13;1127:274:9;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2642:32:13;;;2624:51;;2612:2;2597:18;1127:274:9;2478:203:13;1409:891:9;;;;;;:::i;:::-;;:::i;:::-;;;;3209:25:13;;;3265:2;3250:18;;3243:34;;;;3325:4;3313:17;3293:18;;;3286:45;3197:2;3182:18;1409:891:9;3011:326:13;267:494:9;;;;;;:::i;:::-;;:::i;99:160::-;212:38;;-1:-1:-1;;3754:2:13;3750:15;;;3746:24;;212:38:9;;;3734:37:13;244:4:9;3805:15:13;;3801:24;3787:12;;;3780:46;175:7:9;;3842:12:13;;212:38:9;;;;;;;;;;;;;202:49;;;;;;195:56;;99:160;;;:::o;769:350::-;896:4;913:19;935:21;950:5;935:14;:21::i;:::-;913:43;;967:28;998:36;1022:11;998:23;:36::i;:::-;967:67;;1104:7;-1:-1:-1;;;;;1054:57:9;:46;1068:20;1090:9;1054:13;:46::i;:::-;-1:-1:-1;;;;;1054:57:9;;;769:350;-1:-1:-1;;;;;;769:350:9:o;1127:274::-;1252:7;1273:9;1284;1295:7;1306:26;1321:10;1306:14;:26::i;:::-;1352:41;;;;;;;;;;;;4092:25:13;;;4165:4;4153:17;;4133:18;;;4126:45;;;;4187:18;;;4180:34;;;4230:18;;;4223:34;;;1272:60:9;;-1:-1:-1;1272:60:9;;-1:-1:-1;1272:60:9;-1:-1:-1;1352:41:9;;4064:19:13;;1352:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1352:41:9;;-1:-1:-1;;1352:41:9;;;1127:274;-1:-1:-1;;;;;;;1127:274:9:o;1409:891::-;1513:9;1537;1561:7;1604:3;:10;1618:2;1604:16;1596:53;;;;-1:-1:-1;;;1596:53:9;;4470:2:13;1596:53:9;;;4452:21:13;4509:2;4489:18;;;4482:30;4548:26;4528:18;;;4521:54;4592:18;;1596:53:9;;;;;;;;-1:-1:-1;;;2058:2:9;2049:12;;2043:19;2128:2;2119:12;;2113:19;2235:2;2226:12;;;2220:19;2043;;2217:1;2212:28;;;;;1409:891::o;267:494::-;611:127;;4863:66:13;611:127:9;;;4851:79:13;4946:12;;;4939:28;;;370:7:9;;4983:12:13;;611:127:9;4621:380:13;14:173;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:13:o;565:127::-;626:10;621:3;617:20;614:1;607:31;657:4;654:1;647:15;681:4;678:1;671:15;697:718;739:5;792:3;785:4;777:6;773:17;769:27;759:55;;810:1;807;800:12;759:55;846:6;833:20;872:18;909:2;905;902:10;899:36;;;915:18;;:::i;:::-;990:2;984:9;958:2;1044:13;;-1:-1:-1;;1040:22:13;;;1064:2;1036:31;1032:40;1020:53;;;1088:18;;;1108:22;;;1085:46;1082:72;;;1134:18;;:::i;:::-;1174:10;1170:2;1163:22;1209:2;1201:6;1194:18;1255:3;1248:4;1243:2;1235:6;1231:15;1227:26;1224:35;1221:55;;;1272:1;1269;1262:12;1221:55;1336:2;1329:4;1321:6;1317:17;1310:4;1302:6;1298:17;1285:54;1383:1;1376:4;1371:2;1363:6;1359:15;1355:26;1348:37;1403:6;1394:15;;;;;;697:718;;;;:::o;1420:468::-;1506:6;1514;1522;1575:2;1563:9;1554:7;1550:23;1546:32;1543:52;;;1591:1;1588;1581:12;1543:52;1614:29;1633:9;1614:29;:::i;:::-;1604:39;;1662:38;1696:2;1685:9;1681:18;1662:38;:::i;:::-;1652:48;;1751:2;1740:9;1736:18;1723:32;1778:18;1770:6;1767:30;1764:50;;;1810:1;1807;1800:12;1764:50;1833:49;1874:7;1865:6;1854:9;1850:22;1833:49;:::i;:::-;1823:59;;;1420:468;;;;;:::o;2085:388::-;2162:6;2170;2223:2;2211:9;2202:7;2198:23;2194:32;2191:52;;;2239:1;2236;2229:12;2191:52;2275:9;2262:23;2252:33;;2336:2;2325:9;2321:18;2308:32;2363:18;2355:6;2352:30;2349:50;;;2395:1;2392;2385:12;2349:50;2418:49;2459:7;2450:6;2439:9;2435:22;2418:49;:::i;:::-;2408:59;;;2085:388;;;;;:::o;2686:320::-;2754:6;2807:2;2795:9;2786:7;2782:23;2778:32;2775:52;;;2823:1;2820;2813:12;2775:52;2863:9;2850:23;2896:18;2888:6;2885:30;2882:50;;;2928:1;2925;2918:12;2882:50;2951:49;2992:7;2983:6;2972:9;2968:22;2951:49;:::i;:::-;2941:59;2686:320;-1:-1:-1;;;;2686:320:13:o;3342:180::-;3401:6;3454:2;3442:9;3433:7;3429:23;3425:32;3422:52;;;3470:1;3467;3460:12;3422:52;-1:-1:-1;3493:23:13;;3342:180;-1:-1:-1;3342:180:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "250600",
								"executionCost": "294",
								"totalCost": "250894"
							},
							"external": {
								"getEthSignedMessageHash(bytes32)": "511",
								"getMessageHash(address)": "519",
								"recoverSigner(bytes32,bytes)": "infinite",
								"splitSignature(bytes)": "infinite",
								"verify(address,address,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204bd3a502567a1edbd5ebf7012501299fc763cc387d434dd37975771b1f7d6b4764736f6c634300080f0033",
									".code": [
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "1F5AC1B2"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "42920A46"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "97ABA7F9"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "A7BB5803"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "FA540801"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2033,
											"end": 2074,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2033,
											"end": 2074,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2023,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2024,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1893,
											"end": 2080,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2675,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2675,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2614,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2597,
											"end": 2615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 2478,
											"end": 2681,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3267,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3268,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3250,
											"end": 3268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3325,
											"end": 3329,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3313,
											"end": 3330,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3286,
											"end": 3331,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3199,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3182,
											"end": 3200,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 3011,
											"end": 3337,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3754,
											"end": 3756,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3770,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3770,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3734,
											"end": 3771,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 244,
											"end": 248,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3820,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3805,
											"end": 3820,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3826,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 175,
											"end": 182,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "PUSH",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 202,
											"end": 251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 202,
											"end": 251,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 195,
											"end": 251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 195,
											"end": 251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 896,
											"end": 900,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 932,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 935,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 935,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 935,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 935,
											"end": 956,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 913,
											"end": 956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 913,
											"end": 956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 967,
											"end": 995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1022,
											"end": 1033,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 998,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1054,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1284,
											"end": 1293,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1302,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1321,
											"end": 1331,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1306,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4165,
											"end": 4169,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4153,
											"end": 4170,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4170,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4214,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4214,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4214,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4064,
											"end": 4083,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 4064,
											"end": 4083,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1522,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1604,
											"end": 1614,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1604,
											"end": 1620,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4470,
											"end": 4472,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4452,
											"end": 4473,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4482,
											"end": 4512,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "PUSH",
											"source": 13,
											"value": "696E76616C6964207369676E6174757265206C656E6774680000000000000000"
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2130,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2132,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4929,
											"name": "PUSH",
											"source": 13,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 611,
											"end": 738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4851,
											"end": 4930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "PUSH",
											"source": 13,
											"value": "3C"
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4939,
											"end": 4967,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4939,
											"end": 4967,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4939,
											"end": 4967,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4983,
											"end": 4995,
											"name": "PUSH",
											"source": 13,
											"value": "5C"
										},
										{
											"begin": 4983,
											"end": 4995,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 4621,
											"end": 5001,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 565,
											"end": 692,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 565,
											"end": 692,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 626,
											"end": 636,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 621,
											"end": 624,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 617,
											"end": 637,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 614,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 657,
											"end": 661,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 654,
											"end": 655,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 662,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 681,
											"end": 685,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 678,
											"end": 679,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 686,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 739,
											"end": 744,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 795,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 785,
											"end": 789,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 773,
											"end": 790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 769,
											"end": 796,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 759,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 759,
											"end": 814,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 759,
											"end": 814,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 759,
											"end": 814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 846,
											"end": 852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 833,
											"end": 853,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 872,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 909,
											"end": 911,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 905,
											"end": 907,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 902,
											"end": 912,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 899,
											"end": 935,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 899,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 899,
											"end": 935,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 915,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 915,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 915,
											"end": 933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 915,
											"end": 933,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 915,
											"end": 933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 990,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1040,
											"end": 1062,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1062,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1062,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 1036,
											"end": 1067,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1072,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1073,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1085,
											"end": 1131,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1082,
											"end": 1154,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1082,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1082,
											"end": 1154,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1134,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1174,
											"end": 1184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1209,
											"end": 1211,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1258,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1248,
											"end": 1252,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1243,
											"end": 1245,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1231,
											"end": 1246,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1253,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1224,
											"end": 1259,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1274,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1336,
											"end": 1338,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1329,
											"end": 1333,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1317,
											"end": 1334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1310,
											"end": 1314,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1308,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1298,
											"end": 1315,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1380,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1373,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1369,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1359,
											"end": 1374,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 1381,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1385,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1409,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1528,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1563,
											"end": 1572,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1550,
											"end": 1573,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1546,
											"end": 1578,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1592,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1581,
											"end": 1593,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1614,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1604,
											"end": 1643,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1604,
											"end": 1643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1662,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1652,
											"end": 1700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1652,
											"end": 1700,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1753,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1749,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1723,
											"end": 1755,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1800,
											"end": 1812,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1874,
											"end": 1881,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1865,
											"end": 1871,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1850,
											"end": 1872,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1833,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1823,
											"end": 1882,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1823,
											"end": 1882,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1823,
											"end": 1882,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2162,
											"end": 2168,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2223,
											"end": 2225,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2220,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2198,
											"end": 2221,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2226,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2239,
											"end": 2240,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2229,
											"end": 2241,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2275,
											"end": 2284,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2262,
											"end": 2285,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2285,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2285,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2338,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2334,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2352,
											"end": 2382,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2395,
											"end": 2396,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2385,
											"end": 2397,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2435,
											"end": 2457,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2418,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2467,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2686,
											"end": 3006,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 2686,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2760,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2809,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2795,
											"end": 2804,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2793,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2782,
											"end": 2805,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2810,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2821,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2813,
											"end": 2825,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2850,
											"end": 2873,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2896,
											"end": 2914,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2888,
											"end": 2894,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2915,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2928,
											"end": 2929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2983,
											"end": 2989,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2951,
											"end": 3000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2941,
											"end": 3000,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2686,
											"end": 3006,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2686,
											"end": 3006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3342,
											"end": 3522,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3342,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3433,
											"end": 3440,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3425,
											"end": 3457,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3468,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3472,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3493,
											"end": 3516,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3516,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3342,
											"end": 3522,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3342,
											"end": 3522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ERC721A/INagaKid.sol",
								"ERC721A/MintNagaKids.sol",
								"ERC721A/VerifySignature.sol",
								"erc721a/contracts/IERC721A.sol",
								"erc721a/contracts/extensions/IERC721ABurnable.sol",
								"erc721a/contracts/extensions/IERC721AQueryable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getEthSignedMessageHash(bytes32)": "fa540801",
							"getMessageHash(address)": "1f5ac1b2",
							"recoverSigner(bytes32,bytes)": "97aba7f9",
							"splitSignature(bytes)": "a7bb5803",
							"verify(address,address,bytes)": "42920a46"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"recoverSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721A/VerifySignature.sol\":\"VerifySignature\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC721A/VerifySignature.sol\":{\"keccak256\":\"0x7b595fba7b304df2d793814bf6f1ead1687b6de712cdbf02113e57ba478df9b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1c72776be7d04ed5cf7f224d796db5ec4a48c9523c1367cc513c6476e7db1d\",\"dweb:/ipfs/QmanAvNztLiKWauT1Usjmfzm8kvs3iMgYBx1Q8JEZLg1ej\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"IERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721ABurnable compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721ABurnable compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/extensions/IERC721ABurnable.sol\":\"IERC721ABurnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"IERC721AQueryable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721AQueryable compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`"
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"explicitOwnershipOf(uint256)": "c23dc68f",
							"explicitOwnershipsOf(uint256[])": "5bbb2177",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"tokensOfOwner(address)": "8462151c",
							"tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721AQueryable compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/extensions/IERC721AQueryable.sol\":\"IERC721AQueryable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x55e6863d273b676d65797fee7aac1b520848a0e31c0dd2e5a29887457043b7a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8477b7c9788e36787f79ef9b1580c46bdadc13da4c8ef85ce82d42a754743\",\"dweb:/ipfs/QmQvqKtF8YyJKqpEiNh1KkeC1Q5JmvEkQmP2ZCPYSW72BS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							360
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 361,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 360,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								360
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							144
						]
					},
					"id": 145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 110,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 113,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 115,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 144,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 127,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 128,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 133,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 134,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 143,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 145,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							222
						]
					},
					"id": 223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 222,
							"linearizedBaseContracts": [
								222
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 156,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 165,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 222,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 222,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 222,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 222,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 222,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 222,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 223,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							465
						],
						"IERC721": [
							338
						]
					},
					"id": 339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 339,
							"sourceUnit": 466,
							"src": "133:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 227,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 465,
										"src": "271:7:3"
									},
									"id": 228,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 226,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 338,
							"linearizedBaseContracts": [
								338,
								465
							],
							"name": "IERC721",
							"nameLocation": "260:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 237,
									"name": "Transfer",
									"nameLocation": "384:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "393:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "415:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "435:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:3"
									},
									"src": "378:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 246,
									"name": "Approval",
									"nameLocation": "571:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "580:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "603:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "629:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:3"
									},
									"src": "565:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 255,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "803:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "826:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "852:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:3"
									},
									"src": "782:85:3"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "973:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:3"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "1011:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:3"
									},
									"scope": 338,
									"src": "954:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1187:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:3"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1227:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:3"
									},
									"scope": 338,
									"src": "1170:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1844:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1866:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1911:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:3"
									},
									"scope": 338,
									"src": "1809:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2682:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2704:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2724:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:3"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:3"
									},
									"scope": 338,
									"src": "2647:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3301:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3323:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3343:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:3"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 338,
									"src": "3270:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3854:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3866:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:3"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:3"
									},
									"scope": 338,
									"src": "3837:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4239:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4257:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:3"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:3"
									},
									"scope": 338,
									"src": "4212:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4453:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:3"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4493:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:3"
									},
									"scope": 338,
									"src": "4432:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "4686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "4701:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:3"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "4742:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:3"
									},
									"scope": 338,
									"src": "4660:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 339,
							"src": "250:4500:3",
							"usedErrors": []
						}
					],
					"src": "108:4643:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							360
						]
					},
					"id": 361,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 340,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 341,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 360,
							"linearizedBaseContracts": [
								360
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 346,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 345,
												"id": 348,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 360,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 355,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 354,
												"id": 357,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 352,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 360,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 361,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
					"exportedSymbols": {
						"MerkleProof": [
							453
						]
					},
					"id": 454,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 362,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MerkleProof",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 363,
								"nodeType": "StructuredDocumentation",
								"src": "143:656:5",
								"text": " @dev These functions deal with verification of Merkle Trees proofs.\n The proofs can be generated using the JavaScript library\n https://github.com/miguelmota/merkletreejs[merkletreejs].\n Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value."
							},
							"fullyImplemented": true,
							"id": 453,
							"linearizedBaseContracts": [
								453
							],
							"name": "MerkleProof",
							"nameLocation": "808:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "1281:57:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 377,
																"name": "proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "1311:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															{
																"id": 378,
																"name": "leaf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "1318:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 376,
															"name": "processProof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "1298:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32[] memory,bytes32) pure returns (bytes32)"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1298:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 380,
														"name": "root",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "1327:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1298:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 375,
												"id": 382,
												"nodeType": "Return",
												"src": "1291:40:5"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "826:323:5",
										"text": " @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "1163:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1196:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1179:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 365,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1179:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 366,
													"nodeType": "ArrayTypeName",
													"src": "1179:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "1219:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1211:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 368,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "1241:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1233:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 370,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:82:5"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1275:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1275:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:6:5"
									},
									"scope": 453,
									"src": "1154:184:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "1781:570:5",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "computedHash",
														"nameLocation": "1799:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 440,
														"src": "1791:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 395,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1791:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 398,
												"initialValue": {
													"id": 397,
													"name": "leaf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 390,
													"src": "1814:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1791:27:5"
											},
											{
												"body": {
													"id": 436,
													"nodeType": "Block",
													"src": "1871:445:5",
													"statements": [
														{
															"assignments": [
																411
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 411,
																	"mutability": "mutable",
																	"name": "proofElement",
																	"nameLocation": "1893:12:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 436,
																	"src": "1885:20:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 410,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1885:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 415,
															"initialValue": {
																"baseExpression": {
																	"id": 412,
																	"name": "proof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "1908:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																},
																"id": 414,
																"indexExpression": {
																	"id": 413,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "1914:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1908:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1885:31:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 416,
																	"name": "computedHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "1934:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 417,
																	"name": "proofElement",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1950:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1934:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 434,
																"nodeType": "Block",
																"src": "2138:168:5",
																"statements": [
																	{
																		"expression": {
																			"id": 432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 427,
																				"name": "computedHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "2234:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 429,
																						"name": "proofElement",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 411,
																						"src": "2264:12:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 430,
																						"name": "computedHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 396,
																						"src": "2278:12:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 428,
																					"name": "_efficientHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "2249:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																						"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																					}
																				},
																				"id": 431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2249:42:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2234:57:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 433,
																		"nodeType": "ExpressionStatement",
																		"src": "2234:57:5"
																	}
																]
															},
															"id": 435,
															"nodeType": "IfStatement",
															"src": "1930:376:5",
															"trueBody": {
																"id": 426,
																"nodeType": "Block",
																"src": "1964:168:5",
																"statements": [
																	{
																		"expression": {
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 419,
																				"name": "computedHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "2060:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 421,
																						"name": "computedHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 396,
																						"src": "2090:12:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 422,
																						"name": "proofElement",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 411,
																						"src": "2104:12:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 420,
																					"name": "_efficientHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "2075:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																						"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																					}
																				},
																				"id": 423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2075:42:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2060:57:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 425,
																		"nodeType": "ExpressionStatement",
																		"src": "2060:57:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 403,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "1848:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 404,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "1852:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1852:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1848:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"initializationExpression": {
													"assignments": [
														400
													],
													"declarations": [
														{
															"constant": false,
															"id": 400,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1841:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 437,
															"src": "1833:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 399,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1833:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 402,
													"initialValue": {
														"hexValue": "30",
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1845:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1833:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1866:3:5",
														"subExpression": {
															"id": 407,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "1866:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 409,
													"nodeType": "ExpressionStatement",
													"src": "1866:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1828:488:5"
											},
											{
												"expression": {
													"id": 438,
													"name": "computedHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 396,
													"src": "2332:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 394,
												"id": 439,
												"nodeType": "Return",
												"src": "2325:19:5"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1344:340:5",
										"text": " @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "processProof",
									"nameLocation": "1698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1728:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "1711:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 386,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1711:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 387,
													"nodeType": "ArrayTypeName",
													"src": "1711:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "1743:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "1735:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 389,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1710:38:5"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "1772:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:9:5"
									},
									"scope": 453,
									"src": "1689:662:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "2440:135:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2459:110:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2480:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "2486:1:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2473:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2473:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2508:4:5",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "2514:1:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2501:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2501:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2501:15:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2529:30:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2548:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2554:4:5",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2538:9:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:21:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2529:5:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": false,
														"src": "2486:1:5",
														"valueSize": 1
													},
													{
														"declaration": 445,
														"isOffset": false,
														"isSlot": false,
														"src": "2514:1:5",
														"valueSize": 1
													},
													{
														"declaration": 448,
														"isOffset": false,
														"isSlot": false,
														"src": "2529:5:5",
														"valueSize": 1
													}
												],
												"id": 450,
												"nodeType": "InlineAssembly",
												"src": "2450:119:5"
											}
										]
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_efficientHash",
									"nameLocation": "2366:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2389:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2381:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 442,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2400:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2392:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 444,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2380:22:5"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2425:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 447,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:5"
									},
									"scope": 453,
									"src": "2357:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 454,
							"src": "800:1777:5",
							"usedErrors": []
						}
					],
					"src": "118:2460:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							465
						]
					},
					"id": 466,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 455,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 456,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 465,
							"linearizedBaseContracts": [
								465
							],
							"name": "IERC165",
							"nameLocation": "415:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "801:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 458,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:6"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "844:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 461,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:6"
									},
									"scope": 465,
									"src": "774:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 466,
							"src": "405:447:6",
							"usedErrors": []
						}
					],
					"src": "100:753:6"
				},
				"id": 6
			},
			"ERC721A/INagaKid.sol": {
				"ast": {
					"absolutePath": "ERC721A/INagaKid.sol",
					"exportedSymbols": {
						"IERC721A": [
							1479
						],
						"IERC721ABurnable": [
							1492
						],
						"IERC721AQueryable": [
							1544
						],
						"INagaKid": [
							494
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 467,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "erc721a/contracts/IERC721A.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 1480,
							"src": "61:40:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721a/contracts/extensions/IERC721ABurnable.sol",
							"file": "erc721a/contracts/extensions/IERC721ABurnable.sol",
							"id": 469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 1493,
							"src": "103:59:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721a/contracts/extensions/IERC721AQueryable.sol",
							"file": "erc721a/contracts/extensions/IERC721AQueryable.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 1545,
							"src": "164:60:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 471,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1479,
										"src": "252:8:7"
									},
									"id": 472,
									"nodeType": "InheritanceSpecifier",
									"src": "252:8:7"
								},
								{
									"baseName": {
										"id": 473,
										"name": "IERC721AQueryable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1544,
										"src": "261:17:7"
									},
									"id": 474,
									"nodeType": "InheritanceSpecifier",
									"src": "261:17:7"
								}
							],
							"canonicalName": "INagaKid",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 494,
							"linearizedBaseContracts": [
								494,
								1544,
								1479
							],
							"name": "INagaKid",
							"nameLocation": "240:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d5abeb01",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "297:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:2:7"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "332:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:9:7"
									},
									"scope": 494,
									"src": "288:53:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa271e1a",
									"id": 486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isMinter",
									"nameLocation": "356:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "373:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "365:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "364:16:7"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "403:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "403:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:6:7"
									},
									"scope": 494,
									"src": "347:62:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a1448194",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "424:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "433:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "449:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "444:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:24:7"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:0:7"
									},
									"scope": 494,
									"src": "415:51:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 495,
							"src": "230:245:7",
							"usedErrors": [
								1276,
								1279,
								1282,
								1285,
								1288,
								1291,
								1294,
								1297,
								1300,
								1303,
								1306,
								1309,
								1312,
								1315,
								1501
							]
						}
					],
					"src": "33:444:7"
				},
				"id": 7
			},
			"ERC721A/MintNagaKids.sol": {
				"ast": {
					"absolutePath": "ERC721A/MintNagaKids.sol",
					"exportedSymbols": {
						"Context": [
							360
						],
						"IERC165": [
							465
						],
						"IERC20": [
							222
						],
						"IERC721": [
							338
						],
						"IERC721A": [
							1479
						],
						"IERC721ABurnable": [
							1492
						],
						"IERC721AQueryable": [
							1544
						],
						"INagaKid": [
							494
						],
						"MerkleProof": [
							453
						],
						"MintNagaKids": [
							1153
						],
						"Ownable": [
							104
						],
						"ReentrancyGuard": [
							144
						],
						"VerifySignature": [
							1270
						]
					},
					"id": 1154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1154,
							"sourceUnit": 223,
							"src": "61:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1154,
							"sourceUnit": 339,
							"src": "119:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
							"id": 499,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1154,
							"sourceUnit": 454,
							"src": "179:68:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1154,
							"sourceUnit": 145,
							"src": "249:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 501,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1154,
							"sourceUnit": 105,
							"src": "313:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC721A/INagaKid.sol",
							"file": "./INagaKid.sol",
							"id": 502,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1154,
							"sourceUnit": 495,
							"src": "367:24:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC721A/VerifySignature.sol",
							"file": "./VerifySignature.sol",
							"id": 503,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1154,
							"sourceUnit": 1271,
							"src": "393:31:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 504,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "453:7:8"
									},
									"id": 505,
									"nodeType": "InheritanceSpecifier",
									"src": "453:7:8"
								},
								{
									"baseName": {
										"id": 506,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 144,
										"src": "462:15:8"
									},
									"id": 507,
									"nodeType": "InheritanceSpecifier",
									"src": "462:15:8"
								},
								{
									"baseName": {
										"id": 508,
										"name": "VerifySignature",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1270,
										"src": "479:15:8"
									},
									"id": 509,
									"nodeType": "InheritanceSpecifier",
									"src": "479:15:8"
								}
							],
							"canonicalName": "MintNagaKids",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1153,
							"linearizedBaseContracts": [
								1153,
								1270,
								144,
								104,
								360
							],
							"name": "MintNagaKids",
							"nameLocation": "437:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "f500cdfc",
									"id": 514,
									"mutability": "constant",
									"name": "WHITELIST_MINT_ROUND",
									"nameLocation": "528:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "504:80:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 510,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "504:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "57484954454c4953545f4d494e545f524f554e44",
												"id": 512,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "561:22:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba",
													"typeString": "literal_string \"WHITELIST_MINT_ROUND\""
												},
												"value": "WHITELIST_MINT_ROUND"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_68e7d51fdb912cb107dda2e59b053d87fcca666dd0ef5339cd3474ccb5276bba",
													"typeString": "literal_string \"WHITELIST_MINT_ROUND\""
												}
											],
											"id": 511,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "551:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 513,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "551:33:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "24c37a85",
									"id": 519,
									"mutability": "constant",
									"name": "NAGA_HOLDER_MINT_ROUND",
									"nameLocation": "685:22:8",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "661:84:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 515,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4e4147415f484f4c4445525f4d494e545f524f554e44",
												"id": 517,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "720:24:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db3",
													"typeString": "literal_string \"NAGA_HOLDER_MINT_ROUND\""
												},
												"value": "NAGA_HOLDER_MINT_ROUND"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b3c595e55271590809f54e2f4fc3a582754f45b104dd3c41666e2ad310493db3",
													"typeString": "literal_string \"NAGA_HOLDER_MINT_ROUND\""
												}
											],
											"id": 516,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "710:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 518,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "710:35:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0a25dea9",
									"id": 522,
									"mutability": "constant",
									"name": "DEFAULT",
									"nameLocation": "850:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "826:100:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 520,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "826:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 521,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "860:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x0000000000000000000000000000000000000000000000000000000000000000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e02023a1",
									"id": 527,
									"mutability": "constant",
									"name": "WITHDRAW_ROLE",
									"nameLocation": "963:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "939:66:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 523,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "939:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "57495448445241575f524f4c45",
												"id": 525,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "989:15:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec",
													"typeString": "literal_string \"WITHDRAW_ROLE\""
												},
												"value": "WITHDRAW_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec",
													"typeString": "literal_string \"WITHDRAW_ROLE\""
												}
											],
											"id": 524,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "979:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 526,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "979:26:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df4e5881",
									"id": 530,
									"mutability": "mutable",
									"name": "nagaKidContract",
									"nameLocation": "1030:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "1014:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INagaKid_$494",
										"typeString": "contract INagaKid"
									},
									"typeName": {
										"id": 529,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 528,
											"name": "INagaKid",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 494,
											"src": "1014:8:8"
										},
										"referencedDeclaration": 494,
										"src": "1014:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INagaKid_$494",
											"typeString": "contract INagaKid"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ef5fe79f",
									"id": 532,
									"mutability": "mutable",
									"name": "currentMintRound",
									"nameLocation": "1067:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "1052:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 531,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1052:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2eb4a7ab",
									"id": 534,
									"mutability": "mutable",
									"name": "merkleRoot",
									"nameLocation": "1105:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "1090:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 533,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1090:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a4435dfd",
									"id": 537,
									"mutability": "mutable",
									"name": "isPublicMintOpen",
									"nameLocation": "1136:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "1124:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 535,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1124:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 536,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1155:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8907f3fa",
									"id": 540,
									"mutability": "mutable",
									"name": "isPrivateMintOpen",
									"nameLocation": "1179:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "1167:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 538,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1167:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 539,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1199:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "238ac933",
									"id": 542,
									"mutability": "mutable",
									"name": "signer",
									"nameLocation": "1228:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "1213:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 541,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1213:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_isUserMinted",
									"nameLocation": "1297:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "1243:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(bytes32 => bool))"
									},
									"typeName": {
										"id": 547,
										"keyType": {
											"id": 543,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1251:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1243:44:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(bytes32 => bool))"
										},
										"valueType": {
											"id": 546,
											"keyType": {
												"id": 544,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1270:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"nodeType": "Mapping",
											"src": "1262:24:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
												"typeString": "mapping(bytes32 => bool)"
											},
											"valueType": {
												"id": 545,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1281:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 554,
									"mutability": "mutable",
									"name": "_userMintedAmount",
									"nameLocation": "1374:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "1317:74:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(bytes32 => uint256))"
									},
									"typeName": {
										"id": 553,
										"keyType": {
											"id": 549,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1325:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1317:47:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(bytes32 => uint256))"
										},
										"valueType": {
											"id": 552,
											"keyType": {
												"id": 550,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1344:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"nodeType": "Mapping",
											"src": "1336:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"valueType": {
												"id": 551,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1355:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 558,
									"mutability": "mutable",
									"name": "_isPublicMinted",
									"nameLocation": "1432:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "1398:49:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 557,
										"keyType": {
											"id": 555,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1406:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1398:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 556,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1417:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "e9e607753e80542a9021d5149990f18919907f0136fad424eaac3d15056ccf6e",
									"id": 566,
									"name": "PrivateMinted",
									"nameLocation": "1477:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1507:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1491:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1521:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1513:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1537:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1529:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:57:8"
									},
									"src": "1471:77:8"
								},
								{
									"anonymous": false,
									"eventSelector": "c1a73b31b32801ebbb4cae30b73eae4345be9f2915ea60306383c245ef8fac44",
									"id": 574,
									"name": "PublicMinted",
									"nameLocation": "1560:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1589:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1573:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1603:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1595:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1619:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1611:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1572:57:8"
									},
									"src": "1554:76:8"
								},
								{
									"anonymous": false,
									"eventSelector": "abdf056c85a221fcb31d0366c4475b6b2c613df2eeea951a9fcb3e1a8595d973",
									"id": 580,
									"name": "NagaKidContractChanged",
									"nameLocation": "1642:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"indexed": false,
												"mutability": "mutable",
												"name": "nagaKidBefore",
												"nameLocation": "1673:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "1665:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"indexed": false,
												"mutability": "mutable",
												"name": "nagaKidAfter",
												"nameLocation": "1696:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "1688:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1664:45:8"
									},
									"src": "1636:74:8"
								},
								{
									"anonymous": false,
									"eventSelector": "123d88ba82600dfc3f219f8885c691b0ff020caa535666874b3f5174973757fe",
									"id": 586,
									"name": "MerkleRootChanged",
									"nameLocation": "1722:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"indexed": false,
												"mutability": "mutable",
												"name": "merkleRootBefore",
												"nameLocation": "1748:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "1740:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 581,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"indexed": false,
												"mutability": "mutable",
												"name": "merkleRootAfter",
												"nameLocation": "1774:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "1766:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 583,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1739:51:8"
									},
									"src": "1716:75:8"
								},
								{
									"anonymous": false,
									"eventSelector": "521ec96875ca228cd2fc1dbd4c927a34328c9ce1a83bcb8c1f633f012c90d785",
									"id": 592,
									"name": "RoundChanged",
									"nameLocation": "1803:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundBefore",
												"nameLocation": "1824:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1816:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 587,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1816:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundAfter",
												"nameLocation": "1845:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1837:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 589,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1815:41:8"
									},
									"src": "1797:60:8"
								},
								{
									"anonymous": false,
									"eventSelector": "eeb293e1f8f3a9db91ade748726387ed1352ca78f5430c5f06fe3d1e1ad50579",
									"id": 598,
									"name": "SignerChanged",
									"nameLocation": "1869:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"indexed": false,
												"mutability": "mutable",
												"name": "signerBefore",
												"nameLocation": "1891:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1883:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": false,
												"mutability": "mutable",
												"name": "signerAfter",
												"nameLocation": "1912:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1904:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1882:42:8"
									},
									"src": "1863:62:8"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 606,
									"name": "Withdraw",
									"nameLocation": "1937:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1954:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1946:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": false,
												"mutability": "mutable",
												"name": "balanceOFContract",
												"nameLocation": "1966:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1958:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1994:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1986:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:59:8"
									},
									"src": "1931:74:8"
								},
								{
									"anonymous": false,
									"eventSelector": "b818a975f91276df8ba59329becbc23c793df0d503c19ac296c3c372a1fa0461",
									"id": 616,
									"name": "WithdrawCurrency",
									"nameLocation": "2017:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2042:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2034:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "2053:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2045:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"indexed": false,
												"mutability": "mutable",
												"name": "balanceOfContract",
												"nameLocation": "2070:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2062:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2062:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2096:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2088:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2033:73:8"
									},
									"src": "2011:96:8"
								},
								{
									"anonymous": false,
									"eventSelector": "0127a8d3f57942833f6930572bce52ad882683e36eeb5830d199d3fa4bfa9467",
									"id": 626,
									"name": "WithdrawNFT",
									"nameLocation": "2119:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2139:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2131:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2131:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"indexed": false,
												"mutability": "mutable",
												"name": "NFT",
												"nameLocation": "2150:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2142:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2162:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2154:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2154:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2179:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2171:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2130:59:8"
									},
									"src": "2113:77:8"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "2284:133:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "_nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "2324:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														],
														"id": 636,
														"name": "setNagaKidContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "2305:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_INagaKid_$494_$returns$__$",
															"typeString": "function (contract INagaKid)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2305:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "2305:36:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 641,
															"name": "_merkleRoot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "2366:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 640,
														"name": "setMerkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "2352:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2352:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "2352:26:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 645,
															"name": "_signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "2399:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 644,
														"name": "setSigner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "2389:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2389:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "2389:18:8"
											}
										]
									},
									"id": 649,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "_nagaKidContract",
												"nameLocation": "2229:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2220:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INagaKid_$494",
													"typeString": "contract INagaKid"
												},
												"typeName": {
													"id": 628,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 627,
														"name": "INagaKid",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 494,
														"src": "2220:8:8"
													},
													"referencedDeclaration": 494,
													"src": "2220:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKid_$494",
														"typeString": "contract INagaKid"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "2254:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2246:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "_merkleRoot",
												"nameLocation": "2271:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2263:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 632,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:64:8"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2284:0:8"
									},
									"scope": 1153,
									"src": "2208:209:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "2477:18:8",
										"statements": []
									},
									"functionSelector": "0e2d56cf",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 654,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 653,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2467:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2467:9:8"
										}
									],
									"name": "setPublicMint",
									"nameLocation": "2434:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "_bool",
												"nameLocation": "2453:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2448:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 650,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2448:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:12:8"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2477:0:8"
									},
									"scope": 1153,
									"src": "2425:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "2567:224:8",
										"statements": [
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "nagaKidBefore",
														"nameLocation": "2586:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "2578:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 665,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2578:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [
														{
															"id": 669,
															"name": "nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "2610:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														],
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2602:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2602:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2602:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2578:48:8"
											},
											{
												"expression": {
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 672,
														"name": "nagaKidContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "2637:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INagaKid_$494",
															"typeString": "contract INagaKid"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 673,
														"name": "_nagaKid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "2655:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INagaKid_$494",
															"typeString": "contract INagaKid"
														}
													},
													"src": "2637:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKid_$494",
														"typeString": "contract INagaKid"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "2637:26:8"
											},
											{
												"assignments": [
													677
												],
												"declarations": [
													{
														"constant": false,
														"id": 677,
														"mutability": "mutable",
														"name": "nagaKidAfter",
														"nameLocation": "2682:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "2674:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 676,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2674:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 682,
												"initialValue": {
													"arguments": [
														{
															"id": 680,
															"name": "_nagaKid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "2705:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														],
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2697:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 678,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2697:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2697:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2674:40:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 684,
															"name": "nagaKidBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "2755:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "nagaKidAfter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "2770:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 683,
														"name": "NagaKidContractChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "2732:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2732:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "EmitStatement",
												"src": "2727:56:8"
											}
										]
									},
									"functionSelector": "9e6c8855",
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 663,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 662,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2557:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2557:9:8"
										}
									],
									"name": "setNagaKidContract",
									"nameLocation": "2512:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "_nagaKid",
												"nameLocation": "2540:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "2531:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INagaKid_$494",
													"typeString": "contract INagaKid"
												},
												"typeName": {
													"id": 659,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 658,
														"name": "INagaKid",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 494,
														"src": "2531:8:8"
													},
													"referencedDeclaration": 494,
													"src": "2531:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKid_$494",
														"typeString": "contract INagaKid"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2530:19:8"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2567:0:8"
									},
									"scope": 1153,
									"src": "2503:288:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "2850:146:8",
										"statements": [
											{
												"assignments": [
													697
												],
												"declarations": [
													{
														"constant": false,
														"id": 697,
														"mutability": "mutable",
														"name": "_roundBefore",
														"nameLocation": "2869:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "2861:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 696,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2861:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 699,
												"initialValue": {
													"id": 698,
													"name": "currentMintRound",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 532,
													"src": "2884:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2861:39:8"
											},
											{
												"expression": {
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 700,
														"name": "currentMintRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "2911:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 701,
														"name": "_round",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "2930:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2911:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "2911:25:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 705,
															"name": "_roundBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "2967:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 706,
															"name": "_round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "2981:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 704,
														"name": "RoundChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "2954:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2954:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "EmitStatement",
												"src": "2949:39:8"
											}
										]
									},
									"functionSelector": "ff05fe4a",
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 694,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 693,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2840:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2840:9:8"
										}
									],
									"name": "setRound",
									"nameLocation": "2808:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "_round",
												"nameLocation": "2825:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "2817:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 690,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2817:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:16:8"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:0:8"
									},
									"scope": 1153,
									"src": "2799:197:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "3057:131:8",
										"statements": [
											{
												"assignments": [
													718
												],
												"declarations": [
													{
														"constant": false,
														"id": 718,
														"mutability": "mutable",
														"name": "_signerBefore",
														"nameLocation": "3076:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 730,
														"src": "3068:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 717,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3068:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"initialValue": {
													"id": 719,
													"name": "signer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 542,
													"src": "3092:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3068:30:8"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 721,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "3109:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 722,
														"name": "_signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "3118:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3109:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "3109:16:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 726,
															"name": "_signerBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "3157:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "_signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "3172:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 725,
														"name": "SignerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "3143:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3143:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "EmitStatement",
												"src": "3138:42:8"
											}
										]
									},
									"functionSelector": "6c19e783",
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 715,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 714,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3047:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3047:9:8"
										}
									],
									"name": "setSigner",
									"nameLocation": "3013:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "3031:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3023:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:8"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3057:0:8"
									},
									"scope": 1153,
									"src": "3004:184:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "3257:159:8",
										"statements": [
											{
												"assignments": [
													739
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "_merkleRootBefore",
														"nameLocation": "3276:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "3268:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 738,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3268:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 741,
												"initialValue": {
													"id": 740,
													"name": "merkleRoot",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 534,
													"src": "3296:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3268:38:8"
											},
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 742,
														"name": "merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "3317:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 743,
														"name": "_merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "3330:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3317:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "3317:24:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 747,
															"name": "_merkleRootBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "3377:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 748,
															"name": "_merkleRoot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "3396:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 746,
														"name": "MerkleRootChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "3359:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3359:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "EmitStatement",
												"src": "3354:54:8"
											}
										]
									},
									"functionSelector": "7cb64759",
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 736,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 735,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3247:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3247:9:8"
										}
									],
									"name": "setMerkleRoot",
									"nameLocation": "3205:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "_merkleRoot",
												"nameLocation": "3227:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "3219:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 732,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:21:8"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3257:0:8"
									},
									"scope": 1153,
									"src": "3196:220:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "3535:884:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 765,
																"name": "isPrivateMintOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "3554:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3575:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3554:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726976617465206d696e74206973206e6f74206f70656e2e",
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3580:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44088db98f64bd7f2c584eff446b56f0c15b8c18215ca7ced6e447e24db3d2bb",
																"typeString": "literal_string \"Private mint is not open.\""
															},
															"value": "Private mint is not open."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44088db98f64bd7f2c584eff446b56f0c15b8c18215ca7ced6e447e24db3d2bb",
																"typeString": "literal_string \"Private mint is not open.\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3546:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3546:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "3546:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 772,
																"name": "_round",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "3627:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 773,
																"name": "DEFAULT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "3637:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "3627:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e74206973206e6f7420617070726f7665642e",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3645:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae",
																"typeString": "literal_string \"Mint is not approved.\""
															},
															"value": "Mint is not approved."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb4251b4ffd06c77b74f4c850691212ca55278808f7b03c1ff056c93470ea2ae",
																"typeString": "literal_string \"Mint is not approved.\""
															}
														],
														"id": 771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3619:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3619:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "3619:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "currentMintRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "3688:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 780,
																"name": "_round",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "3708:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "3688:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420617265206e6f7420696e2074686973206d696e74696e6720726f756e642e",
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3716:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265",
																"typeString": "literal_string \"Contract are not in this minting round.\""
															},
															"value": "Contract are not in this minting round."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01b030b8b5a56a7c757eaa200dd58c9c7b611dc637845adcfee0eed19fdd1265",
																"typeString": "literal_string \"Contract are not in this minting round.\""
															}
														],
														"id": 778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3680:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3680:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "3680:78:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 786,
																		"name": "getTotalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1142,
																		"src": "3777:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3777:16:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 788,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "3796:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3777:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 790,
																	"name": "getMaxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "3806:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3806:14:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3777:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f76657220737570706c79",
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3822:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6",
																"typeString": "literal_string \"Over supply\""
															},
															"value": "Over supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6",
																"typeString": "literal_string \"Over supply\""
															}
														],
														"id": 785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3769:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3769:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "3769:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 798,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3868:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3868:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 800,
																		"name": "_round",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "3879:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 797,
																	"name": "isUserMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "3855:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
																		"typeString": "function (address,bytes32) view returns (bool)"
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3855:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3890:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "3855:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752061726520616c7265616479206d696e7465642e",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3897:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															},
															"value": "You are already minted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3847:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3847:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "3847:76:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 812,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3975:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MintNagaKids_$1153",
																				"typeString": "contract MintNagaKids"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MintNagaKids_$1153",
																				"typeString": "contract MintNagaKids"
																			}
																		],
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3967:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 810,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3967:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3967:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 808,
																	"name": "nagaKidContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "3942:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INagaKid_$494",
																		"typeString": "contract INagaKid"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isMinter",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 486,
																"src": "3942:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3942:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374204d696e74206973206e6f7420617070726f7665642e",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3983:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79",
																"typeString": "literal_string \"Contract Mint is not approved.\""
															},
															"value": "Contract Mint is not approved."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79",
																"typeString": "literal_string \"Contract Mint is not approved.\""
															}
														],
														"id": 807,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3934:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3934:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "3934:82:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 821,
																	"name": "_proof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "4054:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	}
																},
																{
																	"id": 822,
																	"name": "merkleRoot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4062:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 826,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4101:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 827,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4101:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 828,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "4113:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 829,
																					"name": "_round",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "4122:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"expression": {
																					"id": 824,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "4084:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 825,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "4084:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4084:45:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 823,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "4074:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4074:56:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 819,
																	"name": "MerkleProof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "4035:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_MerkleProof_$453_$",
																		"typeString": "type(library MerkleProof)"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "verify",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 384,
																"src": "4035:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4035:96:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a65642057686974656c6973744d696e74205468697320557365722e",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4133:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517",
																"typeString": "literal_string \"Unauthorized WhitelistMint This User.\""
															},
															"value": "Unauthorized WhitelistMint This User."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517",
																"typeString": "literal_string \"Unauthorized WhitelistMint This User.\""
															}
														],
														"id": 818,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4027:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4027:146:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "4027:146:8"
											},
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 836,
																"name": "_isUserMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "4186:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(bytes32 => bool))"
																}
															},
															"id": 840,
															"indexExpression": {
																"expression": {
																	"id": 837,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4200:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4200:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4186:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 841,
														"indexExpression": {
															"id": 839,
															"name": "_round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "4212:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4186:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4222:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4186:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "4186:40:8"
											},
											{
												"expression": {
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 845,
																"name": "_userMintedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "4237:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(bytes32 => uint256))"
																}
															},
															"id": 849,
															"indexExpression": {
																"expression": {
																	"id": 846,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4255:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4255:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4237:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 850,
														"indexExpression": {
															"id": 848,
															"name": "_round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "4267:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4237:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 851,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "4278:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4237:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "4237:48:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 857,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4323:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4323:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "4334:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 854,
															"name": "nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "4298:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 493,
														"src": "4298:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4298:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "4298:44:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 863,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4374:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4374:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "4386:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 866,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4395:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4395:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 862,
														"name": "PrivateMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "4360:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4360:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "EmitStatement",
												"src": "4355:56:8"
											}
										]
									},
									"functionSelector": "f6b48e55",
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 762,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 761,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "3522:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3522:12:8"
										}
									],
									"name": "allowlistMint",
									"nameLocation": "3433:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "_proof",
												"nameLocation": "3466:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "3447:25:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 753,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3447:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 754,
													"nodeType": "ArrayTypeName",
													"src": "3447:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3482:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "3474:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "_round",
												"nameLocation": "3499:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "3491:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 758,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3491:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:60:8"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:8"
									},
									"scope": 1153,
									"src": "3424:995:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "4496:746:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 879,
																"name": "isPublicMintOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "4517:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4537:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "4517:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5075626c6963206d696e74206973206e6f74206f70656e2e",
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4543:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_507f035c670b11e911e1eb5937077419dc7c16add6610aed12b3d2f661e88ec0",
																"typeString": "literal_string \"Public mint is not open.\""
															},
															"value": "Public mint is not open."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_507f035c670b11e911e1eb5937077419dc7c16add6610aed12b3d2f661e88ec0",
																"typeString": "literal_string \"Public mint is not open.\""
															}
														],
														"id": 878,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4509:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4509:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "4509:61:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 886,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967270,
																	"src": "4589:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"src": "4589:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 888,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4602:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4602:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4589:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6861686120436f6e74726163742063616e27742063616c6c206d65",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4614:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734",
																"typeString": "literal_string \"haha Contract can't call me\""
															},
															"value": "haha Contract can't call me"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734",
																"typeString": "literal_string \"haha Contract can't call me\""
															}
														],
														"id": 885,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4581:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "4581:63:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 896,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4678:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4678:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 895,
																	"name": "isPublicMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "4663:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4663:26:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4693:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "4663:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752061726520616c7265616479206d696e7465642e",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4699:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															},
															"value": "You are already minted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															}
														],
														"id": 894,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4655:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4655:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "4655:70:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 909,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4848:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MintNagaKids_$1153",
																				"typeString": "contract MintNagaKids"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MintNagaKids_$1153",
																				"typeString": "contract MintNagaKids"
																			}
																		],
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4840:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 907,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4840:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4840:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 905,
																	"name": "nagaKidContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "4815:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INagaKid_$494",
																		"typeString": "contract INagaKid"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isMinter",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 486,
																"src": "4815:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4815:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374204d696e74206973206e6f7420617070726f7665642e",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79",
																"typeString": "literal_string \"Contract Mint is not approved.\""
															},
															"value": "Contract Mint is not approved."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c2411020c41eae6dcfcf8c36dfeed2ad5167769d337d3eba6c16ddf45224e79",
																"typeString": "literal_string \"Contract Mint is not approved.\""
															}
														],
														"id": 904,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4807:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4807:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "4807:82:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 917,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4915:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 918,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4922:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4922:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 920,
																	"name": "_sig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "4933:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 916,
																"name": "verify",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "4908:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,bytes memory) view returns (bool)"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4908:30:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a6564205075626c69634d696e74205468697320557365722e",
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4940:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43",
																"typeString": "literal_string \"Unauthorized PublicMint This User.\""
															},
															"value": "Unauthorized PublicMint This User."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43",
																"typeString": "literal_string \"Unauthorized PublicMint This User.\""
															}
														],
														"id": 915,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4900:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "4900:77:8"
											},
											{
												"assignments": [
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "_amount",
														"nameLocation": "5044:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "5036:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 925,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5036:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 928,
												"initialValue": {
													"hexValue": "31",
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5054:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5036:19:8"
											},
											{
												"expression": {
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 929,
															"name": "_isPublicMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "5069:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 932,
														"indexExpression": {
															"expression": {
																"id": 930,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5085:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5085:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5069:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5099:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5069:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "5069:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 939,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5139:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5139:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "5150:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 936,
															"name": "nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "5114:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 493,
														"src": "5114:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5114:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "5114:44:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 945,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5197:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5197:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "5208:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 948,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5216:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5216:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 944,
														"name": "PublicMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "5184:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5184:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "EmitStatement",
												"src": "5179:53:8"
											}
										]
									},
									"functionSelector": "de6892c8",
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 876,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 875,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "4483:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4483:12:8"
										}
									],
									"name": "publicMint",
									"nameLocation": "4436:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "_sig",
												"nameLocation": "4462:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "4447:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 872,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4447:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4446:21:8"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4496:0:8"
									},
									"scope": 1153,
									"src": "4427:815:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "5314:48:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 960,
														"name": "_isPublicMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "5332:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 962,
													"indexExpression": {
														"id": 961,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "5348:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5332:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 959,
												"id": 963,
												"nodeType": "Return",
												"src": "5325:29:8"
											}
										]
									},
									"functionSelector": "f055c7a9",
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPublicMinted",
									"nameLocation": "5259:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "5282:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5274:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5274:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5273:15:8"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5309:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 957,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5309:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:6:8"
									},
									"scope": 1153,
									"src": "5250:112:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "5418:290:8",
										"statements": [
											{
												"assignments": [
													973
												],
												"declarations": [
													{
														"constant": false,
														"id": 973,
														"mutability": "mutable",
														"name": "balanceOFContract",
														"nameLocation": "5434:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1007,
														"src": "5429:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 972,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5429:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 979,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 976,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5462:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MintNagaKids_$1153",
																	"typeString": "contract MintNagaKids"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MintNagaKids_$1153",
																	"typeString": "contract MintNagaKids"
																}
															],
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5454:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 974,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5454:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5454:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "5454:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5429:46:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 981,
																"name": "balanceOFContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "5494:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5514:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5494:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742042616c616e6365",
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5517:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															},
															"value": "Insufficient Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															}
														],
														"id": 980,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5486:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5486:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "5486:54:8"
											},
											{
												"assignments": [
													988,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 988,
														"mutability": "mutable",
														"name": "status",
														"nameLocation": "5557:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1007,
														"src": "5552:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 987,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5552:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 995,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5604:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 989,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "5568:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5568:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 991,
																"name": "balanceOFContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "5584:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5568:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5568:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5551:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 997,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "5626:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 996,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5618:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5618:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "5618:15:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1001,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "5660:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "balanceOFContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "5665:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1003,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5684:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5684:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5651:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5651:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "EmitStatement",
												"src": "5646:54:8"
											}
										]
									},
									"functionSelector": "51cff8d9",
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 970,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 969,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5408:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5408:9:8"
										}
									],
									"name": "withdraw",
									"nameLocation": "5379:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5396:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5388:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5388:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5387:13:8"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5418:0:8"
									},
									"scope": 1153,
									"src": "5370:338:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "5790:303:8",
										"statements": [
											{
												"assignments": [
													1018
												],
												"declarations": [
													{
														"constant": false,
														"id": 1018,
														"mutability": "mutable",
														"name": "balanceOfContract",
														"nameLocation": "5806:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "5801:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1017,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5801:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1028,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1025,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5862:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MintNagaKids_$1153",
																		"typeString": "contract MintNagaKids"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MintNagaKids_$1153",
																		"typeString": "contract MintNagaKids"
																	}
																],
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5854:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1023,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5854:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5854:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1020,
																	"name": "_currency",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "5833:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1019,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "5826:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5826:17:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 179,
														"src": "5826:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5801:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1030,
																"name": "balanceOfContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "5887:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5907:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5887:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742042616c616e6365",
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5910:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															},
															"value": "Insufficient Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																"typeString": "literal_string \"Insufficient Balance\""
															}
														],
														"id": 1029,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5879:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5879:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "5879:54:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1040,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "5971:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "balanceOfContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "5976:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1037,
																	"name": "_currency",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "5951:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1036,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "5944:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5944:17:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														"id": 1039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "5944:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5944:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "5944:50:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1045,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6037:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "_currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "6041:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "balanceOfContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "6051:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1048,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6069:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6069:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1044,
														"name": "WithdrawCurrency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "6020:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6020:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "EmitStatement",
												"src": "6015:70:8"
											}
										]
									},
									"functionSelector": "8407ecc4",
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1015,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1014,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5780:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5780:9:8"
										}
									],
									"name": "withdrawCurrency",
									"nameLocation": "5725:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5750:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "5742:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5742:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "_currency",
												"nameLocation": "5762:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "5754:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5754:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5741:31:8"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5790:0:8"
									},
									"scope": 1153,
									"src": "5716:377:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "6182:262:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1069,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "6223:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1066,
																				"name": "_NFT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1057,
																				"src": "6209:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1065,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "6201:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$338_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6201:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$338",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 271,
																	"src": "6201:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6201:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1073,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6244:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MintNagaKids_$1153",
																			"typeString": "contract MintNagaKids"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MintNagaKids_$1153",
																			"typeString": "contract MintNagaKids"
																		}
																	],
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6236:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1071,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6236:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6236:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6201:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e4964206973206e6f74206f776e656420627920636f6e7472616374",
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6251:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32",
																"typeString": "literal_string \"This tokenId is not owned by contract\""
															},
															"value": "This tokenId is not owned by contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95d28383fddc0a416793ce8ec2405e6075664f03c74a9f16892baa9d68c29a32",
																"typeString": "literal_string \"This tokenId is not owned by contract\""
															}
														],
														"id": 1064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6193:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6193:98:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "6193:98:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1085,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6343:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MintNagaKids_$1153",
																		"typeString": "contract MintNagaKids"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MintNagaKids_$1153",
																		"typeString": "contract MintNagaKids"
																	}
																],
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6335:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1083,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6335:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6335:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "6350:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "6355:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1080,
																	"name": "_NFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "6312:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1079,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "6304:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$338_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6304:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$338",
																"typeString": "contract IERC721"
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 293,
														"src": "6304:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "6304:60:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1092,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "6402:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1093,
															"name": "_NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "6406:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1094,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "6411:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1095,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6420:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6420:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1091,
														"name": "WithdrawNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "6390:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "EmitStatement",
												"src": "6385:51:8"
											}
										]
									},
									"functionSelector": "bff863ec",
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1062,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1061,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6172:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6172:9:8"
										}
									],
									"name": "withdrawNFT",
									"nameLocation": "6110:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6130:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "6122:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6122:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "_NFT",
												"nameLocation": "6142:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "6134:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6134:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "6155:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "6147:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6121:43:8"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6182:0:8"
									},
									"scope": 1153,
									"src": "6101:343:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "6530:54:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1109,
															"name": "_isUserMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "6548:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(bytes32 => bool))"
															}
														},
														"id": 1111,
														"indexExpression": {
															"id": 1110,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "6562:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6548:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
															"typeString": "mapping(bytes32 => bool)"
														}
													},
													"id": 1113,
													"indexExpression": {
														"id": 1112,
														"name": "_round",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "6569:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6548:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1108,
												"id": 1114,
												"nodeType": "Return",
												"src": "6541:35:8"
											}
										]
									},
									"functionSelector": "ffdc6129",
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUserMinted",
									"nameLocation": "6461:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6482:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "6474:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6474:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "_round",
												"nameLocation": "6496:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "6488:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1103,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6473:30:8"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "6524:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6524:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6523:6:8"
									},
									"scope": 1153,
									"src": "6452:132:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "6677:58:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1125,
															"name": "_userMintedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "6695:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(bytes32 => uint256))"
															}
														},
														"id": 1127,
														"indexExpression": {
															"id": 1126,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "6713:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6695:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1129,
													"indexExpression": {
														"id": 1128,
														"name": "_round",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "6720:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6695:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1124,
												"id": 1130,
												"nodeType": "Return",
												"src": "6688:39:8"
											}
										]
									},
									"functionSelector": "b5abafa1",
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userMintedAmount",
									"nameLocation": "6601:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6626:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6618:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6618:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "_round",
												"nameLocation": "6640:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6632:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6632:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6617:30:8"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6668:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:9:8"
									},
									"scope": 1153,
									"src": "6592:143:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "6799:55:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1137,
															"name": "nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "6817:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1330,
														"src": "6817:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6817:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1136,
												"id": 1140,
												"nodeType": "Return",
												"src": "6810:36:8"
											}
										]
									},
									"functionSelector": "c4e41b22",
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalSupply",
									"nameLocation": "6752:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6766:2:8"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "6790:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6790:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6789:9:8"
									},
									"scope": 1153,
									"src": "6743:111:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "6916:53:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1147,
															"name": "nagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "6934:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKid_$494",
																"typeString": "contract INagaKid"
															}
														},
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "maxSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 479,
														"src": "6934:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6934:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1146,
												"id": 1150,
												"nodeType": "Return",
												"src": "6927:34:8"
											}
										]
									},
									"functionSelector": "4c0f38c2",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxSupply",
									"nameLocation": "6871:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6883:2:8"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "6907:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6907:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6906:9:8"
									},
									"scope": 1153,
									"src": "6862:107:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1154,
							"src": "428:6546:8",
							"usedErrors": []
						}
					],
					"src": "33:6943:8"
				},
				"id": 8
			},
			"ERC721A/VerifySignature.sol": {
				"ast": {
					"absolutePath": "ERC721A/VerifySignature.sol",
					"exportedSymbols": {
						"VerifySignature": [
							1270
						]
					},
					"id": 1271,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VerifySignature",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1270,
							"linearizedBaseContracts": [
								1270
							],
							"name": "VerifySignature",
							"nameLocation": "70:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "184:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1165,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "229:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1168,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "244:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_VerifySignature_$1270",
																				"typeString": "contract VerifySignature"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_VerifySignature_$1270",
																				"typeString": "contract VerifySignature"
																			}
																		],
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "236:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1166,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "236:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "236:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1163,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "212:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "212:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "212:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1162,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "202:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "202:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1161,
												"id": 1172,
												"nodeType": "Return",
												"src": "195:56:9"
											}
										]
									},
									"functionSelector": "1f5ac1b2",
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMessageHash",
									"nameLocation": "108:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "141:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "133:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "122:31:9"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "175:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1159,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "174:9:9"
									},
									"scope": 1270,
									"src": "99:160:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "384:377:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "650:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 1185,
																	"name": "_messageHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "707:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1182,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "611:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "611:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "611:127:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1181,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "583:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "583:170:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1180,
												"id": 1188,
												"nodeType": "Return",
												"src": "563:190:9"
											}
										]
									},
									"functionSelector": "fa540801",
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthSignedMessageHash",
									"nameLocation": "276:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "_messageHash",
												"nameLocation": "308:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "300:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1175,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:22:9"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "370:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1178,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:9:9"
									},
									"scope": 1270,
									"src": "267:494:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "902:217:9",
										"statements": [
											{
												"assignments": [
													1202
												],
												"declarations": [
													{
														"constant": false,
														"id": 1202,
														"mutability": "mutable",
														"name": "messageHash",
														"nameLocation": "921:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1220,
														"src": "913:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1201,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "913:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1206,
												"initialValue": {
													"arguments": [
														{
															"id": 1204,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "950:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1203,
														"name": "getMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "935:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address) view returns (bytes32)"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "935:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "913:43:9"
											},
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "ethSignedMessageHash",
														"nameLocation": "975:20:9",
														"nodeType": "VariableDeclaration",
														"scope": 1220,
														"src": "967:28:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1207,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "967:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"arguments": [
														{
															"id": 1210,
															"name": "messageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "1022:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1209,
														"name": "getEthSignedMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "998:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (bytes32)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "967:67:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1214,
																"name": "ethSignedMessageHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "1068:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1215,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "1090:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1213,
															"name": "recoverSigner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "1054:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
																"typeString": "function (bytes32,bytes memory) pure returns (address)"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1054:46:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1217,
														"name": "_signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "1104:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1054:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1219,
												"nodeType": "Return",
												"src": "1047:64:9"
											}
										]
									},
									"functionSelector": "42920a46",
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "778:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "803:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "795:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "829:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "821:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "858:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "845:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "845:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:90:9"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "896:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "896:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "895:6:9"
									},
									"scope": 1270,
									"src": "769:350:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "1261:140:9",
										"statements": [
											{
												"assignments": [
													1231,
													1233,
													1235
												],
												"declarations": [
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "1281:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "1273:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1230,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1273:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1233,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "1292:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "1284:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1232,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1284:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1235,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "1301:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "1295:7:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1234,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1295:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1239,
												"initialValue": {
													"arguments": [
														{
															"id": 1237,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "1321:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1236,
														"name": "splitSignature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "1306:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$",
															"typeString": "function (bytes memory) pure returns (bytes32,bytes32,uint8)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
														"typeString": "tuple(bytes32,bytes32,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1272:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1241,
															"name": "_ethSignedMessageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "1362:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1242,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "1385:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1243,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "1388:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1244,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "1391:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1240,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "1352:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1246,
												"nodeType": "Return",
												"src": "1345:48:9"
											}
										]
									},
									"functionSelector": "97aba7f9",
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recoverSigner",
									"nameLocation": "1136:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "_ethSignedMessageHash",
												"nameLocation": "1168:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1160:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1222,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1213:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1200:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1200:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1149:81:9"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1252:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:9:9"
									},
									"scope": 1270,
									"src": "1127:274:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "1585:715:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1260,
																	"name": "sig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "1604:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1604:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3635",
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1618:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65_by_1",
																	"typeString": "int_const 65"
																},
																"value": "65"
															},
															"src": "1604:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964207369676e6174757265206c656e677468",
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1622:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
																"typeString": "literal_string \"invalid signature length\""
															},
															"value": "invalid signature length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
																"typeString": "literal_string \"invalid signature length\""
															}
														],
														"id": 1259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1596:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1596:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "1596:53:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1671:580:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2038:24:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "2053:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2058:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2049:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2049:12:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2043:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:19:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2038:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2108:24:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "2123:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2128:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2119:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2119:12:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2113:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2113:19:9"
															},
															"variableNames": [
																{
																	"name": "s",
																	"nodeType": "YulIdentifier",
																	"src": "2108:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2207:33:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2217:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "sig",
																						"nodeType": "YulIdentifier",
																						"src": "2230:3:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2235:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2226:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2226:12:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2220:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:19:9"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "2212:4:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2212:28:9"
															},
															"variableNames": [
																{
																	"name": "v",
																	"nodeType": "YulIdentifier",
																	"src": "2207:1:9"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1253,
														"isOffset": false,
														"isSlot": false,
														"src": "2038:1:9",
														"valueSize": 1
													},
													{
														"declaration": 1255,
														"isOffset": false,
														"isSlot": false,
														"src": "2108:1:9",
														"valueSize": 1
													},
													{
														"declaration": 1250,
														"isOffset": false,
														"isSlot": false,
														"src": "2053:3:9",
														"valueSize": 1
													},
													{
														"declaration": 1250,
														"isOffset": false,
														"isSlot": false,
														"src": "2123:3:9",
														"valueSize": 1
													},
													{
														"declaration": 1250,
														"isOffset": false,
														"isSlot": false,
														"src": "2230:3:9",
														"valueSize": 1
													},
													{
														"declaration": 1257,
														"isOffset": false,
														"isSlot": false,
														"src": "2207:1:9",
														"valueSize": 1
													}
												],
												"id": 1267,
												"nodeType": "InlineAssembly",
												"src": "1662:589:9"
											}
										]
									},
									"functionSelector": "a7bb5803",
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "splitSignature",
									"nameLocation": "1418:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1446:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "1433:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1433:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1432:18:9"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1521:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "1513:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1545:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "1537:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1254,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1567:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "1561:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1256,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1561:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1498:81:9"
									},
									"scope": 1270,
									"src": "1409:891:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1271,
							"src": "61:2242:9",
							"usedErrors": []
						}
					],
					"src": "33:2270:9"
				},
				"id": 9
			},
			"erc721a/contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							1479
						]
					},
					"id": 1480,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1272,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1273,
								"nodeType": "StructuredDocumentation",
								"src": "109:59:10",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 1479,
							"linearizedBaseContracts": [
								1479
							],
							"name": "IERC721A",
							"nameLocation": "179:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "194:76:10",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 1276,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "281:33:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:2:10"
									},
									"src": "275:42:10"
								},
								{
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "323:44:10",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 1279,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "378:32:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:10"
									},
									"src": "372:41:10"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "419:66:10",
										"text": " The caller cannot approve to their own address."
									},
									"errorSelector": "b06307db",
									"id": 1282,
									"name": "ApproveToCaller",
									"nameLocation": "496:15:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:10"
									},
									"src": "490:24:10"
								},
								{
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "520:65:10",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 1285,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "596:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:2:10"
									},
									"src": "590:35:10"
								},
								{
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "631:51:10",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 1288,
									"name": "MintToZeroAddress",
									"nameLocation": "693:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:2:10"
									},
									"src": "687:26:10"
								},
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "719:72:10",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 1291,
									"name": "MintZeroQuantity",
									"nameLocation": "802:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:2:10"
									},
									"src": "796:25:10"
								},
								{
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "827:44:10",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 1294,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "882:29:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:2:10"
									},
									"src": "876:38:10"
								},
								{
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "920:76:10",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 1297,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "1007:33:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:2:10"
									},
									"src": "1001:42:10"
								},
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "1049:53:10",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 1300,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1113:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:2:10"
									},
									"src": "1107:35:10"
								},
								{
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "1148:109:10",
										"text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 1303,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1268:38:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:2:10"
									},
									"src": "1262:47:10"
								},
								{
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "1315:55:10",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 1306,
									"name": "TransferToZeroAddress",
									"nameLocation": "1381:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1402:2:10"
									},
									"src": "1375:30:10"
								},
								{
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "1411:44:10",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 1309,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1466:27:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:2:10"
									},
									"src": "1460:36:10"
								},
								{
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "1502:79:10",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 1312,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1592:31:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1623:2:10"
									},
									"src": "1586:40:10"
								},
								{
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "1632:83:10",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 1315,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1726:35:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1761:2:10"
									},
									"src": "1720:44:10"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1324,
									"members": [
										{
											"constant": false,
											"id": 1317,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1847:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 1324,
											"src": "1839:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1316,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1839:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1319,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1960:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1324,
											"src": "1953:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1318,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1953:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1321,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2035:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1324,
											"src": "2030:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1320,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2030:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1323,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2150:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1324,
											"src": "2143:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1322,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2143:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1777:14:10",
									"nodeType": "StructDefinition",
									"scope": 1479,
									"src": "1770:396:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "2172:193:10",
										"text": " @dev Returns the total amount of tokens stored by the contract.\n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2379:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2390:2:10"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "2416:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2416:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:9:10"
									},
									"scope": 1479,
									"src": "2370:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "2534:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2888:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2913:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "2906:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1332,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2906:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2905:20:10"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "2949:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2949:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:6:10"
									},
									"scope": 1479,
									"src": "2879:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "3064:88:10",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1347,
									"name": "Transfer",
									"nameLocation": "3163:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3188:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "3172:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3210:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "3194:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3230:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "3214:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:67:10"
									},
									"src": "3157:82:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "3245:94:10",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1356,
									"name": "Approval",
									"nameLocation": "3350:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3375:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "3359:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3398:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "3382:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3424:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "3408:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3358:74:10"
									},
									"src": "3344:89:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "3439:117:10",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1365,
									"name": "ApprovalForAll",
									"nameLocation": "3567:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3598:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "3582:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3621:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "3605:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3605:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3636:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "3631:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3631:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:64:10"
									},
									"src": "3561:85:10"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "3652:76:10",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3742:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3760:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "3752:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:15:10"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3798:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "3790:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:17:10"
									},
									"scope": 1479,
									"src": "3733:74:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "3813:131:10",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "3958:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3974:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "3966:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3966:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3965:17:10"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "4006:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:15:10"
									},
									"scope": 1479,
									"src": "3949:72:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "4027:556:10",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4597:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4631:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "4623:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4623:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4653:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "4645:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4645:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4673:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "4665:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4705:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "4690:19:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4690:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4613:102:10"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4724:0:10"
									},
									"scope": 1479,
									"src": "4588:137:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "4731:690:10",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5435:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5469:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "5461:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5461:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5491:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "5483:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5483:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5511:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "5503:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5503:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5451:73:10"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5533:0:10"
									},
									"scope": 1479,
									"src": "5426:108:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "5540:504:10",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6058:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6088:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "6080:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6080:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6110:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "6102:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6102:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6130:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "6122:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6122:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6070:73:10"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6152:0:10"
									},
									"scope": 1479,
									"src": "6049:104:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "6159:452:10",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6625:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6641:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "6633:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6633:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6653:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "6645:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6645:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6632:29:10"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6670:0:10"
									},
									"scope": 1479,
									"src": "6616:55:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "6677:309:10",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7000:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7026:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "7018:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7018:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7041:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "7036:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7036:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7017:34:10"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7060:0:10"
									},
									"scope": 1479,
									"src": "6991:70:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "7067:139:10",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7220:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7240:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "7232:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7231:17:10"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7280:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "7272:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:18:10"
									},
									"scope": 1479,
									"src": "7211:79:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "7296:138:10",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7448:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7473:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "7465:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7465:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7488:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "7480:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7480:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7464:33:10"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "7521:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7521:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7520:6:10"
									},
									"scope": 1479,
									"src": "7439:88:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "7640:58:10",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7712:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7716:2:10"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "7742:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7742:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7741:15:10"
									},
									"scope": 1479,
									"src": "7703:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "7763:60:10",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7837:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7843:2:10"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "7869:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7869:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7868:15:10"
									},
									"scope": 1479,
									"src": "7828:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "7890:90:10",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "7994:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8011:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "8003:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8003:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8002:17:10"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "8043:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8043:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8042:15:10"
									},
									"scope": 1479,
									"src": "7985:73:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "8168:203:10",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n as defined in the ERC2309 standard. See `_mintERC2309` for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 1478,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8382:19:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8418:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "8402:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8402:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8439:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "8431:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8431:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8466:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "8450:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8450:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8488:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "8472:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8472:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8401:90:10"
									},
									"src": "8376:116:10"
								}
							],
							"scope": 1480,
							"src": "169:8325:10",
							"usedErrors": [
								1276,
								1279,
								1282,
								1285,
								1288,
								1291,
								1294,
								1297,
								1300,
								1303,
								1306,
								1309,
								1312,
								1315
							]
						}
					],
					"src": "84:8411:10"
				},
				"id": 10
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/extensions/IERC721ABurnable.sol",
					"exportedSymbols": {
						"IERC721A": [
							1479
						],
						"IERC721ABurnable": [
							1492
						]
					},
					"id": 1493,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1481,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:11"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "../IERC721A.sol",
							"id": 1482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1493,
							"sourceUnit": 1480,
							"src": "109:25:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1484,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1479,
										"src": "234:8:11"
									},
									"id": 1485,
									"nodeType": "InheritanceSpecifier",
									"src": "234:8:11"
								}
							],
							"canonicalName": "IERC721ABurnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1483,
								"nodeType": "StructuredDocumentation",
								"src": "136:67:11",
								"text": " @dev Interface of an ERC721ABurnable compliant contract."
							},
							"fullyImplemented": false,
							"id": 1492,
							"linearizedBaseContracts": [
								1492,
								1479
							],
							"name": "IERC721ABurnable",
							"nameLocation": "214:16:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "249:163:11",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "426:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "439:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "431:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:17:11"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:0:11"
									},
									"scope": 1492,
									"src": "417:40:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1493,
							"src": "204:255:11",
							"usedErrors": [
								1276,
								1279,
								1282,
								1285,
								1288,
								1291,
								1294,
								1297,
								1300,
								1303,
								1306,
								1309,
								1312,
								1315
							]
						}
					],
					"src": "84:376:11"
				},
				"id": 11
			},
			"erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/extensions/IERC721AQueryable.sol",
					"exportedSymbols": {
						"IERC721A": [
							1479
						],
						"IERC721AQueryable": [
							1544
						]
					},
					"id": 1545,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1494,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:12"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "../IERC721A.sol",
							"id": 1495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1545,
							"sourceUnit": 1480,
							"src": "109:25:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1497,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1479,
										"src": "236:8:12"
									},
									"id": 1498,
									"nodeType": "InheritanceSpecifier",
									"src": "236:8:12"
								}
							],
							"canonicalName": "IERC721AQueryable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1496,
								"nodeType": "StructuredDocumentation",
								"src": "136:68:12",
								"text": " @dev Interface of an ERC721AQueryable compliant contract."
							},
							"fullyImplemented": false,
							"id": 1544,
							"linearizedBaseContracts": [
								1544,
								1479
							],
							"name": "IERC721AQueryable",
							"nameLocation": "215:17:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "251:59:12",
										"text": " Invalid query range (`start` >= `stop`)."
									},
									"errorSelector": "32c1995a",
									"id": 1501,
									"name": "InvalidQueryRange",
									"nameLocation": "321:17:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:2:12"
									},
									"src": "315:26:12"
								},
								{
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "347:599:12",
										"text": " @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n If the `tokenId` is out of bounds:\n   - `addr` = `address(0)`\n   - `startTimestamp` = `0`\n   - `burned` = `false`\n If the `tokenId` is burned:\n   - `addr` = `<Address of owner before token was burned>`\n   - `startTimestamp` = `<Timestamp when token was burned>`\n   - `burned = `true`\n Otherwise:\n   - `addr` = `<Address of owner>`\n   - `startTimestamp` = `<Timestamp of start of ownership>`\n   - `burned = `false`"
									},
									"functionSelector": "c23dc68f",
									"id": 1510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipOf",
									"nameLocation": "960:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "988:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "980:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:17:12"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "1020:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1324_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1507,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1506,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1324,
														"src": "1020:14:12"
													},
													"referencedDeclaration": 1324,
													"src": "1020:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1324_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:23:12"
									},
									"scope": 1544,
									"src": "951:92:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "1049:142:12",
										"text": " @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n See {ERC721AQueryable-explicitOwnershipOf}"
									},
									"functionSelector": "5bbb2177",
									"id": 1521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipsOf",
									"nameLocation": "1205:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "1243:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1226:25:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1512,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1226:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1513,
													"nodeType": "ArrayTypeName",
													"src": "1226:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:27:12"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1276:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$1324_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership[]"
												},
												"typeName": {
													"baseType": {
														"id": 1517,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1516,
															"name": "TokenOwnership",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1324,
															"src": "1276:14:12"
														},
														"referencedDeclaration": 1324,
														"src": "1276:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1324_storage_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														}
													},
													"id": 1518,
													"nodeType": "ArrayTypeName",
													"src": "1276:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$1324_storage_$dyn_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:25:12"
									},
									"scope": 1544,
									"src": "1196:105:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "1307:365:12",
										"text": " @dev Returns an array of token IDs owned by `owner`,\n in the range [`start`, `stop`)\n (i.e. `start <= tokenId < stop`).\n This function allows for tokens to be queried if the collection\n grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n Requirements:\n - `start` < `stop`"
									},
									"functionSelector": "99a2557a",
									"id": 1534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwnerIn",
									"nameLocation": "1686:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1719:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1711:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1742:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1734:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1734:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "stop",
												"nameLocation": "1765:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1757:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1757:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1701:74:12"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1799:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1530,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1799:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1531,
													"nodeType": "ArrayTypeName",
													"src": "1799:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:18:12"
									},
									"scope": 1544,
									"src": "1677:140:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1535,
										"nodeType": "StructuredDocumentation",
										"src": "1823:426:12",
										"text": " @dev Returns an array of token IDs owned by `owner`.\n This function scans the ownership mapping and is O(totalSupply) in complexity.\n It is meant to be called off-chain.\n See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n multiple smaller scans if the collection is large enough to cause\n an out-of-gas error (10K pfp collections should be fine)."
									},
									"functionSelector": "8462151c",
									"id": 1543,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwner",
									"nameLocation": "2263:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2285:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "2277:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2277:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2276:15:12"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "2315:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1539,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2315:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1540,
													"nodeType": "ArrayTypeName",
													"src": "2315:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2314:18:12"
									},
									"scope": 1544,
									"src": "2254:79:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1545,
							"src": "205:2130:12",
							"usedErrors": [
								1276,
								1279,
								1282,
								1285,
								1288,
								1291,
								1294,
								1297,
								1300,
								1303,
								1306,
								1309,
								1312,
								1315,
								1501
							]
						}
					],
					"src": "84:2252:12"
				},
				"id": 12
			}
		}
	}
}