{
	"id": "a54a8872a6b8bf506c5b08e665eb51cd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC721A/INagaKid.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\nimport \"erc721a/contracts/IERC721A.sol\";\r\nimport \"erc721a/contracts/extensions/IERC721ABurnable.sol\";\r\nimport \"erc721a/contracts/extensions/ERC721AQueryable.sol\";\r\n\r\n\r\ninterface INagaKid is IERC721A {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n    /**\r\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\r\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\r\n     */\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\r\n    function tokenByIndex(uint256 index) external view returns (uint256);\r\n    function maxSupply() external view returns (uint256);\r\n    function isMinter(address minter) external view returns(bool);\r\n    function batchMint(address _to,uint _amount) external;\r\n    function safeMint(address _to) external;\r\n    function walletOfOwner(address _owner) external view returns (uint256[] memory);\r\n    \r\n}\r\n"
			},
			"erc721a/contracts/extensions/ERC721AQueryable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721AQueryable.sol';\nimport '../ERC721A.sol';\n\n/**\n * @title ERC721A Queryable\n * @dev ERC721A subclass with convenience query functions.\n */\nabstract contract ERC721AQueryable is ERC721A, IERC721AQueryable {\n    /**\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n     *\n     * If the `tokenId` is out of bounds:\n     *   - `addr` = `address(0)`\n     *   - `startTimestamp` = `0`\n     *   - `burned` = `false`\n     *   - `extraData` = `0`\n     *\n     * If the `tokenId` is burned:\n     *   - `addr` = `<Address of owner before token was burned>`\n     *   - `startTimestamp` = `<Timestamp when token was burned>`\n     *   - `burned = `true`\n     *   - `extraData` = `<Extra data when token was burned>`\n     *\n     * Otherwise:\n     *   - `addr` = `<Address of owner>`\n     *   - `startTimestamp` = `<Timestamp of start of ownership>`\n     *   - `burned = `false`\n     *   - `extraData` = `<Extra data at start of ownership>`\n     */\n    function explicitOwnershipOf(uint256 tokenId) public view override returns (TokenOwnership memory) {\n        TokenOwnership memory ownership;\n        if (tokenId < _startTokenId() || tokenId >= _nextTokenId()) {\n            return ownership;\n        }\n        ownership = _ownershipAt(tokenId);\n        if (ownership.burned) {\n            return ownership;\n        }\n        return _ownershipOf(tokenId);\n    }\n\n    /**\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n     * See {ERC721AQueryable-explicitOwnershipOf}\n     */\n    function explicitOwnershipsOf(uint256[] memory tokenIds) external view override returns (TokenOwnership[] memory) {\n        unchecked {\n            uint256 tokenIdsLength = tokenIds.length;\n            TokenOwnership[] memory ownerships = new TokenOwnership[](tokenIdsLength);\n            for (uint256 i; i != tokenIdsLength; ++i) {\n                ownerships[i] = explicitOwnershipOf(tokenIds[i]);\n            }\n            return ownerships;\n        }\n    }\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`,\n     * in the range [`start`, `stop`)\n     * (i.e. `start <= tokenId < stop`).\n     *\n     * This function allows for tokens to be queried if the collection\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n     *\n     * Requirements:\n     *\n     * - `start` < `stop`\n     */\n    function tokensOfOwnerIn(\n        address owner,\n        uint256 start,\n        uint256 stop\n    ) external view override returns (uint256[] memory) {\n        unchecked {\n            if (start >= stop) revert InvalidQueryRange();\n            uint256 tokenIdsIdx;\n            uint256 stopLimit = _nextTokenId();\n            // Set `start = max(start, _startTokenId())`.\n            if (start < _startTokenId()) {\n                start = _startTokenId();\n            }\n            // Set `stop = min(stop, stopLimit)`.\n            if (stop > stopLimit) {\n                stop = stopLimit;\n            }\n            uint256 tokenIdsMaxLength = balanceOf(owner);\n            // Set `tokenIdsMaxLength = min(balanceOf(owner), stop - start)`,\n            // to cater for cases where `balanceOf(owner)` is too big.\n            if (start < stop) {\n                uint256 rangeLength = stop - start;\n                if (rangeLength < tokenIdsMaxLength) {\n                    tokenIdsMaxLength = rangeLength;\n                }\n            } else {\n                tokenIdsMaxLength = 0;\n            }\n            uint256[] memory tokenIds = new uint256[](tokenIdsMaxLength);\n            if (tokenIdsMaxLength == 0) {\n                return tokenIds;\n            }\n            // We need to call `explicitOwnershipOf(start)`,\n            // because the slot at `start` may not be initialized.\n            TokenOwnership memory ownership = explicitOwnershipOf(start);\n            address currOwnershipAddr;\n            // If the starting slot exists (i.e. not burned), initialize `currOwnershipAddr`.\n            // `ownership.address` will not be zero, as `start` is clamped to the valid token ID range.\n            if (!ownership.burned) {\n                currOwnershipAddr = ownership.addr;\n            }\n            for (uint256 i = start; i != stop && tokenIdsIdx != tokenIdsMaxLength; ++i) {\n                ownership = _ownershipAt(i);\n                if (ownership.burned) {\n                    continue;\n                }\n                if (ownership.addr != address(0)) {\n                    currOwnershipAddr = ownership.addr;\n                }\n                if (currOwnershipAddr == owner) {\n                    tokenIds[tokenIdsIdx++] = i;\n                }\n            }\n            // Downsize the array to fit.\n            assembly {\n                mstore(tokenIds, tokenIdsIdx)\n            }\n            return tokenIds;\n        }\n    }\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`.\n     *\n     * This function scans the ownership mapping and is O(totalSupply) in complexity.\n     * It is meant to be called off-chain.\n     *\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n     * multiple smaller scans if the collection is large enough to cause\n     * an out-of-gas error (10K pfp collections should be fine).\n     */\n    function tokensOfOwner(address owner) external view override returns (uint256[] memory) {\n        unchecked {\n            uint256 tokenIdsIdx;\n            address currOwnershipAddr;\n            uint256 tokenIdsLength = balanceOf(owner);\n            uint256[] memory tokenIds = new uint256[](tokenIdsLength);\n            TokenOwnership memory ownership;\n            for (uint256 i = _startTokenId(); tokenIdsIdx != tokenIdsLength; ++i) {\n                ownership = _ownershipAt(i);\n                if (ownership.burned) {\n                    continue;\n                }\n                if (ownership.addr != address(0)) {\n                    currOwnershipAddr = ownership.addr;\n                }\n                if (currOwnershipAddr == owner) {\n                    tokenIds[tokenIdsIdx++] = i;\n                }\n            }\n            return tokenIds;\n        }\n    }\n}\n"
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of an ERC721ABurnable compliant contract.\n */\ninterface IERC721ABurnable is IERC721A {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) external;\n}\n"
			},
			"erc721a/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of an ERC721A compliant contract.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * The caller cannot approve to their own address.\n     */\n    error ApproveToCaller();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set through `_extraData`.\n        uint24 extraData;\n    }\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     *\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // ==============================\n    //            IERC165\n    // ==============================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // ==============================\n    //            IERC721\n    // ==============================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // ==============================\n    //        IERC721Metadata\n    // ==============================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // ==============================\n    //            IERC2309\n    // ==============================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n     * as defined in the ERC2309 standard. See `_mintERC2309` for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			},
			"erc721a/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev ERC721 token receiver interface.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard,\n * including the Metadata extension. Built to optimize for lower gas during batch mints.\n *\n * Assumes serials are sequentially minted starting at `_startTokenId()`\n * (defaults to 0, e.g. 0, 1, 2, 3..).\n *\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n *\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Mask of an entry in packed address data.\n    uint256 private constant BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with `_mintERC2309`.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to `_mintERC2309`\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The tokenId of the next token to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See `_packedOwnershipOf` implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see `_totalMinted`.\n     */\n    function totalSupply() public view override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view returns (uint256) {\n        // Counter underflow is impossible as _currentIndex does not decrement,\n        // and it is initialized to `_startTokenId()`\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view returns (uint256) {\n        return _burnCounter;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes of the XOR of\n        // all function selectors in the interface. See: https://eips.ethereum.org/EIPS/eip-165\n        // e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> BITPOS_NUMBER_MINTED) & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> BITPOS_NUMBER_BURNED) & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & BITMASK_AUX_COMPLEMENT) | (auxCasted << BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr)\n                if (curr < _currentIndex) {\n                    uint256 packed = _packedOwnerships[curr];\n                    // If not burned.\n                    if (packed & BITMASK_BURNED == 0) {\n                        // Invariant:\n                        // There will always be an ownership that has an address and is not burned\n                        // before an ownership that does not have an address and is not burned.\n                        // Hence, curr will not underflow.\n                        //\n                        // We can directly compare the packed value.\n                        // If the address is zero, packed is zero.\n                        while (packed == 0) {\n                            packed = _packedOwnerships[--curr];\n                        }\n                        return packed;\n                    }\n                }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, BITMASK_ADDRESS)\n            // `owner | (block.timestamp << BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << BITPOS_NEXT_INITIALIZED`.\n            result := shl(BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public override {\n        address owner = ownerOf(tokenId);\n\n        if (_msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                revert ApprovalCallerNotOwnerNorApproved();\n            }\n\n        _tokenApprovals[tokenId] = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        if (operator == _msgSenderERC721A()) revert ApproveToCaller();\n\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                revert TransferToNonERC721ReceiverImplementer();\n            }\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return\n            _startTokenId() <= tokenId &&\n            tokenId < _currentIndex && // If within bounds,\n            _packedOwnerships[tokenId] & BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     *   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            uint256 tokenId = startTokenId;\n            uint256 end = startTokenId + quantity;\n            do {\n                emit Transfer(address(0), to, tokenId++);\n            } while (tokenId < end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n        if (quantity > MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        mapping(uint256 => address) storage tokenApprovalsPtr = _tokenApprovals;\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId]`.\n        assembly {\n            // Compute the slot.\n            mstore(0x00, tokenId)\n            mstore(0x20, tokenApprovalsPtr.slot)\n            approvedAddressSlot := keccak256(0x00, 0x40)\n            // Load the slot's value from storage.\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    /**\n     * @dev Returns whether the `approvedAddress` is equals to `from` or `msgSender`.\n     */\n    function _isOwnerOrApproved(\n        address approvedAddress,\n        address from,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            from := and(from, BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, BITMASK_ADDRESS)\n            // `msgSender == from || msgSender == approvedAddress`.\n            result := or(eq(msgSender, from), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (BITMASK_BURNED | BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred.\n     * This includes minting.\n     * And also called before burning one token.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred.\n     * This includes minting.\n     * And also called after one token has been burned.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function _toString(uint256 value) internal pure returns (string memory ptr) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit),\n            // but we allocate 128 bytes to keep the free memory pointer 32-byte word aliged.\n            // We will need 1 32-byte word to store the length,\n            // and 3 32-byte words to store a maximum of 78 digits. Total: 32 + 3 * 32 = 128.\n            ptr := add(mload(0x40), 128)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, ptr)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := ptr\n\n            // We write the string from the rightmost digit to the leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // Costs a bit more than early returning for the zero case,\n            // but cheaper in terms of deployment and overall runtime costs.\n            for {\n                // Initialize and perform the first pass without check.\n                let temp := value\n                // Move the pointer 1 byte leftwards to point to an empty character slot.\n                ptr := sub(ptr, 1)\n                // Write the character to the pointer. 48 is the ASCII index of '0'.\n                mstore8(ptr, add(48, mod(temp, 10)))\n                temp := div(temp, 10)\n            } temp {\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n            } {\n                // Body of the for loop.\n                ptr := sub(ptr, 1)\n                mstore8(ptr, add(48, mod(temp, 10)))\n            }\n\n            let length := sub(end, ptr)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            ptr := sub(ptr, 32)\n            // Store the length.\n            mstore(ptr, length)\n        }\n    }\n}\n"
			},
			"erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of an ERC721AQueryable compliant contract.\n */\ninterface IERC721AQueryable is IERC721A {\n    /**\n     * Invalid query range (`start` >= `stop`).\n     */\n    error InvalidQueryRange();\n\n    /**\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n     *\n     * If the `tokenId` is out of bounds:\n     *   - `addr` = `address(0)`\n     *   - `startTimestamp` = `0`\n     *   - `burned` = `false`\n     *\n     * If the `tokenId` is burned:\n     *   - `addr` = `<Address of owner before token was burned>`\n     *   - `startTimestamp` = `<Timestamp when token was burned>`\n     *   - `burned = `true`\n     *\n     * Otherwise:\n     *   - `addr` = `<Address of owner>`\n     *   - `startTimestamp` = `<Timestamp of start of ownership>`\n     *   - `burned = `false`\n     */\n    function explicitOwnershipOf(uint256 tokenId) external view returns (TokenOwnership memory);\n\n    /**\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n     * See {ERC721AQueryable-explicitOwnershipOf}\n     */\n    function explicitOwnershipsOf(uint256[] memory tokenIds) external view returns (TokenOwnership[] memory);\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`,\n     * in the range [`start`, `stop`)\n     * (i.e. `start <= tokenId < stop`).\n     *\n     * This function allows for tokens to be queried if the collection\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n     *\n     * Requirements:\n     *\n     * - `start` < `stop`\n     */\n    function tokensOfOwnerIn(\n        address owner,\n        uint256 start,\n        uint256 stop\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`.\n     *\n     * This function scans the ownership mapping and is O(totalSupply) in complexity.\n     * It is meant to be called off-chain.\n     *\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n     * multiple smaller scans if the collection is large enough to cause\n     * an out-of-gas error (10K pfp collections should be fine).\n     */\n    function tokensOfOwner(address owner) external view returns (uint256[] memory);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC721A/INagaKid.sol": {
				"INagaKid": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "batchMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"name": "isMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "walletOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchMint(address,uint256)": "43508b05",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isMinter(address)": "aa271e1a",
							"maxSupply()": "d5abeb01",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeMint(address)": "40d097c3",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"walletOfOwner(address)": "438b6300"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"walletOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721A/INagaKid.sol\":\"INagaKid\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC721A/INagaKid.sol\":{\"keccak256\":\"0xae0235b0353d188442b5c69c05060ceb011ec3cc943de406640a25f4a5316d65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://199cf3396847e2997eedee61e72eb72331938275e0c612cd5d270c39f1526fc3\",\"dweb:/ipfs/QmZzm3WcgYVb7XygmoWU4TtsnATLSGztvCTJmwjxG94XdT\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xfeeda22932d93d1b3ec71fa0d700f1bd5bd4e1979fa250156b82581e9591c5cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3bb3c16d7d01cfabc6d4d723dece47e8a6e8a6ef42188d5be213d43d70c2e87\",\"dweb:/ipfs/QmNrbZnzeUEbfcoamdexJsni1jUFbDMend8kjausHnpBSL\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]},\"erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x55e6863d273b676d65797fee7aac1b520848a0e31c0dd2e5a29887457043b7a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8477b7c9788e36787f79ef9b1580c46bdadc13da4c8ef85ce82d42a754743\",\"dweb:/ipfs/QmQvqKtF8YyJKqpEiNh1KkeC1Q5JmvEkQmP2ZCPYSW72BS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at `_startTokenId()` (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"erc721a/contracts/ERC721A.sol\":3986:4140  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4057  _name */\n  0x02\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4065  _name = name_ */\n  tag_6\n    /* \"erc721a/contracts/ERC721A.sol\":4060:4065  name_ */\n  dup4\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4057  _name */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4065  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4082  _symbol */\n  0x03\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4092  _symbol = symbol_ */\n  tag_8\n    /* \"erc721a/contracts/ERC721A.sol\":4085:4092  symbol_ */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4082  _symbol */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4092  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4332:4339  uint256 */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":4102:4133  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_13:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_14:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_22:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_24\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_26\n  tag_13\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_27:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_28:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_28)\ntag_30:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_31:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_33:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_34:\n    /* \"#utility.yul\":1354:1415   */\n  tag_35\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_14\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_37\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_14\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_15:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_39:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  sub\n    /* \"#utility.yul\":1816:1977   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2114:2659   */\ntag_17:\n    /* \"#utility.yul\":2216:2218   */\n  0x1f\n    /* \"#utility.yul\":2211:2214   */\n  dup3\n    /* \"#utility.yul\":2208:2219   */\n  gt\n    /* \"#utility.yul\":2205:2653   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2252:2253   */\n  0x00\n    /* \"#utility.yul\":2277:2282   */\n  dup2\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2266:2283   */\n  mstore\n    /* \"#utility.yul\":2322:2326   */\n  0x20\n    /* \"#utility.yul\":2318:2320   */\n  dup2\n    /* \"#utility.yul\":2308:2327   */\n  keccak256\n    /* \"#utility.yul\":2392:2394   */\n  0x1f\n    /* \"#utility.yul\":2380:2390   */\n  dup6\n    /* \"#utility.yul\":2376:2395   */\n  add\n    /* \"#utility.yul\":2373:2374   */\n  0x05\n    /* \"#utility.yul\":2369:2396   */\n  shr\n    /* \"#utility.yul\":2363:2367   */\n  dup2\n    /* \"#utility.yul\":2359:2397   */\n  add\n    /* \"#utility.yul\":2428:2432   */\n  0x20\n    /* \"#utility.yul\":2416:2426   */\n  dup7\n    /* \"#utility.yul\":2413:2433   */\n  lt\n    /* \"#utility.yul\":2410:2457   */\n  iszero\n  tag_44\n  jumpi\n  pop\n    /* \"#utility.yul\":2451:2455   */\n  dup1\n    /* \"#utility.yul\":2410:2457   */\ntag_44:\n    /* \"#utility.yul\":2506:2508   */\n  0x1f\n    /* \"#utility.yul\":2501:2504   */\n  dup6\n    /* \"#utility.yul\":2497:2509   */\n  add\n    /* \"#utility.yul\":2494:2495   */\n  0x05\n    /* \"#utility.yul\":2490:2510   */\n  shr\n    /* \"#utility.yul\":2484:2488   */\n  dup3\n    /* \"#utility.yul\":2480:2511   */\n  add\n    /* \"#utility.yul\":2470:2511   */\n  swap2\n  pop\n    /* \"#utility.yul\":2561:2643   */\ntag_45:\n    /* \"#utility.yul\":2579:2581   */\n  dup2\n    /* \"#utility.yul\":2572:2577   */\n  dup2\n    /* \"#utility.yul\":2569:2582   */\n  lt\n    /* \"#utility.yul\":2561:2643   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2624:2641   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2605:2606   */\n  0x01\n    /* \"#utility.yul\":2594:2607   */\n  add\n    /* \"#utility.yul\":2561:2643   */\n  jump(tag_45)\ntag_47:\n    /* \"#utility.yul\":2565:2568   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2205:2653   */\ntag_43:\n    /* \"#utility.yul\":2114:2659   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2835:4187   */\ntag_7:\n    /* \"#utility.yul\":2955:2965   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2977:3007   */\n  dup2\n  gt\n    /* \"#utility.yul\":2974:3030   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3010:3028   */\n  tag_51\n  tag_13\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":3039:3136   */\n  tag_52\n    /* \"#utility.yul\":3129:3135   */\n  dup2\n    /* \"#utility.yul\":3089:3127   */\n  tag_53\n    /* \"#utility.yul\":3121:3125   */\n  dup5\n    /* \"#utility.yul\":3115:3126   */\n  sload\n    /* \"#utility.yul\":3089:3127   */\n  tag_15\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":3083:3087   */\n  dup5\n    /* \"#utility.yul\":3039:3136   */\n  tag_17\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":3191:3195   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3255:3257   */\n  0x1f\n    /* \"#utility.yul\":3244:3258   */\n  dup4\n  gt\n    /* \"#utility.yul\":3272:3273   */\n  0x01\n    /* \"#utility.yul\":3267:3930   */\n  dup2\n  eq\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3991:3997   */\n  dup5\n    /* \"#utility.yul\":3988:4077   */\n  iszero\n  tag_56\n  jumpi\n  pop\n    /* \"#utility.yul\":4043:4062   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4037:4063   */\n  mload\n    /* \"#utility.yul\":3988:4077   */\ntag_56:\n  not(0x00)\n    /* \"#utility.yul\":2792:2793   */\n  0x03\n    /* \"#utility.yul\":2788:2799   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2784:2808   */\n  shr\n    /* \"#utility.yul\":2780:2809   */\n  not\n    /* \"#utility.yul\":2770:2810   */\n  and\n    /* \"#utility.yul\":2816:2817   */\n  0x01\n    /* \"#utility.yul\":2812:2823   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2767:2824   */\n  or\n    /* \"#utility.yul\":4090:4171   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3237:4181   */\n  jump(tag_47)\n    /* \"#utility.yul\":3267:3930   */\ntag_55:\n    /* \"#utility.yul\":2061:2062   */\n  0x00\n    /* \"#utility.yul\":2054:2068   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2098:2102   */\n  0x20\n    /* \"#utility.yul\":2085:2103   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3303:3323   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3421:3657   */\ntag_59:\n    /* \"#utility.yul\":3435:3442   */\n  dup3\n    /* \"#utility.yul\":3432:3433   */\n  dup2\n    /* \"#utility.yul\":3429:3443   */\n  lt\n    /* \"#utility.yul\":3421:3657   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3524:3543   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3518:3544   */\n  mload\n    /* \"#utility.yul\":3503:3545   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3616:3643   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3584:3585   */\n  0x01\n    /* \"#utility.yul\":3572:3586   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3451:3470   */\n  dup5\n  add\n    /* \"#utility.yul\":3421:3657   */\n  jump(tag_59)\ntag_61:\n    /* \"#utility.yul\":3425:3428   */\n  pop\n    /* \"#utility.yul\":3685:3691   */\n  dup6\n    /* \"#utility.yul\":3676:3683   */\n  dup3\n    /* \"#utility.yul\":3673:3692   */\n  lt\n    /* \"#utility.yul\":3670:3871   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":3746:3765   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3740:3766   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3829:3830   */\n  0x03\n    /* \"#utility.yul\":3825:3839   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3841:3844   */\n  0xf8\n    /* \"#utility.yul\":3821:3845   */\n  and\n    /* \"#utility.yul\":3817:3854   */\n  shr\n    /* \"#utility.yul\":3813:3855   */\n  not\n    /* \"#utility.yul\":3798:3856   */\n  and\n    /* \"#utility.yul\":3783:3857   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3670:3871   */\ntag_62:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3917:3918   */\n  0x01\n    /* \"#utility.yul\":3901:3915   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3897:3919   */\n  add\n    /* \"#utility.yul\":3884:3920   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2835:4187   */\n  jump\t// out\ntag_19:\n    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1692:1724   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1674:1725   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1647:1665   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1528:1731   */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n        /* \"erc721a/contracts/ERC721A.sol\":4998:5010  _burnCounter */\n      sload(0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":4789:4796  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":4982:4995  _currentIndex */\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5010  _currentIndex - _burnCounter */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":2319:2344   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2307:2309   */\n      0x20\n        /* \"#utility.yul\":2292:2310   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":2173:2350   */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_8:\n      tag_36\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_9:\n      tag_36\n      tag_49\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_10:\n      tag_30\n      tag_52\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_11:\n      tag_40\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_26\n      tag_61\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      tag_36\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_14:\n      tag_36\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_26\n      tag_72\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_20\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13781:13785  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13822  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13839  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"erc721a/contracts/ERC721A.sol\":5738:5742  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6058  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_81\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6134  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_81:\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_82\n      jumpi\n      pop\n      shl(0xe0, 0x5b5e139f)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6210  interfaceId == 0x5b5e139f */\n      dup4\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_82:\n        /* \"erc721a/contracts/ERC721A.sol\":6014:6210  return... */\n      swap3\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"erc721a/contracts/ERC721A.sol\":11215:11228  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11247:11252  _name */\n      0x02\n        /* \"erc721a/contracts/ERC721A.sol\":11240:11252  return _name */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_88\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_87)\n    tag_88:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_89:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_89\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_33:\n        /* \"erc721a/contracts/ERC721A.sol\":13116:13123  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      tag_91\n        /* \"erc721a/contracts/ERC721A.sol\":13148:13155  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13147  _exists */\n      tag_92\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_93\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13165:13199  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_93:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13232  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_39:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12696  address owner */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      tag_95\n        /* \"erc721a/contracts/ERC721A.sol\":12707:12714  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12706  ownerOf */\n      tag_53\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      jump\t// in\n    tag_95:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12715  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12758  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":12726:12898  if (_msgSenderERC721A() != owner)... */\n      tag_101\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_99\n        /* \"erc721a/contracts/ERC721A.sol\":12794:12799  owner */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_76\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_99:\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_101\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12848:12883  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_101:\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12923  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12937  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":12673:12987  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_47:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22211  uint256 prevOwnershipPacked */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      tag_106\n        /* \"erc721a/contracts/ERC721A.sol\":22233:22240  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22232  _packedOwnershipOf */\n      tag_107\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22241  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22297:22301  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22272:22291  prevOwnershipPacked */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_108\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22310:22338  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_108:\n        /* \"erc721a/contracts/ERC721A.sol\":22350:22377  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20821:20842  mstore(0x00, tokenId) */\n      dup3\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20652:20667  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":20862:20866  0x20 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":20855:20891  mstore(0x20, tokenApprovalsPtr.slot) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20943:20947  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":20927:20948  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":21031:21057  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":21766:21796  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":21468:21494  and(from, BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21745:21764  eq(msgSender, from) */\n      swap1\n      swap2\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":21742:21797  or(eq(msgSender, from), eq(msgSender, approvedAddress)) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":22526:22699  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_117\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_115\n        /* \"erc721a/contracts/ERC721A.sol\":22629:22633  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_76\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_115:\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_117\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22664:22699  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22730  to == address(0) */\n      dup6\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_118\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22739:22762  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_118:\n        /* \"erc721a/contracts/ERC721A.sol\":22905:22920  approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":23043:23044  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23022:23041  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":23015:23045  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23447  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23427:23453  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23519  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23495:23519  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":10863:10874  timestamp() */\n      timestamp\n        /* \"erc721a/contracts/ERC721A.sol\":10839:10861  BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":10835:10875  shl(BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":10822:10884  or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23800  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23954  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24117  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24122  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_126\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24174:24175  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":24164:24175  tokenId + 1 */\n      dup5\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":24142:24161  uint256 nextTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24312  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24330  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":24291:24669  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_128\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24431:24444  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24427  nextTokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24444  nextTokenId != _currentIndex */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n      tag_128\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24593  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24628  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n    tag_128:\n        /* \"erc721a/contracts/ERC721A.sol\":24124:24683  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_126:\n        /* \"erc721a/contracts/ERC721A.sol\":24727:24734  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24723:24725  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24717:24721  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":22174:24794  {... */\n      pop\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_50:\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      tag_132\n        /* \"erc721a/contracts/ERC721A.sol\":14062:14066  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14068:14070  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14072:14079  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14061  safeTransferFrom */\n      tag_70\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_132:\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_53:\n        /* \"erc721a/contracts/ERC721A.sol\":11021:11028  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      tag_82\n        /* \"erc721a/contracts/ERC721A.sol\":11082:11089  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11081  _packedOwnershipOf */\n      tag_107\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_58:\n        /* \"erc721a/contracts/ERC721A.sol\":6383:6390  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6425  owner == address(0) */\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_136\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":6434:6462  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_136:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6497  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":1022:1035  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6533  _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_61:\n        /* \"erc721a/contracts/ERC721A.sol\":11379:11392  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11411:11418  _symbol */\n      0x03\n        /* \"erc721a/contracts/ERC721A.sol\":11404:11418  return _symbol */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_66:\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13444  operator == _msgSenderERC721A() */\n      dup4\n      and\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n      tag_145\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13453:13470  ApproveToCaller() */\n      mload(0x40)\n      shl(0xe0, 0xb06307db)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n    tag_145:\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13499  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13541  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      swap2\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_70:\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      tag_150\n        /* \"erc721a/contracts/ERC721A.sol\":14331:14335  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14337:14339  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14341:14348  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14330  transferFrom */\n      tag_47\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14377  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14382  to.code.length != 0 */\n      iszero\n        /* \"erc721a/contracts/ERC721A.sol\":14359:14539  if (to.code.length != 0)... */\n      tag_154\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_152\n        /* \"erc721a/contracts/ERC721A.sol\":14432:14436  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14438:14440  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14442:14449  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14451:14456  _data */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14431  _checkContractOnERC721Received */\n      tag_153\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_152:\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_154\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14484:14524  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_154:\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"erc721a/contracts/ERC721A.sol\":11564:11577  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11610  _exists(tokenId) */\n      tag_156\n        /* \"erc721a/contracts/ERC721A.sol\":11602:11609  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11601  _exists */\n      tag_92\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11610  _exists(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"erc721a/contracts/ERC721A.sol\":11589:11648  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_157\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":11619:11648  URIQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe4, 0x0a14c4b5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":11589:11648  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_157:\n        /* \"erc721a/contracts/ERC721A.sol\":11659:11680  string memory baseURI */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11693  _baseURI() */\n      tag_158\n        /* \"erc721a/contracts/ERC721A.sol\":12125:12134  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":12049:12141  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11693  _baseURI() */\n    tag_158:\n        /* \"erc721a/contracts/ERC721A.sol\":11659:11693  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11716:11723  baseURI */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11731  bytes(baseURI).length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":11735:11736  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11736  bytes(baseURI).length != 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11797  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_160\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_161)\n    tag_160:\n        /* \"erc721a/contracts/ERC721A.sol\":11763:11770  baseURI */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11790  _toString(tokenId) */\n      tag_162\n        /* \"erc721a/contracts/ERC721A.sol\":11782:11789  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11781  _toString */\n      tag_163\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11790  _toString(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"erc721a/contracts/ERC721A.sol\":11746:11791  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_164\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11797  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_161:\n        /* \"erc721a/contracts/ERC721A.sol\":11703:11797  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_92:\n        /* \"erc721a/contracts/ERC721A.sol\":14848:14852  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":14935:14948  _currentIndex */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14932  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14948  tokenId < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":14883:15033  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_82\n      jumpi\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15002  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15028  _packedOwnerships[tokenId] & BITMASK_BURNED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15033  _packedOwnerships[tokenId] & BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":7949:9054  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_107:\n        /* \"erc721a/contracts/ERC721A.sol\":8016:8023  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8050:8057  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8148:8161  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8145  curr */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8161  curr < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8185:8199  uint256 packed */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8219  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n      shl(0xe0, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8312  packed & BITMASK_BURNED */\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8317  packed & BITMASK_BURNED == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n      tag_177\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n    tag_178:\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8813  packed */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8817:8818  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8818  packed == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      tag_161\n      jumpi\n      pop\n      not(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":8877:8883  --curr */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8876  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      jump(tag_178)\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n    tag_177:\n        /* \"erc721a/contracts/ERC721A.sol\":8163:8990  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n    tag_176:\n        /* \"erc721a/contracts/ERC721A.sol\":9016:9047  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n    tag_153:\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":28807:28811  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28872  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_190\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28894:28898  from */\n      dup10\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28900:28907  tokenId */\n      dup9\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28909:28914  _data */\n      dup9\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_191\n      jump\t// in\n    tag_190:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_193\n      swap2\n      dup2\n      add\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x01\n    tag_192:\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_195\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_200\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_199)\n    tag_200:\n      0x60\n      swap2\n      pop\n    tag_199:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29111  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29118  reason.length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29122:29123  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29123  reason.length == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n      tag_201\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":29150:29190  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n    tag_201:\n        /* \"erc721a/contracts/ERC721A.sol\":29290:29296  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":29284:29297  mload(reason) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29275:29281  reason */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29271:29273  32 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":29267:29282  add(32, reason) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":29260:29298  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_195:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":28983:29047  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":33078:34998  function _toString(uint256 value) internal pure returns (string memory ptr) {... */\n    tag_163:\n        /* \"erc721a/contracts/ERC721A.sol\":33541:33545  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":33535:33546  mload(0x40) */\n      dup1\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":33548:33551  128 */\n      0x80\n        /* \"erc721a/contracts/ERC721A.sol\":33531:33552  add(mload(0x40), 128) */\n      dup2\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":33624:33641  mstore(0x40, ptr) */\n      swap2\n      dup3\n      swap1\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":34307:34318  sub(ptr, 1) */\n      0x7f\n      add\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":34188:34193  value */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":34437:34439  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":34451:34453  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34441:34454  mod(temp, 10) */\n      dup3\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":34433:34455  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34307:34318  sub(ptr, 1) */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34420:34456  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":34491:34493  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34481:34494  div(temp, 10) */\n      swap1\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n    tag_206:\n        /* \"erc721a/contracts/ERC721A.sol\":34509:34513  temp */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":34695:34696  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":34690:34693  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34686:34697  sub(ptr, 1) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34679:34697  ptr := sub(ptr, 1) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34745:34747  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34739:34743  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34735:34748  mod(temp, 10) */\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":34731:34733  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":34727:34749  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34722:34725  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34714:34750  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":34602:34604  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34592:34605  div(temp, 10) */\n      swap1\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n      jump(tag_206)\n    tag_208:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34792:34805  sub(end, ptr) */\n      dup2\n      swap1\n      sub\n      not(0x1f)\n        /* \"erc721a/contracts/ERC721A.sol\":34905:34917  sub(ptr, 32) */\n      swap1\n      swap2\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34963:34982  mstore(ptr, length) */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":34905:34917  sub(ptr, 32) */\n      swap2\n        /* \"erc721a/contracts/ERC721A.sol\":33078:34998  function _toString(uint256 value) internal pure returns (string memory ptr) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_210:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":68:139   */\n    tag_217:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:395   */\n    tag_22:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_219:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_161\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_210\n      jump\t// in\n        /* \"#utility.yul\":592:850   */\n    tag_211:\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":674:787   */\n    tag_223:\n        /* \"#utility.yul\":688:694   */\n      dup4\n        /* \"#utility.yul\":685:686   */\n      dup2\n        /* \"#utility.yul\":682:695   */\n      lt\n        /* \"#utility.yul\":674:787   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":764:775   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":758:776   */\n      mload\n        /* \"#utility.yul\":745:756   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":738:777   */\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x20\n        /* \"#utility.yul\":703:713   */\n      add\n        /* \"#utility.yul\":674:787   */\n      jump(tag_223)\n    tag_225:\n        /* \"#utility.yul\":805:811   */\n      dup4\n        /* \"#utility.yul\":802:803   */\n      dup2\n        /* \"#utility.yul\":799:812   */\n      gt\n        /* \"#utility.yul\":796:844   */\n      iszero\n      tag_154\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":822:838   */\n      swap2\n      add\n        /* \"#utility.yul\":815:842   */\n      mstore\n        /* \"#utility.yul\":592:850   */\n      jump\t// out\n        /* \"#utility.yul\":855:1113   */\n    tag_212:\n        /* \"#utility.yul\":897:900   */\n      0x00\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":929:941   */\n      mload\n        /* \"#utility.yul\":962:968   */\n      dup1\n        /* \"#utility.yul\":957:960   */\n      dup5\n        /* \"#utility.yul\":950:969   */\n      mstore\n        /* \"#utility.yul\":978:1041   */\n      tag_228\n        /* \"#utility.yul\":1034:1040   */\n      dup2\n        /* \"#utility.yul\":1027:1031   */\n      0x20\n        /* \"#utility.yul\":1022:1025   */\n      dup7\n        /* \"#utility.yul\":1018:1032   */\n      add\n        /* \"#utility.yul\":1011:1015   */\n      0x20\n        /* \"#utility.yul\":1004:1009   */\n      dup7\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":978:1041   */\n      tag_211\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1095:1097   */\n      0x1f\n        /* \"#utility.yul\":1074:1089   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1070:1099   */\n      and\n        /* \"#utility.yul\":1061:1100   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1102:1106   */\n      0x20\n        /* \"#utility.yul\":1057:1107   */\n      add\n      swap3\n        /* \"#utility.yul\":855:1113   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1338   */\n    tag_29:\n        /* \"#utility.yul\":1267:1269   */\n      0x20\n        /* \"#utility.yul\":1256:1265   */\n      dup2\n        /* \"#utility.yul\":1249:1270   */\n      mstore\n        /* \"#utility.yul\":1230:1234   */\n      0x00\n        /* \"#utility.yul\":1287:1332   */\n      tag_161\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1317:1326   */\n      dup4\n        /* \"#utility.yul\":1313:1331   */\n      add\n        /* \"#utility.yul\":1305:1311   */\n      dup5\n        /* \"#utility.yul\":1287:1332   */\n      tag_212\n      jump\t// in\n        /* \"#utility.yul\":1343:1523   */\n    tag_32:\n        /* \"#utility.yul\":1402:1408   */\n      0x00\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1443:1452   */\n      dup3\n        /* \"#utility.yul\":1434:1441   */\n      dup5\n        /* \"#utility.yul\":1430:1453   */\n      sub\n        /* \"#utility.yul\":1426:1458   */\n      slt\n        /* \"#utility.yul\":1423:1475   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1468:1469   */\n      dup1\n        /* \"#utility.yul\":1461:1473   */\n      revert\n        /* \"#utility.yul\":1423:1475   */\n    tag_232:\n      pop\n        /* \"#utility.yul\":1494:1517   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1343:1523   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:1909   */\n    tag_213:\n        /* \"#utility.yul\":1804:1824   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1853:1884   */\n      dup2\n      and\n        /* \"#utility.yul\":1843:1885   */\n      dup2\n      eq\n        /* \"#utility.yul\":1833:1903   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1896:1897   */\n      dup1\n        /* \"#utility.yul\":1889:1901   */\n      revert\n        /* \"#utility.yul\":1833:1903   */\n    tag_235:\n        /* \"#utility.yul\":1736:1909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1914:2168   */\n    tag_38:\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":1990:1996   */\n      dup1\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2022:2029   */\n      dup6\n        /* \"#utility.yul\":2018:2041   */\n      sub\n        /* \"#utility.yul\":2014:2046   */\n      slt\n        /* \"#utility.yul\":2011:2063   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2056:2057   */\n      dup1\n        /* \"#utility.yul\":2049:2061   */\n      revert\n        /* \"#utility.yul\":2011:2063   */\n    tag_237:\n        /* \"#utility.yul\":2082:2111   */\n      tag_238\n        /* \"#utility.yul\":2101:2110   */\n      dup4\n        /* \"#utility.yul\":2082:2111   */\n      tag_213\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2072:2111   */\n      swap5\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2143:2161   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2130:2162   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1914:2168   */\n      jump\t// out\n        /* \"#utility.yul\":2355:2683   */\n    tag_46:\n        /* \"#utility.yul\":2432:2438   */\n      0x00\n        /* \"#utility.yul\":2440:2446   */\n      dup1\n        /* \"#utility.yul\":2448:2454   */\n      0x00\n        /* \"#utility.yul\":2501:2503   */\n      0x60\n        /* \"#utility.yul\":2489:2498   */\n      dup5\n        /* \"#utility.yul\":2480:2487   */\n      dup7\n        /* \"#utility.yul\":2476:2499   */\n      sub\n        /* \"#utility.yul\":2472:2504   */\n      slt\n        /* \"#utility.yul\":2469:2521   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":2517:2518   */\n      0x00\n        /* \"#utility.yul\":2514:2515   */\n      dup1\n        /* \"#utility.yul\":2507:2519   */\n      revert\n        /* \"#utility.yul\":2469:2521   */\n    tag_241:\n        /* \"#utility.yul\":2540:2569   */\n      tag_242\n        /* \"#utility.yul\":2559:2568   */\n      dup5\n        /* \"#utility.yul\":2540:2569   */\n      tag_213\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2530:2569   */\n      swap3\n      pop\n        /* \"#utility.yul\":2588:2626   */\n      tag_243\n        /* \"#utility.yul\":2622:2624   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup6\n        /* \"#utility.yul\":2607:2625   */\n      add\n        /* \"#utility.yul\":2588:2626   */\n      tag_213\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2578:2626   */\n      swap2\n      pop\n        /* \"#utility.yul\":2673:2675   */\n      0x40\n        /* \"#utility.yul\":2662:2671   */\n      dup5\n        /* \"#utility.yul\":2658:2676   */\n      add\n        /* \"#utility.yul\":2645:2677   */\n      calldataload\n        /* \"#utility.yul\":2635:2677   */\n      swap1\n      pop\n        /* \"#utility.yul\":2355:2683   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2688:2874   */\n    tag_57:\n        /* \"#utility.yul\":2747:2753   */\n      0x00\n        /* \"#utility.yul\":2800:2802   */\n      0x20\n        /* \"#utility.yul\":2788:2797   */\n      dup3\n        /* \"#utility.yul\":2779:2786   */\n      dup5\n        /* \"#utility.yul\":2775:2798   */\n      sub\n        /* \"#utility.yul\":2771:2803   */\n      slt\n        /* \"#utility.yul\":2768:2820   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":2816:2817   */\n      0x00\n        /* \"#utility.yul\":2813:2814   */\n      dup1\n        /* \"#utility.yul\":2806:2818   */\n      revert\n        /* \"#utility.yul\":2768:2820   */\n    tag_245:\n        /* \"#utility.yul\":2839:2868   */\n      tag_161\n        /* \"#utility.yul\":2858:2867   */\n      dup3\n        /* \"#utility.yul\":2839:2868   */\n      tag_213\n      jump\t// in\n        /* \"#utility.yul\":2879:3226   */\n    tag_65:\n        /* \"#utility.yul\":2944:2950   */\n      0x00\n        /* \"#utility.yul\":2952:2958   */\n      dup1\n        /* \"#utility.yul\":3005:3007   */\n      0x40\n        /* \"#utility.yul\":2993:3002   */\n      dup4\n        /* \"#utility.yul\":2984:2991   */\n      dup6\n        /* \"#utility.yul\":2980:3003   */\n      sub\n        /* \"#utility.yul\":2976:3008   */\n      slt\n        /* \"#utility.yul\":2973:3025   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":3021:3022   */\n      0x00\n        /* \"#utility.yul\":3018:3019   */\n      dup1\n        /* \"#utility.yul\":3011:3023   */\n      revert\n        /* \"#utility.yul\":2973:3025   */\n    tag_248:\n        /* \"#utility.yul\":3044:3073   */\n      tag_249\n        /* \"#utility.yul\":3063:3072   */\n      dup4\n        /* \"#utility.yul\":3044:3073   */\n      tag_213\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3034:3073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3123:3125   */\n      0x20\n        /* \"#utility.yul\":3112:3121   */\n      dup4\n        /* \"#utility.yul\":3108:3126   */\n      add\n        /* \"#utility.yul\":3095:3127   */\n      calldataload\n        /* \"#utility.yul\":3170:3175   */\n      dup1\n        /* \"#utility.yul\":3163:3176   */\n      iszero\n        /* \"#utility.yul\":3156:3177   */\n      iszero\n        /* \"#utility.yul\":3149:3154   */\n      dup2\n        /* \"#utility.yul\":3146:3178   */\n      eq\n        /* \"#utility.yul\":3136:3196   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":3192:3193   */\n      0x00\n        /* \"#utility.yul\":3189:3190   */\n      dup1\n        /* \"#utility.yul\":3182:3194   */\n      revert\n        /* \"#utility.yul\":3136:3196   */\n    tag_250:\n        /* \"#utility.yul\":3215:3220   */\n      dup1\n        /* \"#utility.yul\":3205:3220   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2879:3226   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3231:3358   */\n    tag_214:\n        /* \"#utility.yul\":3292:3302   */\n      0x4e487b71\n        /* \"#utility.yul\":3287:3290   */\n      0xe0\n        /* \"#utility.yul\":3283:3303   */\n      shl\n        /* \"#utility.yul\":3280:3281   */\n      0x00\n        /* \"#utility.yul\":3273:3304   */\n      mstore\n        /* \"#utility.yul\":3323:3327   */\n      0x41\n        /* \"#utility.yul\":3320:3321   */\n      0x04\n        /* \"#utility.yul\":3313:3328   */\n      mstore\n        /* \"#utility.yul\":3347:3351   */\n      0x24\n        /* \"#utility.yul\":3344:3345   */\n      0x00\n        /* \"#utility.yul\":3337:3352   */\n      revert\n        /* \"#utility.yul\":3363:4501   */\n    tag_69:\n        /* \"#utility.yul\":3458:3464   */\n      0x00\n        /* \"#utility.yul\":3466:3472   */\n      dup1\n        /* \"#utility.yul\":3474:3480   */\n      0x00\n        /* \"#utility.yul\":3482:3488   */\n      dup1\n        /* \"#utility.yul\":3535:3538   */\n      0x80\n        /* \"#utility.yul\":3523:3532   */\n      dup6\n        /* \"#utility.yul\":3514:3521   */\n      dup8\n        /* \"#utility.yul\":3510:3533   */\n      sub\n        /* \"#utility.yul\":3506:3539   */\n      slt\n        /* \"#utility.yul\":3503:3556   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":3552:3553   */\n      0x00\n        /* \"#utility.yul\":3549:3550   */\n      dup1\n        /* \"#utility.yul\":3542:3554   */\n      revert\n        /* \"#utility.yul\":3503:3556   */\n    tag_253:\n        /* \"#utility.yul\":3575:3604   */\n      tag_254\n        /* \"#utility.yul\":3594:3603   */\n      dup6\n        /* \"#utility.yul\":3575:3604   */\n      tag_213\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3565:3604   */\n      swap4\n      pop\n        /* \"#utility.yul\":3623:3661   */\n      tag_255\n        /* \"#utility.yul\":3657:3659   */\n      0x20\n        /* \"#utility.yul\":3646:3655   */\n      dup7\n        /* \"#utility.yul\":3642:3660   */\n      add\n        /* \"#utility.yul\":3623:3661   */\n      tag_213\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3613:3661   */\n      swap3\n      pop\n        /* \"#utility.yul\":3708:3710   */\n      0x40\n        /* \"#utility.yul\":3697:3706   */\n      dup6\n        /* \"#utility.yul\":3693:3711   */\n      add\n        /* \"#utility.yul\":3680:3712   */\n      calldataload\n        /* \"#utility.yul\":3670:3712   */\n      swap2\n      pop\n        /* \"#utility.yul\":3763:3765   */\n      0x60\n        /* \"#utility.yul\":3752:3761   */\n      dup6\n        /* \"#utility.yul\":3748:3766   */\n      add\n        /* \"#utility.yul\":3735:3767   */\n      calldataload\n        /* \"#utility.yul\":3786:3804   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3827:3829   */\n      dup1\n        /* \"#utility.yul\":3819:3825   */\n      dup3\n        /* \"#utility.yul\":3816:3830   */\n      gt\n        /* \"#utility.yul\":3813:3847   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":3843:3844   */\n      0x00\n        /* \"#utility.yul\":3840:3841   */\n      dup1\n        /* \"#utility.yul\":3833:3845   */\n      revert\n        /* \"#utility.yul\":3813:3847   */\n    tag_256:\n        /* \"#utility.yul\":3881:3887   */\n      dup2\n        /* \"#utility.yul\":3870:3879   */\n      dup8\n        /* \"#utility.yul\":3866:3888   */\n      add\n        /* \"#utility.yul\":3856:3888   */\n      swap2\n      pop\n        /* \"#utility.yul\":3926:3933   */\n      dup8\n        /* \"#utility.yul\":3919:3923   */\n      0x1f\n        /* \"#utility.yul\":3915:3917   */\n      dup4\n        /* \"#utility.yul\":3911:3924   */\n      add\n        /* \"#utility.yul\":3907:3934   */\n      slt\n        /* \"#utility.yul\":3897:3952   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3945:3946   */\n      dup1\n        /* \"#utility.yul\":3938:3950   */\n      revert\n        /* \"#utility.yul\":3897:3952   */\n    tag_257:\n        /* \"#utility.yul\":3984:3986   */\n      dup2\n        /* \"#utility.yul\":3971:3987   */\n      calldataload\n        /* \"#utility.yul\":4006:4008   */\n      dup2\n        /* \"#utility.yul\":4002:4004   */\n      dup2\n        /* \"#utility.yul\":3999:4009   */\n      gt\n        /* \"#utility.yul\":3996:4032   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":4012:4030   */\n      tag_259\n      tag_214\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4087:4089   */\n      0x40\n        /* \"#utility.yul\":4081:4090   */\n      mload\n        /* \"#utility.yul\":4055:4057   */\n      0x1f\n        /* \"#utility.yul\":4141:4154   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4137:4159   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4161:4163   */\n      0x3f\n        /* \"#utility.yul\":4133:4164   */\n      add\n        /* \"#utility.yul\":4129:4169   */\n      and\n        /* \"#utility.yul\":4117:4170   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4185:4203   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4205:4227   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4182:4228   */\n      or\n        /* \"#utility.yul\":4179:4251   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":4231:4249   */\n      tag_261\n      tag_214\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4271:4281   */\n      dup2\n        /* \"#utility.yul\":4267:4269   */\n      0x40\n        /* \"#utility.yul\":4260:4282   */\n      mstore\n        /* \"#utility.yul\":4306:4308   */\n      dup3\n        /* \"#utility.yul\":4298:4304   */\n      dup2\n        /* \"#utility.yul\":4291:4309   */\n      mstore\n        /* \"#utility.yul\":4346:4353   */\n      dup11\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4336:4338   */\n      dup5\n        /* \"#utility.yul\":4332:4334   */\n      dup8\n        /* \"#utility.yul\":4328:4339   */\n      add\n        /* \"#utility.yul\":4324:4344   */\n      add\n        /* \"#utility.yul\":4321:4354   */\n      gt\n        /* \"#utility.yul\":4318:4371   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":4367:4368   */\n      0x00\n        /* \"#utility.yul\":4364:4365   */\n      dup1\n        /* \"#utility.yul\":4357:4369   */\n      revert\n        /* \"#utility.yul\":4318:4371   */\n    tag_262:\n        /* \"#utility.yul\":4423:4425   */\n      dup3\n        /* \"#utility.yul\":4418:4420   */\n      0x20\n        /* \"#utility.yul\":4414:4416   */\n      dup7\n        /* \"#utility.yul\":4410:4421   */\n      add\n        /* \"#utility.yul\":4405:4407   */\n      0x20\n        /* \"#utility.yul\":4397:4403   */\n      dup4\n        /* \"#utility.yul\":4393:4408   */\n      add\n        /* \"#utility.yul\":4380:4426   */\n      calldatacopy\n        /* \"#utility.yul\":4468:4469   */\n      0x00\n        /* \"#utility.yul\":4463:4465   */\n      0x20\n        /* \"#utility.yul\":4458:4460   */\n      dup5\n        /* \"#utility.yul\":4450:4456   */\n      dup4\n        /* \"#utility.yul\":4446:4461   */\n      add\n        /* \"#utility.yul\":4442:4466   */\n      add\n        /* \"#utility.yul\":4435:4470   */\n      mstore\n        /* \"#utility.yul\":4489:4495   */\n      dup1\n        /* \"#utility.yul\":4479:4495   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3363:4501   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4506:4766   */\n    tag_77:\n        /* \"#utility.yul\":4574:4580   */\n      0x00\n        /* \"#utility.yul\":4582:4588   */\n      dup1\n        /* \"#utility.yul\":4635:4637   */\n      0x40\n        /* \"#utility.yul\":4623:4632   */\n      dup4\n        /* \"#utility.yul\":4614:4621   */\n      dup6\n        /* \"#utility.yul\":4610:4633   */\n      sub\n        /* \"#utility.yul\":4606:4638   */\n      slt\n        /* \"#utility.yul\":4603:4655   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":4651:4652   */\n      0x00\n        /* \"#utility.yul\":4648:4649   */\n      dup1\n        /* \"#utility.yul\":4641:4653   */\n      revert\n        /* \"#utility.yul\":4603:4655   */\n    tag_264:\n        /* \"#utility.yul\":4674:4703   */\n      tag_265\n        /* \"#utility.yul\":4693:4702   */\n      dup4\n        /* \"#utility.yul\":4674:4703   */\n      tag_213\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4664:4703   */\n      swap2\n      pop\n        /* \"#utility.yul\":4722:4760   */\n      tag_266\n        /* \"#utility.yul\":4756:4758   */\n      0x20\n        /* \"#utility.yul\":4745:4754   */\n      dup5\n        /* \"#utility.yul\":4741:4759   */\n      add\n        /* \"#utility.yul\":4722:4760   */\n      tag_213\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4712:4760   */\n      swap1\n      pop\n        /* \"#utility.yul\":4506:4766   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4771:5151   */\n    tag_85:\n        /* \"#utility.yul\":4850:4851   */\n      0x01\n        /* \"#utility.yul\":4846:4858   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4893:4905   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4914:4975   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":4968:4972   */\n      0x7f\n        /* \"#utility.yul\":4960:4966   */\n      dup3\n        /* \"#utility.yul\":4956:4973   */\n      and\n        /* \"#utility.yul\":4946:4973   */\n      swap2\n      pop\n        /* \"#utility.yul\":4914:4975   */\n    tag_268:\n        /* \"#utility.yul\":5021:5023   */\n      0x20\n        /* \"#utility.yul\":5013:5019   */\n      dup3\n        /* \"#utility.yul\":5010:5024   */\n      lt\n        /* \"#utility.yul\":4990:5008   */\n      dup2\n        /* \"#utility.yul\":4987:5025   */\n      sub\n        /* \"#utility.yul\":4984:5145   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":5067:5077   */\n      0x4e487b71\n        /* \"#utility.yul\":5062:5065   */\n      0xe0\n        /* \"#utility.yul\":5058:5078   */\n      shl\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5048:5079   */\n      mstore\n        /* \"#utility.yul\":5102:5106   */\n      0x22\n        /* \"#utility.yul\":5099:5100   */\n      0x04\n        /* \"#utility.yul\":5092:5107   */\n      mstore\n        /* \"#utility.yul\":5130:5134   */\n      0x24\n        /* \"#utility.yul\":5127:5128   */\n      0x00\n        /* \"#utility.yul\":5120:5135   */\n      revert\n        /* \"#utility.yul\":4984:5145   */\n    tag_269:\n      pop\n        /* \"#utility.yul\":4771:5151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5626   */\n    tag_165:\n        /* \"#utility.yul\":5335:5338   */\n      0x00\n        /* \"#utility.yul\":5373:5379   */\n      dup4\n        /* \"#utility.yul\":5367:5380   */\n      mload\n        /* \"#utility.yul\":5389:5442   */\n      tag_271\n        /* \"#utility.yul\":5435:5441   */\n      dup2\n        /* \"#utility.yul\":5430:5433   */\n      dup5\n        /* \"#utility.yul\":5423:5427   */\n      0x20\n        /* \"#utility.yul\":5415:5421   */\n      dup9\n        /* \"#utility.yul\":5411:5428   */\n      add\n        /* \"#utility.yul\":5389:5442   */\n      tag_211\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5505:5518   */\n      dup4\n      mload\n        /* \"#utility.yul\":5464:5480   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":5527:5584   */\n      tag_272\n        /* \"#utility.yul\":5505:5518   */\n      dup2\n        /* \"#utility.yul\":5464:5480   */\n      dup4\n        /* \"#utility.yul\":5561:5565   */\n      0x20\n        /* \"#utility.yul\":5549:5566   */\n      dup9\n      add\n        /* \"#utility.yul\":5527:5584   */\n      tag_211\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5600:5620   */\n      add\n      swap5\n        /* \"#utility.yul\":5156:5626   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5631:6120   */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5900:5915   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":5882:5916   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5952:5967   */\n      dup5\n      and\n        /* \"#utility.yul\":5947:5949   */\n      0x20\n        /* \"#utility.yul\":5932:5950   */\n      dup3\n      add\n        /* \"#utility.yul\":5925:5968   */\n      mstore\n        /* \"#utility.yul\":5999:6001   */\n      0x40\n        /* \"#utility.yul\":5984:6002   */\n      dup2\n      add\n        /* \"#utility.yul\":5977:6011   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6047:6050   */\n      0x80\n        /* \"#utility.yul\":6042:6044   */\n      0x60\n        /* \"#utility.yul\":6027:6045   */\n      dup3\n      add\n        /* \"#utility.yul\":6020:6051   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5825:5829   */\n      0x00\n      swap1\n        /* \"#utility.yul\":6068:6114   */\n      tag_274\n      swap1\n        /* \"#utility.yul\":6094:6113   */\n      dup4\n      add\n        /* \"#utility.yul\":6086:6092   */\n      dup5\n        /* \"#utility.yul\":6068:6114   */\n      tag_212\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":6060:6114   */\n      swap7\n        /* \"#utility.yul\":5631:6120   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6125:6374   */\n    tag_194:\n        /* \"#utility.yul\":6194:6200   */\n      0x00\n        /* \"#utility.yul\":6247:6249   */\n      0x20\n        /* \"#utility.yul\":6235:6244   */\n      dup3\n        /* \"#utility.yul\":6226:6233   */\n      dup5\n        /* \"#utility.yul\":6222:6245   */\n      sub\n        /* \"#utility.yul\":6218:6250   */\n      slt\n        /* \"#utility.yul\":6215:6267   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":6263:6264   */\n      0x00\n        /* \"#utility.yul\":6260:6261   */\n      dup1\n        /* \"#utility.yul\":6253:6265   */\n      revert\n        /* \"#utility.yul\":6215:6267   */\n    tag_276:\n        /* \"#utility.yul\":6295:6304   */\n      dup2\n        /* \"#utility.yul\":6289:6305   */\n      mload\n        /* \"#utility.yul\":6314:6344   */\n      tag_161\n        /* \"#utility.yul\":6338:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_210\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220113b81d1a5a20c7fe0271c8de1004c0e4d3861dd04dc4ef941abcd61c7145f4b64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_201": {
									"entryPoint": null,
									"id": 201,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 94,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4189:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:6"
															},
															"nodeType": "YulIf",
															"src": "220:55:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:6"
															},
															"nodeType": "YulIf",
															"src": "353:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:6"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:6"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:6"
															},
															"nodeType": "YulIf",
															"src": "536:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:6"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:6"
															},
															"nodeType": "YulIf",
															"src": "698:53:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:6"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:6"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:6"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:6",
																"statements": []
															},
															"src": "779:133:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:6"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:6"
															},
															"nodeType": "YulIf",
															"src": "921:80:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:6",
														"type": ""
													}
												],
												"src": "146:885:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:6"
															},
															"nodeType": "YulIf",
															"src": "1164:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:6"
															},
															"nodeType": "YulIf",
															"src": "1301:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:6"
															},
															"nodeType": "YulIf",
															"src": "1474:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:6",
														"type": ""
													}
												],
												"src": "1036:562:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:6"
															},
															"nodeType": "YulIf",
															"src": "1746:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:6"
															},
															"nodeType": "YulIf",
															"src": "1816:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:6",
														"type": ""
													}
												],
												"src": "1603:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2044:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2064:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2054:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2095:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2085:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2027:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2035:4:6",
														"type": ""
													}
												],
												"src": "1988:121:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2195:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2228:425:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2242:11:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2252:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2246:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2277:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2266:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2266:17:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2266:17:6"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2296:31:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2318:2:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2322:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2308:9:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2308:19:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2300:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2340:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2363:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2373:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2380:10:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2392:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2376:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2376:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2369:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2369:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2359:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2359:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2344:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2434:23:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2436:19:6",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2451:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2436:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2416:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2428:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2413:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2413:20:6"
																		},
																		"nodeType": "YulIf",
																		"src": "2410:47:6"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2470:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2484:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2494:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2501:3:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2506:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2497:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2497:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2490:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2490:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2480:31:6"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2474:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2524:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2537:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2528:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2622:21:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2631:5:6"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2638:2:6"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2624:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2624:17:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2624:17:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2572:5:6"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2579:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2569:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2569:13:6"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2583:26:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2585:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2598:5:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2605:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2594:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2594:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2585:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2565:3:6",
																			"statements": []
																		},
																		"src": "2561:82:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2211:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2208:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2208:11:6"
															},
															"nodeType": "YulIf",
															"src": "2205:448:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2167:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2174:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2179:10:6",
														"type": ""
													}
												],
												"src": "2114:545:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2749:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2759:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2774:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2792:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2795:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2788:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2788:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2805:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2801:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2801:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2784:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2784:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2780:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2780:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2816:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2819:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2767:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2767:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2759:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2726:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2732:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2740:4:6",
														"type": ""
													}
												],
												"src": "2664:166:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:1256:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2941:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2961:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2955:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2945:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3008:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3010:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3010:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3010:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2980:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2996:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3000:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2992:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2992:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3004:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2988:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2977:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2977:30:6"
															},
															"nodeType": "YulIf",
															"src": "2974:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3083:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3121:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3115:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3115:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3089:25:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:38:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3129:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3039:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:97:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3039:97:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3145:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3162:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3149:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3172:23:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3191:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3176:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3204:24:6",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3217:11:6"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3204:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3274:656:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3288:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3307:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3319:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3315:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3315:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3303:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3303:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3292:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3336:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3380:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3350:29:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3350:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3340:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3398:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3407:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3402:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3485:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3510:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3528:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3533:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3524:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3524:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3518:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3518:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3503:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3503:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3503:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3562:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3576:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3584:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3572:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3572:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3562:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3603:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3620:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3631:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3616:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3616:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3603:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3432:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3435:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3429:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3429:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3444:28:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3446:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3455:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3458:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3451:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3451:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3446:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3425:3:6",
																					"statements": []
																				},
																				"src": "3421:236:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3705:166:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3723:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3750:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3755:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3746:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3746:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3740:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3740:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3727:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3790:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3802:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3829:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3832:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3825:3:6"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3825:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3841:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3821:3:6"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3821:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3851:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3847:3:6"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3847:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3817:3:6"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3817:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3813:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3813:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3798:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3798:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3783:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3783:74:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3783:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3676:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3685:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3673:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3673:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "3670:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3891:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3905:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3908:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3901:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3901:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3917:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3897:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3897:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3884:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3884:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3884:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3267:663:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3272:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3947:234:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3961:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3974:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3965:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4010:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4028:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4047:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4052:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4043:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4043:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4037:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4037:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4028:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3991:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "3988:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4097:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4156:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4163:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4103:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4103:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4090:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4090:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4090:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3939:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3247:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3255:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3244:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3244:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "3237:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2916:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2922:3:6",
														"type": ""
													}
												],
												"src": "2835:1352:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x101D CODESIZE SUB DUP1 PUSH3 0x101D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x12B JUMP JUMPDEST PUSH1 0x2 PUSH3 0x42 DUP4 DUP3 PUSH3 0x224 JUMP JUMPDEST POP PUSH1 0x3 PUSH3 0x51 DUP3 DUP3 PUSH3 0x224 JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SSTORE POP PUSH3 0x2F0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xA3 JUMPI PUSH3 0xA3 PUSH3 0x5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCE JUMPI PUSH3 0xCE PUSH3 0x5E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10F JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xF0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x121 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x165 DUP7 DUP4 DUP8 ADD PUSH3 0x74 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x18B DUP6 DUP3 DUP7 ADD PUSH3 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x21F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1FA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x21B JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x206 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x240 JUMPI PUSH3 0x240 PUSH3 0x5E JUMP JUMPDEST PUSH3 0x258 DUP2 PUSH3 0x251 DUP5 SLOAD PUSH3 0x195 JUMP JUMPDEST DUP5 PUSH3 0x1D1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x290 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x277 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x21B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2C1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2A0 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2E0 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD1D DUP1 PUSH3 0x300 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x625 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x27C JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x297 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC24 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xC24 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP3 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x5CB JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x3B7 JUMPI PUSH2 0x39A DUP2 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E DUP3 PUSH2 0x7CB JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x49E JUMPI PUSH2 0x481 DUP7 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x562 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x560 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x560 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5C6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297 DUP3 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC24 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06307DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6D4 DUP5 DUP5 DUP5 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x70D JUMPI PUSH2 0x6F0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x71E DUP3 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x73B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x752 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x79D JUMP JUMPDEST DUP1 PUSH2 0x77C DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78D SWAP3 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x297 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0x817 JUMPI JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x79D JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7F6 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x867 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8A2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x89F SWAP2 DUP2 ADD SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x900 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x8D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x7F ADD SWAP1 DUP3 PUSH1 0x30 PUSH1 0xA DUP3 MOD ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV JUMPDEST DUP1 ISZERO PUSH2 0x95A JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV PUSH2 0x93C JUMP JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x79D DUP2 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9BD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9A5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x70D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x9E6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x79D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA5E DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8A DUP5 PUSH2 0xA26 JUMP JUMPDEST SWAP3 POP PUSH2 0xA98 PUSH1 0x20 DUP6 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79D DUP3 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xADF DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB34 DUP6 PUSH2 0xA26 JUMP JUMPDEST SWAP4 POP PUSH2 0xB42 PUSH1 0x20 DUP7 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB8C JUMPI PUSH2 0xB8C PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0xAFF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xBCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0D DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH2 0xC1B PUSH1 0x20 DUP5 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC38 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC58 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xC70 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x9A2 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xC84 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x9A2 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xCC0 SWAP1 DUP4 ADD DUP5 PUSH2 0x9CE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x79D DUP2 PUSH2 0x96C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT EXTCODESIZE DUP2 0xD1 0xA5 LOG2 0xC PUSH32 0xE0271C8DE1004C0E4D3861DD04DC4EF941ABCD61C7145F4B64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "885:34115:1:-:0;;;3986:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4052:5;:13;4060:5;4052;:13;:::i;:::-;-1:-1:-1;4075:7:1;:17;4085:7;4075;:17;:::i;:::-;-1:-1:-1;;4332:7:1;4102:31;;-1:-1:-1;885:34115:1;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:6;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:6;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:6:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:6;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;2114:545::-;2216:2;2211:3;2208:11;2205:448;;;2252:1;2277:5;2273:2;2266:17;2322:4;2318:2;2308:19;2392:2;2380:10;2376:19;2373:1;2369:27;2363:4;2359:38;2428:4;2416:10;2413:20;2410:47;;;-1:-1:-1;2451:4:6;2410:47;2506:2;2501:3;2497:12;2494:1;2490:20;2484:4;2480:31;2470:41;;2561:82;2579:2;2572:5;2569:13;2561:82;;;2624:17;;;2605:1;2594:13;2561:82;;;2565:3;;;2205:448;2114:545;;;:::o;2835:1352::-;2955:10;;-1:-1:-1;;;;;2977:30:6;;2974:56;;;3010:18;;:::i;:::-;3039:97;3129:6;3089:38;3121:4;3115:11;3089:38;:::i;:::-;3083:4;3039:97;:::i;:::-;3191:4;;3255:2;3244:14;;3272:1;3267:663;;;;3974:1;3991:6;3988:89;;;-1:-1:-1;4043:19:6;;;4037:26;3988:89;-1:-1:-1;;2792:1:6;2788:11;;;2784:24;2780:29;2770:40;2816:1;2812:11;;;2767:57;4090:81;;3237:944;;3267:663;2061:1;2054:14;;;2098:4;2085:18;;-1:-1:-1;;3303:20:6;;;3421:236;3435:7;3432:1;3429:14;3421:236;;;3524:19;;;3518:26;3503:42;;3616:27;;;;3584:1;3572:14;;;;3451:19;;3421:236;;;3425:3;3685:6;3676:7;3673:19;3670:201;;;3746:19;;;3740:26;-1:-1:-1;;3829:1:6;3825:14;;;3841:3;3821:24;3817:37;3813:42;3798:58;3783:74;;3670:201;-1:-1:-1;;;;;3917:1:6;3901:14;;;3897:22;3884:36;;-1:-1:-1;2835:1352:6:o;:::-;885:34115:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1679": {
									"entryPoint": null,
									"id": 1679,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_653": {
									"entryPoint": null,
									"id": 653,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1666": {
									"entryPoint": null,
									"id": 1666,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1563": {
									"entryPoint": 2098,
									"id": 1563,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_864": {
									"entryPoint": 1956,
									"id": 864,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1653": {
									"entryPoint": null,
									"id": 1653,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedAddress_1185": {
									"entryPoint": null,
									"id": 1185,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isOwnerOrApproved_1199": {
									"entryPoint": null,
									"id": 1199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_1689": {
									"entryPoint": null,
									"id": 1689,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1640": {
									"entryPoint": null,
									"id": 1640,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_561": {
									"entryPoint": null,
									"id": 561,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_441": {
									"entryPoint": 1995,
									"id": 441,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_201": {
									"entryPoint": null,
									"id": 201,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1699": {
									"entryPoint": 2333,
									"id": 1699,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_707": {
									"entryPoint": 883,
									"id": 707,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_296": {
									"entryPoint": 1494,
									"id": 296,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_729": {
									"entryPoint": 815,
									"id": 729,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_781": {
									"entryPoint": null,
									"id": 781,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_591": {
									"entryPoint": 669,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_581": {
									"entryPoint": 1483,
									"id": 581,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_800": {
									"entryPoint": 1451,
									"id": 800,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_838": {
									"entryPoint": 1737,
									"id": 838,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_763": {
									"entryPoint": 1588,
									"id": 763,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_270": {
									"entryPoint": 587,
									"id": 270,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_601": {
									"entryPoint": 1573,
									"id": 601,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_644": {
									"entryPoint": 1811,
									"id": 644,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_226": {
									"entryPoint": null,
									"id": 226,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1344": {
									"entryPoint": 1043,
									"id": 1344,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 2837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 2510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3166,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 2466,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2815,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 2412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6376:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:6",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:6",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:6"
															},
															"nodeType": "YulIf",
															"src": "68:71:6"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:6",
														"type": ""
													}
												],
												"src": "14:131:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:6"
															},
															"nodeType": "YulIf",
															"src": "229:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:6",
														"type": ""
													}
												],
												"src": "150:245:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:6",
														"type": ""
													}
												],
												"src": "400:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "645:205:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "664:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "659:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "724:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "754:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "745:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "745:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "768:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "773:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "764:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "764:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "758:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "685:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "688:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "682:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "696:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "698:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "707:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "703:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "698:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "678:3:6",
																"statements": []
															},
															"src": "674:113:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:31:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "826:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "831:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "822:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "822:16:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "815:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:27:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:27:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "802:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "805:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "799:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:13:6"
															},
															"nodeType": "YulIf",
															"src": "796:48:6"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "623:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "633:6:6",
														"type": ""
													}
												],
												"src": "592:258:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:208:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "915:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:12:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "919:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:19:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1004:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1011:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1022:3:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1027:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1018:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1018:14:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1034:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "978:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:63:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:63:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1050:57:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1078:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1086:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1074:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1074:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1095:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1091:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1091:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:39:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:50:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1050:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "882:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "889:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "897:3:6",
														"type": ""
													}
												],
												"src": "855:258:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:99:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:21:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1279:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1305:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1317:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1328:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1287:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:45:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1279:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1208:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1219:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:6",
														"type": ""
													}
												],
												"src": "1118:220:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1413:110:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1459:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1468:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1471:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1461:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1461:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1434:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:32:6"
															},
															"nodeType": "YulIf",
															"src": "1423:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1484:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1507:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1494:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1379:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1390:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1402:6:6",
														"type": ""
													}
												],
												"src": "1343:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1639:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1651:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1639:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1681:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1696:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1712:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1708:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1708:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1721:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1704:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1598:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1609:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1620:4:6",
														"type": ""
													}
												],
												"src": "1528:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1795:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1795:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1887:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1889:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1846:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1857:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1872:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1868:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1868:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1881:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1864:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1864:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1853:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1853:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1843:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:50:6"
															},
															"nodeType": "YulIf",
															"src": "1833:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1764:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:6",
														"type": ""
													}
												],
												"src": "1736:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:167:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2047:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2049:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2049:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2022:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:32:6"
															},
															"nodeType": "YulIf",
															"src": "2011:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2072:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2082:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2120:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2147:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2158:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2130:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1959:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1970:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1982:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1990:6:6",
														"type": ""
													}
												],
												"src": "1914:254:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2274:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2284:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2296:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2307:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2292:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2284:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2326:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2337:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2319:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2319:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2243:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2254:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2265:4:6",
														"type": ""
													}
												],
												"src": "2173:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2459:224:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2505:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2514:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2507:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2507:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2507:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2480:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2489:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2501:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2472:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:32:6"
															},
															"nodeType": "YulIf",
															"src": "2469:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2530:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2559:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2540:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2578:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2622:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2607:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2588:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2635:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2662:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2673:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2645:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2635:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2409:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2420:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2432:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2440:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2448:6:6",
														"type": ""
													}
												],
												"src": "2355:328:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2758:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2804:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2813:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2816:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2806:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2806:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2779:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2788:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2775:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2775:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2800:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2771:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:32:6"
															},
															"nodeType": "YulIf",
															"src": "2768:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2829:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2858:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2839:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2839:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2724:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2735:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2747:6:6",
														"type": ""
													}
												],
												"src": "2688:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2963:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3009:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3018:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3021:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3011:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3011:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3011:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2984:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2993:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2980:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3005:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2976:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:32:6"
															},
															"nodeType": "YulIf",
															"src": "2973:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3034:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3063:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3044:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3034:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3082:45:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3112:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3123:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3095:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:32:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3086:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3180:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3189:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3192:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3182:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3182:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3182:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3149:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3170:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3163:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3163:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3156:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3156:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3146:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3146:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3139:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:40:6"
															},
															"nodeType": "YulIf",
															"src": "3136:60:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3205:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3215:5:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3205:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2921:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2932:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2944:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2952:6:6",
														"type": ""
													}
												],
												"src": "2879:347:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3263:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3280:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3287:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3283:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3283:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3320:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3344:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3347:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3337:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3337:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3231:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3493:1008:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3540:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3552:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3542:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3542:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3514:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3523:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3510:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3535:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:33:6"
															},
															"nodeType": "YulIf",
															"src": "3503:53:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3565:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3594:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3575:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3565:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3613:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3646:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3657:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3642:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3623:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3623:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3670:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3697:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3708:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3693:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3693:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3680:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3680:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3721:46:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3752:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3763:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3748:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3748:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3735:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:32:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3725:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3776:28:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3786:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3780:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3831:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3840:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3843:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3833:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3833:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3833:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3827:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3816:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:14:6"
															},
															"nodeType": "YulIf",
															"src": "3813:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3856:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3870:9:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3881:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3866:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:22:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3860:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3936:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3945:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3948:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3938:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3938:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3938:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3915:2:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3919:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3911:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3911:13:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3926:7:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3907:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3907:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3900:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:35:6"
															},
															"nodeType": "YulIf",
															"src": "3897:55:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3961:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3984:2:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3971:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:16:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3965:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4010:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4012:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4012:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4012:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4002:2:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4006:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3999:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:10:6"
															},
															"nodeType": "YulIf",
															"src": "3996:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4041:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4051:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4051:7:6"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4045:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4067:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4087:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4081:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4071:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4099:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4121:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4145:2:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4149:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4141:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4141:13:6"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4156:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4137:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4137:22:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4161:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4133:31:6"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4166:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4129:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4129:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4117:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4117:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4103:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4229:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4231:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4231:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4231:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4188:10:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4200:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4185:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4185:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4208:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4220:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4205:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4205:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4182:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:46:6"
															},
															"nodeType": "YulIf",
															"src": "4179:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4267:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4271:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4260:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4298:6:6"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4306:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4291:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4291:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4291:18:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4355:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4364:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4367:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4357:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4357:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4357:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4332:2:6"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4336:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4328:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4328:11:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4341:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4324:20:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4346:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4321:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:33:6"
															},
															"nodeType": "YulIf",
															"src": "4318:53:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4397:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4405:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4393:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4393:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4414:2:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4410:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4410:11:6"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4423:2:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4380:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4380:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4380:46:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4450:6:6"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4458:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4446:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4446:15:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4463:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:24:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4479:16:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4489:6:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3435:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3446:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3458:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3466:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3474:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3482:6:6",
														"type": ""
													}
												],
												"src": "3363:1138:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4593:173:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4639:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4648:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4651:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4641:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4641:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4641:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4614:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4623:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4610:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4635:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4606:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4606:32:6"
															},
															"nodeType": "YulIf",
															"src": "4603:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4664:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4674:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4664:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4712:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4745:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4756:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4741:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4741:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4722:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4722:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4551:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4562:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4574:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4582:6:6",
														"type": ""
													}
												],
												"src": "4506:260:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4826:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4836:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4850:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4853:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4846:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4836:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4867:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4897:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4903:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4893:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4893:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4871:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4944:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4946:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4960:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4968:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4956:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4956:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4946:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4924:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4917:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4917:26:6"
															},
															"nodeType": "YulIf",
															"src": "4914:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5034:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5055:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5062:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5058:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5058:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5048:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5048:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5048:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5099:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5102:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5092:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5092:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5092:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5127:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5130:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5120:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5120:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5120:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4990:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5013:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5021:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5010:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4987:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:38:6"
															},
															"nodeType": "YulIf",
															"src": "4984:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4806:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4815:6:6",
														"type": ""
													}
												],
												"src": "4771:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5343:283:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5353:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5373:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5367:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5357:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5415:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5423:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5411:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5411:17:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5430:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5435:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5389:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5389:53:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5389:53:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5451:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5468:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5473:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5464:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5464:16:6"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "5455:5:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5489:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5511:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5505:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5505:13:6"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "5493:8:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5553:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5561:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5549:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5549:17:6"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5568:5:6"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5575:8:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5527:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5527:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5527:57:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5593:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5604:5:6"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5611:8:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:20:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5593:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5311:3:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5316:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5324:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5335:3:6",
														"type": ""
													}
												],
												"src": "5156:470:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5834:286:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5844:29:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5862:3:6",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5867:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5858:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5858:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5871:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5854:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5854:19:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5848:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5889:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5904:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5912:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5900:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5900:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5882:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5882:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5882:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5936:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5947:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5932:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5932:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5956:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5964:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5952:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5999:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5984:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5984:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6004:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5977:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5977:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6031:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6042:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6027:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6027:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6047:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6020:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6020:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6020:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6060:54:6",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6086:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6098:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6109:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6094:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6094:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "6068:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6068:46:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6060:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5779:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5790:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5798:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5806:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5814:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5825:4:6",
														"type": ""
													}
												],
												"src": "5631:489:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6205:169:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6251:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6260:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6263:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6253:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6253:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6253:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6226:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6235:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6222:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6222:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6247:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6218:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:32:6"
															},
															"nodeType": "YulIf",
															"src": "6215:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6276:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6295:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6289:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6289:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6280:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "6314:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6314:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6314:30:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6353:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6363:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6353:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6171:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6182:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6194:6:6",
														"type": ""
													}
												],
												"src": "6125:249:6"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d6578063b88d4fde146101e9578063c87b56dd146101fc578063e985e9c51461020f57600080fd5b80636352211e146101a857806370a08231146101bb57806395d89b41146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806318160ddd1461016c57806323b872dd1461018257806342842e0e1461019557600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610985565b61024b565b60405190151581526020015b60405180910390f35b61011f61029d565b60405161010e91906109fa565b61013f61013a366004610a0d565b61032f565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610a42565b610373565b005b600154600054035b60405190815260200161010e565b61016a610190366004610a6c565b610413565b61016a6101a3366004610a6c565b6105ab565b61013f6101b6366004610a0d565b6105cb565b6101746101c9366004610aa8565b6105d6565b61011f610625565b61016a6101e4366004610ac3565b610634565b61016a6101f7366004610b15565b6106c9565b61011f61020a366004610a0d565b610713565b61010261021d366004610bf1565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061027c57506380ac58cd60e01b6001600160e01b03198316145b806102975750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546102ac90610c24565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610c24565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061033a826107a4565b610357576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061037e826105cb565b9050336001600160a01b038216146103b75761039a813361021d565b6103b7576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061041e826107cb565b9050836001600160a01b0316816001600160a01b0316146104515760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761049e57610481863361021d565b61049e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166104c557604051633a954ecd60e21b815260040160405180910390fd5b80156104d057600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b84169003610562576001840160008181526004602052604081205490036105605760005481146105605760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6105c6838383604051806020016040528060008152506106c9565b505050565b6000610297826107cb565b60006001600160a01b0382166105ff576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102ac90610c24565b336001600160a01b0383160361065d5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106d4848484610413565b6001600160a01b0383163b1561070d576106f084848484610832565b61070d576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061071e826107a4565b61073b57604051630a14c4b560e41b815260040160405180910390fd5b600061075260408051602081019091526000815290565b90508051600003610772576040518060200160405280600081525061079d565b8061077c8461091d565b60405160200161078d929190610c5e565b6040516020818303038152906040525b9392505050565b6000805482108015610297575050600090815260046020526040902054600160e01b161590565b6000816000548110156108195760008181526004602052604081205490600160e01b82169003610817575b8060000361079d5750600019016000818152600460205260409020546107f6565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610867903390899088908890600401610c8d565b6020604051808303816000875af19250505080156108a2575060408051601f3d908101601f1916820190925261089f91810190610cca565b60015b610900573d8080156108d0576040519150601f19603f3d011682016040523d82523d6000602084013e6108d5565b606091505b5080516000036108f8576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080810191829052607f0190826030600a8206018353600a90045b801561095a57600183039250600a81066030018353600a900461093c565b50819003601f19909101908152919050565b6001600160e01b03198116811461098257600080fd5b50565b60006020828403121561099757600080fd5b813561079d8161096c565b60005b838110156109bd5781810151838201526020016109a5565b8381111561070d5750506000910152565b600081518084526109e68160208601602086016109a2565b601f01601f19169290920160200192915050565b60208152600061079d60208301846109ce565b600060208284031215610a1f57600080fd5b5035919050565b80356001600160a01b0381168114610a3d57600080fd5b919050565b60008060408385031215610a5557600080fd5b610a5e83610a26565b946020939093013593505050565b600080600060608486031215610a8157600080fd5b610a8a84610a26565b9250610a9860208501610a26565b9150604084013590509250925092565b600060208284031215610aba57600080fd5b61079d82610a26565b60008060408385031215610ad657600080fd5b610adf83610a26565b915060208301358015158114610af457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610b2b57600080fd5b610b3485610a26565b9350610b4260208601610a26565b925060408501359150606085013567ffffffffffffffff80821115610b6657600080fd5b818701915087601f830112610b7a57600080fd5b813581811115610b8c57610b8c610aff565b604051601f8201601f19908116603f01168101908382118183101715610bb457610bb4610aff565b816040528281528a6020848701011115610bcd57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610c0457600080fd5b610c0d83610a26565b9150610c1b60208401610a26565b90509250929050565b600181811c90821680610c3857607f821691505b602082108103610c5857634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610c708184602088016109a2565b835190830190610c848183602088016109a2565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610cc0908301846109ce565b9695505050505050565b600060208284031215610cdc57600080fd5b815161079d8161096c56fea2646970667358221220113b81d1a5a20c7fe0271c8de1004c0e4d3861dd04dc4ef941abcd61c7145f4b64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x625 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x27C JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x297 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC24 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xC24 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP3 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x5CB JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x3B7 JUMPI PUSH2 0x39A DUP2 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E DUP3 PUSH2 0x7CB JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x49E JUMPI PUSH2 0x481 DUP7 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x562 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x560 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x560 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5C6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297 DUP3 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC24 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06307DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6D4 DUP5 DUP5 DUP5 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x70D JUMPI PUSH2 0x6F0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x71E DUP3 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x73B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x752 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x79D JUMP JUMPDEST DUP1 PUSH2 0x77C DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78D SWAP3 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x297 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0x817 JUMPI JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x79D JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7F6 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x867 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8A2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x89F SWAP2 DUP2 ADD SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x900 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x8D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x7F ADD SWAP1 DUP3 PUSH1 0x30 PUSH1 0xA DUP3 MOD ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV JUMPDEST DUP1 ISZERO PUSH2 0x95A JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV PUSH2 0x93C JUMP JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x79D DUP2 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9BD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9A5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x70D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x9E6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x79D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA5E DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8A DUP5 PUSH2 0xA26 JUMP JUMPDEST SWAP3 POP PUSH2 0xA98 PUSH1 0x20 DUP6 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79D DUP3 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xADF DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB34 DUP6 PUSH2 0xA26 JUMP JUMPDEST SWAP4 POP PUSH2 0xB42 PUSH1 0x20 DUP7 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB8C JUMPI PUSH2 0xB8C PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0xAFF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xBCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0D DUP4 PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP PUSH2 0xC1B PUSH1 0x20 DUP5 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC38 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC58 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xC70 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x9A2 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xC84 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x9A2 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xCC0 SWAP1 DUP4 ADD DUP5 PUSH2 0x9CE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x79D DUP2 PUSH2 0x96C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT EXTCODESIZE DUP2 0xD1 0xA5 LOG2 0xC PUSH32 0xE0271C8DE1004C0E4D3861DD04DC4EF941ABCD61C7145F4B64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "885:34115:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5653:607;;;;;;:::i;:::-;;:::i;:::-;;;565:14:6;;558:22;540:41;;528:2;513:18;5653:607:1;;;;;;;;11161:98;;;:::i;:::-;;;;;;;:::i;13048:200::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:6;;;1674:51;;1662:2;1647:18;13048:200:1;1528:203:6;12611:376:1;;;;;;:::i;:::-;;:::i;:::-;;4736:309;4998:12;;4789:7;4982:13;:28;4736:309;;;2319:25:6;;;2307:2;2292:18;4736:309:1;2173:177:6;22055:2739:1;;;;;;:::i;:::-;;:::i;13912:179::-;;;;;;:::i;:::-;;:::i;10957:142::-;;;;;;:::i;:::-;;:::i;6319:221::-;;;;;;:::i;:::-;;:::i;11323:102::-;;;:::i;13315:303::-;;;;;;:::i;:::-;;:::i;14157:388::-;;;;;;:::i;:::-;;:::i;11491:313::-;;;;;;:::i;:::-;;:::i;13684:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;13804:25:1;;;13781:4;13804:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;13684:162;5653:607;5738:4;-1:-1:-1;;;;;;;;;6033:25:1;;;;:101;;-1:-1:-1;;;;;;;;;;6109:25:1;;;6033:101;:177;;;-1:-1:-1;;;;;;;;;;6185:25:1;;;6033:177;6014:196;5653:607;-1:-1:-1;;5653:607:1:o;11161:98::-;11215:13;11247:5;11240:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11161:98;:::o;13048:200::-;13116:7;13140:16;13148:7;13140;:16::i;:::-;13135:64;;13165:34;;-1:-1:-1;;;13165:34:1;;;;;;;;;;;13135:64;-1:-1:-1;13217:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;13217:24:1;;13048:200::o;12611:376::-;12683:13;12699:16;12707:7;12699;:16::i;:::-;12683:32;-1:-1:-1;32960:10:1;-1:-1:-1;;;;;12730:28:1;;;12726:172;;12777:44;12794:5;32960:10;13684:162;:::i;12777:44::-;12772:126;;12848:35;;-1:-1:-1;;;12848:35:1;;;;;;;;;;;12772:126;12908:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;12908:29:1;-1:-1:-1;;;;;12908:29:1;;;;;;;;;12952:28;;12908:24;;12952:28;;;;;;;12673:314;12611:376;;:::o;22055:2739::-;22184:27;22214;22233:7;22214:18;:27::i;:::-;22184:57;;22297:4;-1:-1:-1;;;;;22256:45:1;22272:19;-1:-1:-1;;;;;22256:45:1;;22252:86;;22310:28;;-1:-1:-1;;;22310:28:1;;;;;;;;;;;22252:86;22350:27;20821:21;;;20652:15;20862:4;20855:36;20943:4;20927:21;;21031:26;;32960:10;21766:30;;;-1:-1:-1;;;;;21468:26:1;;21745:19;;;21742:55;22526:173;;22612:43;22629:4;32960:10;13684:162;:::i;22612:43::-;22607:92;;22664:35;;-1:-1:-1;;;22664:35:1;;;;;;;;;;;22607:92;-1:-1:-1;;;;;22714:16:1;;22710:52;;22739:23;;-1:-1:-1;;;22739:23:1;;;;;;;;;;;22710:52;22905:15;22902:157;;;23043:1;23022:19;23015:30;22902:157;-1:-1:-1;;;;;23429:24:1;;;;;;;:18;:24;;;;;;23427:26;;-1:-1:-1;;23427:26:1;;;23497:22;;;;;;;;;23495:24;;-1:-1:-1;23495:24:1;;;10863:11;10839:22;10835:40;10822:62;-1:-1:-1;;;10822:62:1;23783:26;;;;:17;:26;;;;;:171;;;;-1:-1:-1;;;24071:46:1;;:51;;24067:616;;24174:1;24164:11;;24142:19;24295:30;;;:17;:30;;;;;;:35;;24291:378;;24431:13;;24416:11;:28;24412:239;;24576:30;;;;:17;:30;;;;;:52;;;24412:239;24124:559;24067:616;24727:7;24723:2;-1:-1:-1;;;;;24708:27:1;24717:4;-1:-1:-1;;;;;24708:27:1;;;;;;;;;;;22174:2620;;;22055:2739;;;:::o;13912:179::-;14045:39;14062:4;14068:2;14072:7;14045:39;;;;;;;;;;;;:16;:39::i;:::-;13912:179;;;:::o;10957:142::-;11021:7;11063:27;11082:7;11063:18;:27::i;6319:221::-;6383:7;-1:-1:-1;;;;;6406:19:1;;6402:60;;6434:28;;-1:-1:-1;;;6434:28:1;;;;;;;;;;;6402:60;-1:-1:-1;;;;;;6479:25:1;;;;;:18;:25;;;;;;1022:13;6479:54;;6319:221::o;11323:102::-;11379:13;11411:7;11404:14;;;;;:::i;13315:303::-;32960:10;-1:-1:-1;;;;;13413:31:1;;;13409:61;;13453:17;;-1:-1:-1;;;13453:17:1;;;;;;;;;;;13409:61;32960:10;13481:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;13481:49:1;;;;;;;;;;;;:60;;-1:-1:-1;;13481:60:1;;;;;;;;;;13556:55;;540:41:6;;;13481:49:1;;32960:10;13556:55;;513:18:6;13556:55:1;;;;;;;13315:303;;:::o;14157:388::-;14318:31;14331:4;14337:2;14341:7;14318:12;:31::i;:::-;-1:-1:-1;;;;;14363:14:1;;;:19;14359:180;;14401:56;14432:4;14438:2;14442:7;14451:5;14401:30;:56::i;:::-;14396:143;;14484:40;;-1:-1:-1;;;14484:40:1;;;;;;;;;;;14396:143;14157:388;;;;:::o;11491:313::-;11564:13;11594:16;11602:7;11594;:16::i;:::-;11589:59;;11619:29;;-1:-1:-1;;;11619:29:1;;;;;;;;;;;11589:59;11659:21;11683:10;12125:9;;;;;;;;;-1:-1:-1;12125:9:1;;;12049:92;11683:10;11659:34;;11716:7;11710:21;11735:1;11710:26;:87;;;;;;;;;;;;;;;;;11763:7;11772:18;11782:7;11772:9;:18::i;:::-;11746:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11710:87;11703:94;11491:313;-1:-1:-1;;;11491:313:1:o;14791:268::-;14848:4;14935:13;;14925:7;:23;14883:150;;;;-1:-1:-1;;14985:26:1;;;;:17;:26;;;;;;-1:-1:-1;;;14985:43:1;:48;;14791:268::o;7949:1105::-;8016:7;8050;8148:13;;8141:4;:20;8137:853;;;8185:14;8202:23;;;:17;:23;;;;;;;-1:-1:-1;;;8289:23:1;;:28;;8285:687;;8800:111;8807:6;8817:1;8807:11;8800:111;;-1:-1:-1;;;8877:6:1;8859:25;;;;:17;:25;;;;;;8800:111;;8285:687;8163:827;8137:853;9016:31;;-1:-1:-1;;;9016:31:1;;;;;;;;;;;28649:697;28827:88;;-1:-1:-1;;;28827:88:1;;28807:4;;-1:-1:-1;;;;;28827:45:1;;;;;:88;;32960:10;;28894:4;;28900:7;;28909:5;;28827:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28827:88:1;;;;;;;;-1:-1:-1;;28827:88:1;;;;;;;;;;;;:::i;:::-;;;28823:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29105:6;:13;29122:1;29105:18;29101:229;;29150:40;;-1:-1:-1;;;29150:40:1;;;;;;;;;;;29101:229;29290:6;29284:13;29275:6;29271:2;29267:15;29260:38;28823:517;-1:-1:-1;;;;;;28983:64:1;-1:-1:-1;;;28983:64:1;;-1:-1:-1;28649:697:1;;;;;;:::o;33078:1920::-;33541:4;33535:11;;33548:3;33531:21;;33624:17;;;;34307:11;;;34188:5;34437:2;34451;34441:13;;34433:22;34307:11;34420:36;34491:2;34481:13;;34082:682;34509:4;34082:682;;;34695:1;34690:3;34686:11;34679:18;;34745:2;34739:4;34735:13;34731:2;34727:22;34722:3;34714:36;34602:2;34592:13;;34082:682;;;-1:-1:-1;34792:13:1;;;-1:-1:-1;;34905:12:1;;;34963:19;;;34905:12;33078:1920;-1:-1:-1;33078:1920:1:o;14:131:6:-;-1:-1:-1;;;;;;88:32:6;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:6;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:6;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:6:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:6;;1343:180;-1:-1:-1;1343:180:6:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:6;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:6:o;2355:328::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2540:29;2559:9;2540:29;:::i;:::-;2530:39;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2673:2;2662:9;2658:18;2645:32;2635:42;;2355:328;;;;;:::o;2688:186::-;2747:6;2800:2;2788:9;2779:7;2775:23;2771:32;2768:52;;;2816:1;2813;2806:12;2768:52;2839:29;2858:9;2839:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:6;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;5156:470::-;5335:3;5373:6;5367:13;5389:53;5435:6;5430:3;5423:4;5415:6;5411:17;5389:53;:::i;:::-;5505:13;;5464:16;;;;5527:57;5505:13;5464:16;5561:4;5549:17;;5527:57;:::i;:::-;5600:20;;5156:470;-1:-1:-1;;;;5156:470:6:o;5631:489::-;-1:-1:-1;;;;;5900:15:6;;;5882:34;;5952:15;;5947:2;5932:18;;5925:43;5999:2;5984:18;;5977:34;;;6047:3;6042:2;6027:18;;6020:31;;;5825:4;;6068:46;;6094:19;;6086:6;6068:46;:::i;:::-;6060:54;5631:489;-1:-1:-1;;;;;;5631:489:6:o;6125:249::-;6194:6;6247:2;6235:9;6226:7;6222:23;6218:32;6215:52;;;6263:1;6260;6253:12;6215:52;6295:9;6289:16;6314:30;6338:5;6314:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "671400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2640",
								"getApproved(uint256)": "6925",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26647",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4432",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4337",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isOwnerOrApproved(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3986,
									"end": 4140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4057,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 4060,
									"end": 4065,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4057,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 4052,
									"end": 4065,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4075,
									"end": 4082,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4085,
									"end": 4092,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4082,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 4075,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4332,
									"end": 4339,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1354,
									"end": 1415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1529,
									"end": 1592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2216,
									"end": 2218,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2211,
									"end": 2214,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2208,
									"end": 2219,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2252,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2282,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2283,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2322,
									"end": 2326,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2318,
									"end": 2320,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2308,
									"end": 2327,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2390,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2376,
									"end": 2395,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2373,
									"end": 2374,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2369,
									"end": 2396,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2363,
									"end": 2367,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2359,
									"end": 2397,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2428,
									"end": 2432,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2416,
									"end": 2426,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2413,
									"end": 2433,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2451,
									"end": 2455,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2506,
									"end": 2508,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2501,
									"end": 2504,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2509,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2495,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2490,
									"end": 2510,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2484,
									"end": 2488,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2480,
									"end": 2511,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2470,
									"end": 2511,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2470,
									"end": 2511,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2581,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2572,
									"end": 2577,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2569,
									"end": 2582,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2605,
									"end": 2606,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2594,
									"end": 2607,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2955,
									"end": 2965,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2955,
									"end": 2965,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2977,
									"end": 3007,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2977,
									"end": 3007,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 3010,
									"end": 3028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3129,
									"end": 3135,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 3121,
									"end": 3125,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3115,
									"end": 3126,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 3089,
									"end": 3127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3083,
									"end": 3087,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 3039,
									"end": 3136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3191,
									"end": 3195,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3191,
									"end": 3195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3255,
									"end": 3257,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3244,
									"end": 3258,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3244,
									"end": 3258,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3272,
									"end": 3273,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3991,
									"end": 3997,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4037,
									"end": 4063,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2792,
									"end": 2793,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2784,
									"end": 2808,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2780,
									"end": 2809,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2770,
									"end": 2810,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2816,
									"end": 2817,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 2824,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4090,
									"end": 4171,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4090,
									"end": 4171,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3237,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 3237,
									"end": 4181,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2061,
									"end": 2062,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2098,
									"end": 2102,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2103,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2085,
									"end": 2103,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3435,
									"end": 3442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3432,
									"end": 3433,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3443,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3518,
									"end": 3544,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3503,
									"end": 3545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3503,
									"end": 3545,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3584,
									"end": 3585,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3451,
									"end": 3470,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3451,
									"end": 3470,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3428,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3685,
									"end": 3691,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3676,
									"end": 3683,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3673,
									"end": 3692,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3740,
									"end": 3766,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3829,
									"end": 3830,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3841,
									"end": 3844,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 3821,
									"end": 3845,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3817,
									"end": 3854,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3813,
									"end": 3855,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3798,
									"end": 3856,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3783,
									"end": 3857,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3783,
									"end": 3857,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3917,
									"end": 3918,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3884,
									"end": 3920,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3884,
									"end": 3920,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2835,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220113b81d1a5a20c7fe0271c8de1004c0e4d3861dd04dc4ef941abcd61c7145f4b64736f6c634300080f0033",
									".code": [
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "C87B56DD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1528,
											"end": 1731,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 4995,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2309,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2310,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2173,
											"end": 2350,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11323,
											"end": 11425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13781,
											"end": 13785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13822,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6014,
											"end": 6210,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11228,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11247,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 11240,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 11240,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13116,
											"end": 13123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 13148,
											"end": 13155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13140,
											"end": 13147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 13140,
											"end": 13156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13232,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 12707,
											"end": 12714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 12699,
											"end": 12715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 12794,
											"end": 12799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12923,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 12673,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 22233,
											"end": 22240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22214,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 22214,
											"end": 22241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22297,
											"end": 22301,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22272,
											"end": 22291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22350,
											"end": 22377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20652,
											"end": 20667,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 20862,
											"end": 20866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20855,
											"end": 20891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20943,
											"end": 20947,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21742,
											"end": 21797,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 22629,
											"end": 22633,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22905,
											"end": 22920,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23043,
											"end": 23044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23022,
											"end": 23041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23015,
											"end": 23045,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23447,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10863,
											"end": 10874,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10861,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10835,
											"end": 10875,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23800,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24071,
											"end": 24117,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24174,
											"end": 24175,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24142,
											"end": 24161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24312,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24330,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24416,
											"end": 24427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24416,
											"end": 24444,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24593,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24124,
											"end": 24683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24727,
											"end": 24734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24723,
											"end": 24725,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24717,
											"end": 24721,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 14062,
											"end": 14066,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14068,
											"end": 14070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14072,
											"end": 14079,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 14045,
											"end": 14084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 11082,
											"end": 11089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11063,
											"end": 11081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 11063,
											"end": 11090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11379,
											"end": 11392,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11411,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 11404,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B06307DB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 14331,
											"end": 14335,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14337,
											"end": 14339,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14348,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14318,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 14318,
											"end": 14349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14382,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 14432,
											"end": 14436,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14438,
											"end": 14440,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14442,
											"end": 14449,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14451,
											"end": 14456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14401,
											"end": 14431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 14401,
											"end": 14457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11564,
											"end": 11577,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 11602,
											"end": 11609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11594,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 11594,
											"end": 11610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A14C4B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11735,
											"end": 11736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11736,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11763,
											"end": 11770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 11782,
											"end": 11789,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 11772,
											"end": 11790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 11746,
											"end": 11791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14848,
											"end": 14852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14948,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14985,
											"end": 15028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8289,
											"end": 8312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8289,
											"end": 8312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8289,
											"end": 8317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8289,
											"end": 8317,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8813,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8817,
											"end": 8818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8818,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8876,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28807,
											"end": 28811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28807,
											"end": 28811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28894,
											"end": 28898,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 28894,
											"end": 28898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28900,
											"end": 28907,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 28900,
											"end": 28907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28909,
											"end": 28914,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 28909,
											"end": 28914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 28827,
											"end": 28915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 28827,
											"end": 28915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29105,
											"end": 29111,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29105,
											"end": 29118,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29122,
											"end": 29123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29105,
											"end": 29123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29290,
											"end": 29296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29284,
											"end": 29297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29275,
											"end": 29281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29271,
											"end": 29273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29267,
											"end": 29282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29260,
											"end": 29298,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33541,
											"end": 33545,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33535,
											"end": 33546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33535,
											"end": 33546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33548,
											"end": 33551,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 33531,
											"end": 33552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33531,
											"end": 33552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34188,
											"end": 34193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34437,
											"end": 34439,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 34451,
											"end": 34453,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34441,
											"end": 34454,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34441,
											"end": 34454,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 34433,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34420,
											"end": 34456,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 34491,
											"end": 34493,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34481,
											"end": 34494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34481,
											"end": 34494,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34509,
											"end": 34513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34695,
											"end": 34696,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34690,
											"end": 34693,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34686,
											"end": 34697,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34679,
											"end": 34697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34679,
											"end": 34697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34745,
											"end": 34747,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34739,
											"end": 34743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34735,
											"end": 34748,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 34731,
											"end": 34733,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 34727,
											"end": 34749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34722,
											"end": 34725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34714,
											"end": 34750,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 34602,
											"end": 34604,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34592,
											"end": 34605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34592,
											"end": 34605,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34792,
											"end": 34805,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34792,
											"end": 34805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34792,
											"end": 34805,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34963,
											"end": 34982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34963,
											"end": 34982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34963,
											"end": 34982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33078,
											"end": 34998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 68,
											"end": 139,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 592,
											"end": 850,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 688,
											"end": 694,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 682,
											"end": 695,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 674,
											"end": 787,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 764,
											"end": 775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 776,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 745,
											"end": 756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 738,
											"end": 777,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 805,
											"end": 811,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 799,
											"end": 812,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 796,
											"end": 844,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 796,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 796,
											"end": 844,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 838,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 822,
											"end": 838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 815,
											"end": 842,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 592,
											"end": 850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 897,
											"end": 900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 929,
											"end": 941,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 950,
											"end": 969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1025,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1018,
											"end": 1032,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1011,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 978,
											"end": 1041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1074,
											"end": 1089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1099,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1106,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1270,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1287,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1453,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1426,
											"end": 1458,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1473,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2041,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2046,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2082,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2111,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 2168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2454,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2503,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2504,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2540,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2588,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2671,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2677,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2874,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2688,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2802,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2788,
											"end": 2797,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2786,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2775,
											"end": 2798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2771,
											"end": 2803,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2816,
											"end": 2817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2813,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2858,
											"end": 2867,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2839,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2958,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3002,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2984,
											"end": 2991,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 3003,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2976,
											"end": 3008,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3011,
											"end": 3023,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3044,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3125,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3121,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3127,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3163,
											"end": 3176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3178,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3215,
											"end": 3220,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3358,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3231,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3292,
											"end": 3302,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3283,
											"end": 3303,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3304,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3327,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3313,
											"end": 3328,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3344,
											"end": 3345,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3538,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3523,
											"end": 3532,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3575,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3657,
											"end": 3659,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3655,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3623,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3661,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3710,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3680,
											"end": 3712,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3752,
											"end": 3761,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3748,
											"end": 3766,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3735,
											"end": 3767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3819,
											"end": 3825,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3830,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3923,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3924,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3907,
											"end": 3934,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3946,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 3986,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 3987,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4006,
											"end": 4008,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4002,
											"end": 4004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3999,
											"end": 4009,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4012,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4089,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4081,
											"end": 4090,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4163,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 4133,
											"end": 4164,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4228,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4231,
											"end": 4249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4271,
											"end": 4281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4269,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4260,
											"end": 4282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4306,
											"end": 4308,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4304,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4291,
											"end": 4309,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4353,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4334,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4354,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4367,
											"end": 4368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4365,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4369,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4405,
											"end": 4407,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4426,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 4501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4635,
											"end": 4637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4632,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4621,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4633,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4638,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4649,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4693,
											"end": 4702,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4674,
											"end": 4703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4756,
											"end": 4758,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4722,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4506,
											"end": 4766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 4972,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4956,
											"end": 4973,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5021,
											"end": 5023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5013,
											"end": 5019,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5010,
											"end": 5024,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5077,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5062,
											"end": 5065,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5058,
											"end": 5078,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5092,
											"end": 5107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5130,
											"end": 5134,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5135,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 5151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5626,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5156,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5335,
											"end": 5338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5367,
											"end": 5380,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5435,
											"end": 5441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5430,
											"end": 5433,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5423,
											"end": 5427,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5415,
											"end": 5421,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5411,
											"end": 5428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5389,
											"end": 5442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5505,
											"end": 5518,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5505,
											"end": 5518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5505,
											"end": 5518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5565,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5549,
											"end": 5566,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5549,
											"end": 5566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5527,
											"end": 5584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5626,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5156,
											"end": 5626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 6120,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 5631,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5882,
											"end": 5916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5882,
											"end": 5916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5952,
											"end": 5967,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5952,
											"end": 5967,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5947,
											"end": 5949,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5968,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5999,
											"end": 6001,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6042,
											"end": 6044,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6027,
											"end": 6045,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6020,
											"end": 6051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6020,
											"end": 6051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6020,
											"end": 6051,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5825,
											"end": 5829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5825,
											"end": 5829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6086,
											"end": 6092,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6068,
											"end": 6114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6114,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 6120,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5631,
											"end": 6120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6125,
											"end": 6374,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 6125,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6249,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6233,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6222,
											"end": 6245,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6218,
											"end": 6250,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6253,
											"end": 6265,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6295,
											"end": 6304,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6289,
											"end": 6305,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6314,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"ERC721A/INagaKid.sol",
								"erc721a/contracts/ERC721A.sol",
								"erc721a/contracts/IERC721A.sol",
								"erc721a/contracts/extensions/ERC721AQueryable.sol",
								"erc721a/contracts/extensions/IERC721ABurnable.sol",
								"erc721a/contracts/extensions/IERC721AQueryable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at `_startTokenId()` (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 147,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 149,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 151,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 153,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 157,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 161,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 171,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token receiver interface.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token receiver interface.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/extensions/ERC721AQueryable.sol": {
				"ERC721AQueryable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721A subclass with convenience query functions.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false`   - `extraData` = `0` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true`   - `extraData` = `<Extra data when token was burned>` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`   - `extraData` = `<Extra data at start of ownership>`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`"
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A Queryable",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"explicitOwnershipOf(uint256)": "c23dc68f",
							"explicitOwnershipsOf(uint256[])": "5bbb2177",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"tokensOfOwner(address)": "8462151c",
							"tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721A subclass with convenience query functions.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false`   - `extraData` = `0` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true`   - `extraData` = `<Extra data when token was burned>` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`   - `extraData` = `<Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event.\"}},\"title\":\"ERC721A Queryable\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/extensions/ERC721AQueryable.sol\":\"ERC721AQueryable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xfeeda22932d93d1b3ec71fa0d700f1bd5bd4e1979fa250156b82581e9591c5cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3bb3c16d7d01cfabc6d4d723dece47e8a6e8a6ef42188d5be213d43d70c2e87\",\"dweb:/ipfs/QmNrbZnzeUEbfcoamdexJsni1jUFbDMend8kjausHnpBSL\"]},\"erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x55e6863d273b676d65797fee7aac1b520848a0e31c0dd2e5a29887457043b7a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8477b7c9788e36787f79ef9b1580c46bdadc13da4c8ef85ce82d42a754743\",\"dweb:/ipfs/QmQvqKtF8YyJKqpEiNh1KkeC1Q5JmvEkQmP2ZCPYSW72BS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 147,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 149,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 151,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 153,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 157,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 161,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 171,
								"contract": "erc721a/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"IERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721ABurnable compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721ABurnable compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/extensions/IERC721ABurnable.sol\":\"IERC721ABurnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0xf190b7fd1dfc51d8d259d5dca23f4fa1734f7b090db4a39504ac98f13a5ba4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f52952c16f9fb4d44fb1758010a805cf340e9d1d59a798c4ec0e41120092f71a\",\"dweb:/ipfs/Qmemym1BpEu1RP8X6GMasiCHuvcx4TgvS4zs8WMf6SeJPQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"IERC721AQueryable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721AQueryable compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`"
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"explicitOwnershipOf(uint256)": "c23dc68f",
							"explicitOwnershipsOf(uint256[])": "5bbb2177",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"tokensOfOwner(address)": "8462151c",
							"tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721AQueryable compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds:   - `addr` = `address(0)`   - `startTimestamp` = `0`   - `burned` = `false` If the `tokenId` is burned:   - `addr` = `<Address of owner before token was burned>`   - `startTimestamp` = `<Timestamp when token was burned>`   - `burned = `true` Otherwise:   - `addr` = `<Address of owner>`   - `startTimestamp` = `<Timestamp of start of ownership>`   - `burned = `false`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(totalSupply) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K pfp collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start` < `stop`\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/extensions/IERC721AQueryable.sol\":\"IERC721AQueryable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]},\"erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x55e6863d273b676d65797fee7aac1b520848a0e31c0dd2e5a29887457043b7a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8477b7c9788e36787f79ef9b1580c46bdadc13da4c8ef85ce82d42a754743\",\"dweb:/ipfs/QmQvqKtF8YyJKqpEiNh1KkeC1Q5JmvEkQmP2ZCPYSW72BS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC721A/INagaKid.sol": {
				"ast": {
					"absolutePath": "ERC721A/INagaKid.sol",
					"exportedSymbols": {
						"ERC721A": [
							1700
						],
						"ERC721AQueryable": [
							2284
						],
						"ERC721A__IERC721Receiver": [
							79
						],
						"IERC721A": [
							1909
						],
						"IERC721ABurnable": [
							2297
						],
						"IERC721AQueryable": [
							2349
						],
						"INagaKid": [
							61
						]
					},
					"id": 62,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "erc721a/contracts/IERC721A.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 62,
							"sourceUnit": 1910,
							"src": "61:40:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721a/contracts/extensions/IERC721ABurnable.sol",
							"file": "erc721a/contracts/extensions/IERC721ABurnable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 62,
							"sourceUnit": 2298,
							"src": "103:59:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721a/contracts/extensions/ERC721AQueryable.sol",
							"file": "erc721a/contracts/extensions/ERC721AQueryable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 62,
							"sourceUnit": 2285,
							"src": "164:59:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1909,
										"src": "251:8:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "251:8:0"
								}
							],
							"canonicalName": "INagaKid",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 61,
							"linearizedBaseContracts": [
								61,
								1909
							],
							"name": "INagaKid",
							"nameLocation": "239:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1760
									],
									"functionSelector": "18160ddd",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "278:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "289:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "315:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "314:9:0"
									},
									"scope": 61,
									"src": "269:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "330:174:0",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "519:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "547:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "539:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "562:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "554:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:30:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "592:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:9:0"
									},
									"scope": 61,
									"src": "510:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4f6ccce7",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "616:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "637:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "629:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "628:15:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "667:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:9:0"
									},
									"scope": 61,
									"src": "607:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5abeb01",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "691:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "700:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "726:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:9:0"
									},
									"scope": 61,
									"src": "682:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa271e1a",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isMinter",
									"nameLocation": "750:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "767:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "759:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:16:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "797:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "797:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:6:0"
									},
									"scope": 61,
									"src": "741:62:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "43508b05",
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchMint",
									"nameLocation": "818:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "836:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "828:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "845:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "840:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "840:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:26:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:0:0"
									},
									"scope": 61,
									"src": "809:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40d097c3",
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "878:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "895:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "887:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:13:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:0:0"
									},
									"scope": 61,
									"src": "869:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "438b6300",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "walletOfOwner",
									"nameLocation": "924:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "946:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "938:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:16:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "977:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 56,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "977:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 57,
													"nodeType": "ArrayTypeName",
													"src": "977:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:18:0"
									},
									"scope": 61,
									"src": "915:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 62,
							"src": "229:775:0",
							"usedErrors": [
								1706,
								1709,
								1712,
								1715,
								1718,
								1721,
								1724,
								1727,
								1730,
								1733,
								1736,
								1739,
								1742,
								1745
							]
						}
					],
					"src": "33:973:0"
				},
				"id": 0
			},
			"erc721a/contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							1700
						],
						"ERC721A__IERC721Receiver": [
							79
						],
						"IERC721A": [
							1909
						]
					},
					"id": 1701,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 63,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:1"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 64,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1701,
							"sourceUnit": 1910,
							"src": "109:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 65,
								"nodeType": "StructuredDocumentation",
								"src": "135:48:1",
								"text": " @dev ERC721 token receiver interface."
							},
							"fullyImplemented": false,
							"id": 79,
							"linearizedBaseContracts": [
								79
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "194:24:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 78,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "234:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "268:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "260:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "294:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "286:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "316:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "308:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "348:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "333:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 72,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "333:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:108:1"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "377:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 75,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "377:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:8:1"
									},
									"scope": 79,
									"src": "225:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1701,
							"src": "184:203:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 81,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1909,
										"src": "905:8:1"
									},
									"id": 82,
									"nodeType": "InheritanceSpecifier",
									"src": "905:8:1"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "389:495:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard,\n including the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at `_startTokenId()`\n (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1700,
							"linearizedBaseContracts": [
								1700,
								1909
							],
							"name": "ERC721A",
							"nameLocation": "894:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 90,
									"mutability": "constant",
									"name": "BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "993:26:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "968:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 83,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "968:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 89,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1023:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1028:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1023:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 87,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1022:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 88,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1034:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1022:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 93,
									"mutability": "constant",
									"name": "BITPOS_NUMBER_MINTED",
									"nameLocation": "1133:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "1108:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 91,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1108:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 92,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1156:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 96,
									"mutability": "constant",
									"name": "BITPOS_NUMBER_BURNED",
									"nameLocation": "1256:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "1231:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 94,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1231:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 95,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1279:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 99,
									"mutability": "constant",
									"name": "BITPOS_AUX",
									"nameLocation": "1371:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "1346:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 97,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1346:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 98,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1384:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 107,
									"mutability": "constant",
									"name": "BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1500:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "1475:64:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 100,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1475:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1526:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1531:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1526:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 104,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1525:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 105,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1538:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1525:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 110,
									"mutability": "constant",
									"name": "BITPOS_START_TIMESTAMP",
									"nameLocation": "1636:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "1611:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1611:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1661:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 115,
									"mutability": "constant",
									"name": "BITMASK_BURNED",
									"nameLocation": "1757:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "1732:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1732:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 114,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 112,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1774:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 113,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1779:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "1774:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "BITPOS_NEXT_INITIALIZED",
									"nameLocation": "1888:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "1863:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1863:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1914:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 123,
									"mutability": "constant",
									"name": "BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2019:24:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "1994:60:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1994:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 122,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 120,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2046:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 121,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2051:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2046:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 126,
									"mutability": "constant",
									"name": "BITPOS_EXTRA_DATA",
									"nameLocation": "2146:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "2121:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 124,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2121:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 125,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2166:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 134,
									"mutability": "constant",
									"name": "BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2287:29:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "2262:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2262:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 133,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2320:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2325:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2320:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 131,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2319:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 132,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2332:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2319:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 142,
									"mutability": "constant",
									"name": "BITMASK_ADDRESS",
									"nameLocation": "2418:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "2393:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2393:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 141,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2437:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2442:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2437:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 139,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2436:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 140,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2449:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2436:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 145,
									"mutability": "constant",
									"name": "MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "2758:31:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "2733:63:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 143,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2733:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 144,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2792:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 147,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "2870:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "2854:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 146,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2854:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 149,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "2942:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "2926:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 148,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2926:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 151,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2994:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "2979:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 150,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2979:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 153,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3041:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "3026:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 152,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3026:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 157,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "3468:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "3432:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 156,
										"keyType": {
											"id": 154,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3440:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3432:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 155,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3451:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "3727:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "3691:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 160,
										"keyType": {
											"id": 158,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3699:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3691:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 159,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3710:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "3838:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "3802:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 164,
										"keyType": {
											"id": 162,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3810:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3802:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 163,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3821:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "3961:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "3908:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 170,
										"keyType": {
											"id": 166,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3916:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3908:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 169,
											"keyType": {
												"id": 167,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3935:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3927:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 168,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3946:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "4042:98:1",
										"statements": [
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 178,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "4052:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 179,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "4060:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4052:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "4052:13:1"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "4075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "4085:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4075:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "4075:17:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 186,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "4102:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 187,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "4118:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4118:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4102:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "4102:31:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "4012:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "3998:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 172,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3998:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "4033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4019:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3997:44:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4042:0:1"
									},
									"scope": 1700,
									"src": "3986:154:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "4341:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4358:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 197,
												"id": 199,
												"nodeType": "Return",
												"src": "4351:8:1"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "4146:125:1",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "4285:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4298:2:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4332:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4331:9:1"
									},
									"scope": 1700,
									"src": "4276:90:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "4496:37:1",
										"statements": [
											{
												"expression": {
													"id": 207,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 147,
													"src": "4513:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 206,
												"id": 208,
												"nodeType": "Return",
												"src": "4506:20:1"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "4372:63:1",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "4449:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4461:2:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "4487:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4487:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4486:9:1"
									},
									"scope": 1700,
									"src": "4440:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1760
									],
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "4798:247:1",
										"statements": [
											{
												"id": 224,
												"nodeType": "UncheckedBlock",
												"src": "4951:88:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 217,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 147,
																	"src": "4982:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 218,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "4998:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4982:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 220,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "5013:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5013:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4982:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 216,
														"id": 223,
														"nodeType": "Return",
														"src": "4975:53:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "4539:192:1",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see `_totalMinted`."
									},
									"functionSelector": "18160ddd",
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4745:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 213,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4771:8:1"
									},
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4756:2:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "4789:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:9:1"
									},
									"scope": 1700,
									"src": "4736:309:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "5194:223:1",
										"statements": [
											{
												"id": 237,
												"nodeType": "UncheckedBlock",
												"src": "5338:73:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 232,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "5369:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 233,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "5385:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5385:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5369:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 231,
														"id": 236,
														"nodeType": "Return",
														"src": "5362:38:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "5051:82:1",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "5147:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5159:2:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "5185:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5185:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5184:9:1"
									},
									"scope": 1700,
									"src": "5138:279:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "5550:36:1",
										"statements": [
											{
												"expression": {
													"id": 245,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 149,
													"src": "5567:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 246,
												"nodeType": "Return",
												"src": "5560:19:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "5423:66:1",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "5503:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5515:2:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "5541:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5541:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5540:9:1"
									},
									"scope": 1700,
									"src": "5494:92:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1768
									],
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "5744:516:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 257,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "6033:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6048:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "6033:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 260,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "6109:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6124:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "6109:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6033:101:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 264,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "6185:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6200:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "6185:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6033:177:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 256,
												"id": 268,
												"nodeType": "Return",
												"src": "6014:196:1"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "5592:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "5662:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 253,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5720:8:1"
									},
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "5687:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5680:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 250,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5680:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5679:20:1"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5738:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5738:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5737:6:1"
									},
									"scope": 1700,
									"src": "5653:607:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1803
									],
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "6392:148:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 279,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "6406:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6423:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6415:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 280,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6415:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6415:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6406:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 288,
												"nodeType": "IfStatement",
												"src": "6402:60:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 285,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "6434:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6434:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 287,
													"nodeType": "RevertStatement",
													"src": "6427:35:1"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 289,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "6479:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 291,
														"indexExpression": {
															"id": 290,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "6498:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6479:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 292,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "6507:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6479:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 278,
												"id": 294,
												"nodeType": "Return",
												"src": "6472:61:1"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "6266:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "6328:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 275,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6365:8:1"
									},
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6346:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6338:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:15:1"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6383:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6383:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6382:9:1"
									},
									"scope": 1700,
									"src": "6319:221:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "6687:104:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 304,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "6705:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 306,
																	"indexExpression": {
																		"id": 305,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "6724:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6705:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 307,
																	"name": "BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "6734:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6705:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 309,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6704:51:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 310,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "6758:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6704:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 303,
												"id": 312,
												"nodeType": "Return",
												"src": "6697:87:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "6546:66:1",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "6626:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "6640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6640:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6639:15:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "6678:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6677:9:1"
									},
									"scope": 1700,
									"src": "6617:174:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "6954:104:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 322,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "6972:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 324,
																	"indexExpression": {
																		"id": 323,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "6991:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6972:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 325,
																	"name": "BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "7001:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6972:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 327,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6971:51:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 328,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "7025:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6971:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 321,
												"id": 330,
												"nodeType": "Return",
												"src": "6964:87:1"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "6797:82:1",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "6893:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6915:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "6907:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6907:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6906:15:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "6945:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6945:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6944:9:1"
									},
									"scope": 1700,
									"src": "6884:174:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "7234:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 342,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "7258:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 344,
																"indexExpression": {
																	"id": 343,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "7277:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7258:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 345,
																"name": "BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "7287:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7258:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7251:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 340,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7251:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7251:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 339,
												"id": 348,
												"nodeType": "Return",
												"src": "7244:54:1"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "7064:102:1",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "7180:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7196:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "7188:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7188:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7187:15:1"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "7226:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 337,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7225:8:1"
									},
									"scope": 1700,
									"src": "7171:134:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "7540:332:1",
										"statements": [
											{
												"assignments": [
													359
												],
												"declarations": [
													{
														"constant": false,
														"id": 359,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "7558:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "7550:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 358,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7550:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": {
													"baseExpression": {
														"id": 360,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "7567:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 362,
													"indexExpression": {
														"id": 361,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "7586:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7567:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7550:42:1"
											},
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "7610:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "7602:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 364,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7602:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 366,
												"nodeType": "VariableDeclarationStatement",
												"src": "7602:17:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7702:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7716:16:1",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "7729:3:1"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "7716:9:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 355,
														"isOffset": false,
														"isSlot": false,
														"src": "7729:3:1",
														"valueSize": 1
													},
													{
														"declaration": 365,
														"isOffset": false,
														"isSlot": false,
														"src": "7716:9:1",
														"valueSize": 1
													}
												],
												"id": 367,
												"nodeType": "InlineAssembly",
												"src": "7693:49:1"
											},
											{
												"expression": {
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 368,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "7751:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 369,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "7761:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 370,
																		"name": "BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "7770:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7761:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 372,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7760:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 373,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "7797:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 374,
																		"name": "BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "7810:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7797:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 376,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7796:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7760:61:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7751:70:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "7751:70:1"
											},
											{
												"expression": {
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 380,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "7831:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 382,
														"indexExpression": {
															"id": 381,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "7850:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7831:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 383,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "7859:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7831:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "7831:34:1"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "7311:171:1",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "7496:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7512:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "7504:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7504:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "7526:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "7519:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 354,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7519:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7503:27:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7540:0:1"
									},
									"scope": 1700,
									"src": "7487:385:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "8025:1029:1",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "8043:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 440,
														"src": "8035:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 395,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8035:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 398,
												"initialValue": {
													"id": 397,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 390,
													"src": "8050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8035:22:1"
											},
											{
												"id": 436,
												"nodeType": "UncheckedBlock",
												"src": "8068:932:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 399,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "8096:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8096:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 401,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "8115:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8096:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 435,
														"nodeType": "IfStatement",
														"src": "8092:898:1",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 403,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "8141:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 404,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 147,
																	"src": "8148:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8141:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 434,
															"nodeType": "IfStatement",
															"src": "8137:853:1",
															"trueBody": {
																"id": 433,
																"nodeType": "Block",
																"src": "8163:827:1",
																"statements": [
																	{
																		"assignments": [
																			407
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 407,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "8193:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 433,
																				"src": "8185:14:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 406,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8185:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 411,
																		"initialValue": {
																			"baseExpression": {
																				"id": 408,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 157,
																				"src": "8202:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 410,
																			"indexExpression": {
																				"id": 409,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "8220:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8202:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8185:40:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 412,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 407,
																					"src": "8289:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 413,
																					"name": "BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 115,
																					"src": "8298:14:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8289:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8316:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "8289:28:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 432,
																		"nodeType": "IfStatement",
																		"src": "8285:687:1",
																		"trueBody": {
																			"id": 431,
																			"nodeType": "Block",
																			"src": "8319:653:1",
																			"statements": [
																				{
																					"body": {
																						"id": 427,
																						"nodeType": "Block",
																						"src": "8820:91:1",
																						"statements": [
																							{
																								"expression": {
																									"id": 425,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 420,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 407,
																										"src": "8850:6:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 421,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 157,
																											"src": "8859:17:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 424,
																										"indexExpression": {
																											"id": 423,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "8877:6:1",
																											"subExpression": {
																												"id": 422,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 396,
																												"src": "8879:4:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "8859:25:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "8850:34:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 426,
																								"nodeType": "ExpressionStatement",
																								"src": "8850:34:1"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 419,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 417,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 407,
																							"src": "8807:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 418,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8817:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "8807:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 428,
																					"nodeType": "WhileStatement",
																					"src": "8800:111:1"
																				},
																				{
																					"expression": {
																						"id": 429,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 407,
																						"src": "8943:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 394,
																					"id": 430,
																					"nodeType": "Return",
																					"src": "8936:13:1"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 437,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "9016:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9016:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "RevertStatement",
												"src": "9009:38:1"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "7878:66:1",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "7958:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7985:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "7977:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7977:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7976:17:1"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "8016:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8015:9:1"
									},
									"scope": 1700,
									"src": "7949:1105:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "9242:259:1",
										"statements": [
											{
												"expression": {
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 450,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "9252:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1747,
														"src": "9252:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 457,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "9285:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9277:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 455,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "9277:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9269:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 453,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9269:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9269:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9252:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "9252:41:1"
											},
											{
												"expression": {
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 462,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "9303:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1749,
														"src": "9303:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 467,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "9337:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 468,
																	"name": "BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "9347:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9337:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9330:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 465,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "9330:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9330:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "9303:67:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "9303:67:1"
											},
											{
												"expression": {
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 473,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "9380:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1751,
														"src": "9380:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 476,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "9399:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 477,
																"name": "BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "9408:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9399:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9426:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9399:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9380:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "9380:47:1"
											},
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 483,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "9437:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 485,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1753,
														"src": "9437:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 488,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "9466:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 489,
																	"name": "BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 126,
																	"src": "9476:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9466:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9459:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 486,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "9459:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9459:35:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "9437:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "9437:57:1"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "9060:78:1",
										"text": " Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "9152:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "9179:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "9171:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9171:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9170:16:1"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "9231:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "9209:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 447,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 446,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1754,
														"src": "9209:14:1"
													},
													"referencedDeclaration": 1754,
													"src": "9209:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1754_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9208:33:1"
									},
									"scope": 1700,
									"src": "9143:358:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "9670:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 505,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "9706:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 507,
															"indexExpression": {
																"id": 506,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "9724:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9706:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "9687:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1754_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9687:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 503,
												"id": 509,
												"nodeType": "Return",
												"src": "9680:51:1"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "9507:75:1",
										"text": " Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "9596:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9617:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "9609:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9609:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9608:15:1"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "9647:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 501,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 500,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1754,
														"src": "9647:14:1"
													},
													"referencedDeclaration": 1754,
													"src": "9647:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1754_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9646:23:1"
									},
									"scope": 1700,
									"src": "9587:151:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "9902:128:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 517,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "9916:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 519,
														"indexExpression": {
															"id": 518,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9934:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9916:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9944:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9916:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 531,
												"nodeType": "IfStatement",
												"src": "9912:112:1",
												"trueBody": {
													"id": 530,
													"nodeType": "Block",
													"src": "9947:77:1",
													"statements": [
														{
															"expression": {
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 522,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 157,
																		"src": "9961:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 524,
																	"indexExpression": {
																		"id": 523,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "9979:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9961:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 526,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 514,
																			"src": "10007:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 525,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "9988:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9988:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9961:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 529,
															"nodeType": "ExpressionStatement",
															"src": "9961:52:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "9744:97:1",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "9855:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9886:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "9878:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9877:15:1"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9902:0:1"
									},
									"scope": 1700,
									"src": "9846:184:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "10311:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 544,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "10366:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 543,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "10347:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10347:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 542,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "10328:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1754_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10328:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 541,
												"id": 547,
												"nodeType": "Return",
												"src": "10321:54:1"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "10036:185:1",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "10235:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10256:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "10248:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10248:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10247:17:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "10288:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 539,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 538,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1754,
														"src": "10288:14:1"
													},
													"referencedDeclaration": 1754,
													"src": "10288:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1754_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10287:23:1"
									},
									"scope": 1700,
									"src": "10226:156:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "10556:344:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10575:319:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10685:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "10698:5:1"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "10705:15:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10694:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10694:27:1"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "10685:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10812:72:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "10825:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "10839:22:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "10863:9:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10863:11:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "10835:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10835:40:1"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "10877:5:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10832:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10832:51:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10822:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10822:62:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10812:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 142,
														"isOffset": false,
														"isSlot": false,
														"src": "10705:15:1",
														"valueSize": 1
													},
													{
														"declaration": 110,
														"isOffset": false,
														"isSlot": false,
														"src": "10839:22:1",
														"valueSize": 1
													},
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "10877:5:1",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "10685:5:1",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "10698:5:1",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "10825:5:1",
														"valueSize": 1
													},
													{
														"declaration": 557,
														"isOffset": false,
														"isSlot": false,
														"src": "10812:6:1",
														"valueSize": 1
													}
												],
												"id": 559,
												"nodeType": "InlineAssembly",
												"src": "10566:328:1"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "10388:67:1",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "10469:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10496:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "10488:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10488:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "10511:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "10503:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10487:30:1"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "10548:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "10540:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10540:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10539:16:1"
									},
									"scope": 1700,
									"src": "10460:440:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1811
									],
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "11030:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 575,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "11082:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 574,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "11063:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11063:27:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11055:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 572,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11055:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11055:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11047:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 570,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11047:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11047:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 569,
												"id": 579,
												"nodeType": "Return",
												"src": "11040:52:1"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "10906:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "10966:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 566,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11003:8:1"
									},
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10982:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "10974:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10974:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10973:17:1"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "11021:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11021:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11020:9:1"
									},
									"scope": 1700,
									"src": "10957:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1883
									],
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "11230:29:1",
										"statements": [
											{
												"expression": {
													"id": 588,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 151,
													"src": "11247:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 587,
												"id": 589,
												"nodeType": "Return",
												"src": "11240:12:1"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "11105:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "11170:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 584,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11197:8:1"
									},
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11174:2:1"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "11215:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11215:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11214:15:1"
									},
									"scope": 1700,
									"src": "11161:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1889
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "11394:31:1",
										"statements": [
											{
												"expression": {
													"id": 598,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 153,
													"src": "11411:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 597,
												"id": 599,
												"nodeType": "Return",
												"src": "11404:14:1"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "11265:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "11332:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 594,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11361:8:1"
									},
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11338:2:1"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "11379:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 595,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11379:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11378:15:1"
									},
									"scope": 1700,
									"src": "11323:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1897
									],
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "11579:225:1",
										"statements": [
											{
												"condition": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11593:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 611,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "11602:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 610,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "11594:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11594:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 617,
												"nodeType": "IfStatement",
												"src": "11589:59:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 614,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "11619:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11619:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 616,
													"nodeType": "RevertStatement",
													"src": "11612:36:1"
												}
											},
											{
												"assignments": [
													619
												],
												"declarations": [
													{
														"constant": false,
														"id": 619,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "11673:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 643,
														"src": "11659:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 618,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "11659:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 622,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 620,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "11683:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11683:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11659:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "11716:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11710:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 623,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "11710:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11710:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11710:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11735:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11710:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11795:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11710:87:1",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 634,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "11763:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 636,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 604,
																				"src": "11782:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 635,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1699,
																			"src": "11772:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11772:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 632,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "11746:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "11746:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11746:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11739:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 630,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "11739:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11739:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 609,
												"id": 642,
												"nodeType": "Return",
												"src": "11703:94:1"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "11431:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "11500:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 606,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11546:8:1"
									},
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "11509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11509:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11508:17:1"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "11564:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11564:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11563:15:1"
									},
									"scope": 1700,
									"src": "11491:313:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "12115:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12132:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 649,
												"id": 651,
												"nodeType": "Return",
												"src": "12125:9:1"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "11810:234:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "12058:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12066:2:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "12100:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12100:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12099:15:1"
									},
									"scope": 1700,
									"src": "12049:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "12324:230:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12408:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12483:55:1",
															"value": {
																"arguments": [
																	{
																		"name": "BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "12497:23:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "12525:8:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12535:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12522:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12522:15:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "12493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12493:45:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12483:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 118,
														"isOffset": false,
														"isSlot": false,
														"src": "12497:23:1",
														"valueSize": 1
													},
													{
														"declaration": 656,
														"isOffset": false,
														"isSlot": false,
														"src": "12525:8:1",
														"valueSize": 1
													},
													{
														"declaration": 659,
														"isOffset": false,
														"isSlot": false,
														"src": "12483:6:1",
														"valueSize": 1
													}
												],
												"id": 661,
												"nodeType": "InlineAssembly",
												"src": "12399:149:1"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "12147:86:1",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "12247:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "12276:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "12268:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12268:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12267:18:1"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "12316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "12308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12307:16:1"
									},
									"scope": 1700,
									"src": "12238:316:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1851
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "12673:314:1",
										"statements": [
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "12691:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 706,
														"src": "12683:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 672,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12683:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"arguments": [
														{
															"id": 675,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "12707:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 674,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "12699:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12699:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12683:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 678,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "12730:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12730:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 680,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "12753:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12730:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "12726:172:1",
												"trueBody": {
													"condition": {
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "12776:45:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 683,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "12794:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 684,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1689,
																		"src": "12801:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12801:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 682,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "12777:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12777:44:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 692,
													"nodeType": "IfStatement",
													"src": "12772:126:1",
													"trueBody": {
														"id": 691,
														"nodeType": "Block",
														"src": "12823:75:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 688,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "12848:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12848:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 690,
																"nodeType": "RevertStatement",
																"src": "12841:42:1"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 694,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "12908:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 696,
														"indexExpression": {
															"id": 695,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "12924:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12908:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 697,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "12935:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12908:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "12908:29:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 701,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "12961:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "12968:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 703,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "12972:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 700,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "12952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12952:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "EmitStatement",
												"src": "12947:33:1"
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "12560:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "12620:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 670,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12664:8:1"
									},
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "12628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "12640:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12627:29:1"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12673:0:1"
									},
									"scope": 1700,
									"src": "12611:376:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1867
									],
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "13125:123:1",
										"statements": [
											{
												"condition": {
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13139:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 717,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "13148:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 716,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "13140:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13140:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 723,
												"nodeType": "IfStatement",
												"src": "13135:64:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 720,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "13165:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13165:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 722,
													"nodeType": "RevertStatement",
													"src": "13158:41:1"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 724,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "13217:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 726,
													"indexExpression": {
														"id": 725,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "13233:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13217:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 715,
												"id": 727,
												"nodeType": "Return",
												"src": "13210:31:1"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "12993:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "13057:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 712,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13098:8:1"
									},
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13077:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "13069:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13068:17:1"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "13116:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13115:9:1"
									},
									"scope": 1700,
									"src": "13048:200:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1859
									],
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "13399:219:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "13413:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 739,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "13425:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13425:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13413:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "IfStatement",
												"src": "13409:61:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 742,
															"name": "ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "13453:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13453:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 744,
													"nodeType": "RevertStatement",
													"src": "13446:24:1"
												}
											},
											{
												"expression": {
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 746,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "13481:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 750,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 747,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1689,
																	"src": "13500:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13500:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13481:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 751,
														"indexExpression": {
															"id": 749,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "13521:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13481:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 752,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "13533:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13481:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "13481:60:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 756,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1689,
																"src": "13571:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13571:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "13592:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "13602:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 755,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "13556:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13556:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "EmitStatement",
												"src": "13551:60:1"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "13254:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "13324:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 736,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13390:8:1"
									},
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13350:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "13342:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13342:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13365:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "13360:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 733,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13360:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13341:33:1"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13399:0:1"
									},
									"scope": 1700,
									"src": "13315:303:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1877
									],
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "13787:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 774,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "13804:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 776,
														"indexExpression": {
															"id": 775,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "13823:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13804:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 778,
													"indexExpression": {
														"id": 777,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "13830:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13804:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 773,
												"id": 779,
												"nodeType": "Return",
												"src": "13797:42:1"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "13624:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "13693:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 770,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13763:8:1"
									},
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13718:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "13710:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13710:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13733:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "13725:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13709:33:1"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "13781:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13781:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13780:6:1"
									},
									"scope": 1700,
									"src": "13684:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1833
									],
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "14035:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 793,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "14062:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "14068:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "14072:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14081:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 792,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															800,
															838
														],
														"referencedDeclaration": 838,
														"src": "14045:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14045:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "14045:39:1"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "13852:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "13921:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 790,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14026:8:1"
									},
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13955:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "13947:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13947:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13977:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "13969:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13997:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "13989:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13989:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13937:73:1"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14035:0:1"
									},
									"scope": 1700,
									"src": "13912:179:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1823
									],
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "14308:237:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 814,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "14331:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "14337:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "14341:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 813,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "14318:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14318:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "14318:31:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 819,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "14363:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "14363:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14363:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14381:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14363:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "14359:180:1",
												"trueBody": {
													"condition": {
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "14400:57:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 825,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "14432:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 826,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "14438:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 827,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "14442:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 828,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "14451:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 824,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "14401:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14401:56:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 835,
													"nodeType": "IfStatement",
													"src": "14396:143:1",
													"trueBody": {
														"id": 834,
														"nodeType": "Block",
														"src": "14459:80:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 831,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1733,
																		"src": "14484:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14484:40:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 833,
																"nodeType": "RevertStatement",
																"src": "14477:47:1"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "14097:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "14166:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 811,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14299:8:1"
									},
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14200:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "14192:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14222:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "14214:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14214:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14242:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "14234:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "14272:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "14259:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14259:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14182:101:1"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14308:0:1"
									},
									"scope": 1700,
									"src": "14157:388:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "14854:205:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 846,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "14883:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14883:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 848,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "14902:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14883:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 850,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "14925:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 851,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "14935:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14925:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "14883:65:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 854,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "14985:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 856,
																"indexExpression": {
																	"id": 855,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "15003:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14985:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 857,
																"name": "BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "15014:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14985:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15032:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14985:48:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14883:150:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 845,
												"id": 862,
												"nodeType": "Return",
												"src": "14864:169:1"
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "14551:235:1",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
									},
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "14800:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "14808:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14807:17:1"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "14848:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14848:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14847:6:1"
									},
									"scope": 1700,
									"src": "14791:268:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "15196:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 873,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "15216:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "15220:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15230:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 872,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															879,
															941
														],
														"referencedDeclaration": 941,
														"src": "15206:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15206:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "15206:27:1"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "15065:68:1",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "15147:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15165:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "15157:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15157:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15177:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "15169:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15169:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15156:30:1"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15196:0:1"
									},
									"scope": 1700,
									"src": "15138:102:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "15749:553:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 890,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "15765:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 891,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "15769:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 889,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "15759:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15759:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "15759:19:1"
											},
											{
												"id": 939,
												"nodeType": "UncheckedBlock",
												"src": "15789:507:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 894,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 882,
																		"src": "15817:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "15817:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "15817:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15835:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15817:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 938,
														"nodeType": "IfStatement",
														"src": "15813:473:1",
														"trueBody": {
															"id": 937,
															"nodeType": "Block",
															"src": "15838:448:1",
															"statements": [
																{
																	"assignments": [
																		900
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 900,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "15864:3:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 937,
																			"src": "15856:11:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 899,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "15856:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 902,
																	"initialValue": {
																		"id": 901,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 147,
																		"src": "15870:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "15856:27:1"
																},
																{
																	"assignments": [
																		904
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 904,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "15909:5:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 937,
																			"src": "15901:13:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 903,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "15901:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 908,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 905,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "15917:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 906,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "15923:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15917:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "15901:30:1"
																},
																{
																	"body": {
																		"id": 925,
																		"nodeType": "Block",
																		"src": "15952:205:1",
																		"statements": [
																			{
																				"condition": {
																					"id": 919,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "15978:63:1",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 912,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16018:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 911,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "16010:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 910,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "16010:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 913,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16010:10:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 914,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 882,
																								"src": "16022:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 916,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "16026:7:1",
																								"subExpression": {
																									"id": 915,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 904,
																									"src": "16026:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 917,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 886,
																								"src": "16035:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 909,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1563,
																							"src": "15979:30:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 918,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15979:62:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 924,
																				"nodeType": "IfStatement",
																				"src": "15974:165:1",
																				"trueBody": {
																					"id": 923,
																					"nodeType": "Block",
																					"src": "16043:96:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 920,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1733,
																									"src": "16076:38:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 921,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16076:40:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 922,
																							"nodeType": "RevertStatement",
																							"src": "16069:47:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 926,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 904,
																			"src": "16165:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 927,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "16173:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16165:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 929,
																	"nodeType": "DoWhileStatement",
																	"src": "15949:229:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 930,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "16241:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 931,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "16258:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16241:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 936,
																	"nodeType": "IfStatement",
																	"src": "16237:34:1",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 933,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "16263:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16263:8:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 935,
																		"nodeType": "ExpressionStatement",
																		"src": "16263:8:1"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "15246:390:1",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "15650:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15677:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "15669:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15697:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "15689:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15689:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "15728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "15715:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 885,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15715:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15659:80:1"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15749:0:1"
									},
									"scope": 1700,
									"src": "15641:661:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "16617:1438:1",
										"statements": [
											{
												"assignments": [
													950
												],
												"declarations": [
													{
														"constant": false,
														"id": 950,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "16635:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1054,
														"src": "16627:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 949,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16627:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 952,
												"initialValue": {
													"id": 951,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 147,
													"src": "16650:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16627:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 953,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "16677:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16691:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16683:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 954,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16683:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16683:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16677:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "16673:48:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 959,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "16702:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16702:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 961,
													"nodeType": "RevertStatement",
													"src": "16695:26:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 963,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "16735:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16747:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16735:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "16731:44:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 966,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "16757:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16757:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 968,
													"nodeType": "RevertStatement",
													"src": "16750:25:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16816:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16808:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 971,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16808:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16808:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 975,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "16820:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 976,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "16824:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 977,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "16838:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 970,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "16786:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16786:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "16786:61:1"
											},
											{
												"id": 1043,
												"nodeType": "UncheckedBlock",
												"src": "17030:949:1",
												"statements": [
													{
														"expression": {
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 980,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "17250:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 982,
																"indexExpression": {
																	"id": 981,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "17269:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "17250:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 983,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "17276:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 986,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 984,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17289:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 985,
																							"name": "BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 93,
																							"src": "17294:20:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "17289:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 987,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "17288:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 988,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17318:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "17288:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 990,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17287:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17276:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17250:70:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 993,
														"nodeType": "ExpressionStatement",
														"src": "17250:70:1"
													},
													{
														"expression": {
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 994,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "17556:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 996,
																"indexExpression": {
																	"id": 995,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "17574:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "17556:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 998,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "17626:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1000,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "17667:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 999,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 663,
																				"src": "17646:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17646:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1005,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17702:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1004,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17694:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1003,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17694:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1006,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17694:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1007,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 944,
																					"src": "17706:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1008,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "17710:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1002,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1640,
																				"src": "17679:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17679:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17646:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 997,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "17590:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17590:136:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17556:170:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1013,
														"nodeType": "ExpressionStatement",
														"src": "17556:170:1"
													},
													{
														"assignments": [
															1015
														],
														"declarations": [
															{
																"constant": false,
																"id": 1015,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "17749:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 1043,
																"src": "17741:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1014,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17741:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1017,
														"initialValue": {
															"id": 1016,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "17759:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17741:30:1"
													},
													{
														"assignments": [
															1019
														],
														"declarations": [
															{
																"constant": false,
																"id": 1019,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "17793:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 1043,
																"src": "17785:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1018,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17785:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1023,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1020,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "17799:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1021,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "17814:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17799:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17785:37:1"
													},
													{
														"body": {
															"id": 1034,
															"nodeType": "Block",
															"src": "17839:73:1",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 1027,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17879:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 1026,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "17871:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1025,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "17871:7:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17871:10:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1029,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "17883:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1031,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "17887:9:1",
																				"subExpression": {
																					"id": 1030,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1015,
																					"src": "17887:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1024,
																			"name": "Transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1777,
																			"src": "17862:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17862:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1033,
																	"nodeType": "EmitStatement",
																	"src": "17857:40:1"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1035,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "17920:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1036,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "17930:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17920:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1038,
														"nodeType": "DoWhileStatement",
														"src": "17836:99:1"
													},
													{
														"expression": {
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1039,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "17949:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1040,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "17965:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17949:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1042,
														"nodeType": "ExpressionStatement",
														"src": "17949:19:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18017:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18009:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1045,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18009:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18009:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "18021:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "18025:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1051,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "18039:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1044,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "17988:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17988:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "17988:60:1"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "16308:250:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "16572:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16586:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "16578:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16578:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "16598:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "16590:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16590:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16577:30:1"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16617:0:1"
									},
									"scope": 1700,
									"src": "16563:1492:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "18956:1372:1",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "18974:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1166,
														"src": "18966:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18966:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1066,
												"initialValue": {
													"id": 1065,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 147,
													"src": "18989:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18966:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1067,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "19016:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19030:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19022:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1068,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19022:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19022:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19016:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "19012:48:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1073,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "19041:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19041:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1075,
													"nodeType": "RevertStatement",
													"src": "19034:26:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1077,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "19074:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19086:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19074:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1083,
												"nodeType": "IfStatement",
												"src": "19070:44:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1080,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "19096:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19096:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1082,
													"nodeType": "RevertStatement",
													"src": "19089:25:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1084,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "19128:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1085,
														"name": "MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "19139:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19128:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1090,
												"nodeType": "IfStatement",
												"src": "19124:88:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1087,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "19179:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19179:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1089,
													"nodeType": "RevertStatement",
													"src": "19172:40:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19253:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19245:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1092,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19245:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1096,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "19257:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1097,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "19261:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1098,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "19275:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1091,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "19223:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19223:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "19223:61:1"
											},
											{
												"id": 1155,
												"nodeType": "UncheckedBlock",
												"src": "19393:859:1",
												"statements": [
													{
														"expression": {
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1101,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "19613:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1103,
																"indexExpression": {
																	"id": 1102,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "19632:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19613:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1104,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "19639:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1107,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1105,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "19652:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1106,
																							"name": "BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 93,
																							"src": "19657:20:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "19652:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1108,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19651:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1109,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19681:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "19651:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1111,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19650:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19639:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19613:70:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1114,
														"nodeType": "ExpressionStatement",
														"src": "19613:70:1"
													},
													{
														"expression": {
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1115,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "19919:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1117,
																"indexExpression": {
																	"id": 1116,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "19937:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19919:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1119,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1058,
																		"src": "19989:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1121,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1060,
																					"src": "20030:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1120,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 663,
																				"src": "20009:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20009:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1126,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "20065:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1125,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "20057:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1124,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "20057:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1127,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20057:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1128,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1058,
																					"src": "20069:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1129,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "20073:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1123,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1640,
																				"src": "20042:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20042:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20009:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1118,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "19953:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19953:136:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19919:170:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1134,
														"nodeType": "ExpressionStatement",
														"src": "19919:170:1"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1136,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "20129:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1137,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1064,
																			"src": "20143:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1138,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "20158:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20143:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20169:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "20143:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20180:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20172:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1142,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20172:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20172:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1146,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "20184:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1135,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "20109:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20109:78:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1148,
														"nodeType": "EmitStatement",
														"src": "20104:83:1"
													},
													{
														"expression": {
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1149,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "20202:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1150,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "20218:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1151,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "20233:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20218:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20202:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1154,
														"nodeType": "ExpressionStatement",
														"src": "20202:39:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20290:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20282:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1157,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20282:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20282:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1161,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "20294:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1162,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "20298:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1163,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "20312:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "20261:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20261:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "20261:60:1"
											}
										]
									},
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "18061:829:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "18904:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18925:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "18917:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18917:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "18937:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "18929:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18929:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18916:30:1"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18956:0:1"
									},
									"scope": 1700,
									"src": "18895:1433:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "20586:487:1",
										"statements": [
											{
												"assignments": [
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "tokenApprovalsPtr",
														"nameLocation": "20632:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 1184,
														"src": "20596:53:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														},
														"typeName": {
															"id": 1179,
															"keyType": {
																"id": 1177,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "20604:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Mapping",
															"src": "20596:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															},
															"valueType": {
																"id": 1178,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20615:7:1",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1182,
												"initialValue": {
													"id": 1181,
													"name": "_tokenApprovals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 165,
													"src": "20652:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
														"typeString": "mapping(uint256 => address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20596:71:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20774:293:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20828:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "tokenId",
																		"nodeType": "YulIdentifier",
																		"src": "20834:7:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20821:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20821:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20862:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "tokenApprovalsPtr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "20868:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20855:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20855:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20855:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20904:44:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20937:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20943:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "20927:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20927:21:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "20904:19:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21012:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "21037:19:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "21031:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21031:26:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "21012:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1175,
														"isOffset": false,
														"isSlot": false,
														"src": "21012:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1173,
														"isOffset": false,
														"isSlot": false,
														"src": "20904:19:1",
														"valueSize": 1
													},
													{
														"declaration": 1173,
														"isOffset": false,
														"isSlot": false,
														"src": "21037:19:1",
														"valueSize": 1
													},
													{
														"declaration": 1180,
														"isOffset": false,
														"isSlot": true,
														"src": "20868:22:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1170,
														"isOffset": false,
														"isSlot": false,
														"src": "20834:7:1",
														"valueSize": 1
													}
												],
												"id": 1183,
												"nodeType": "InlineAssembly",
												"src": "20765:302:1"
											}
										]
									},
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "20334:97:1",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedAddress",
									"nameLocation": "20445:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20473:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "20465:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20465:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20464:17:1"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "20536:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "20528:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "20565:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "20557:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20527:54:1"
									},
									"scope": 1700,
									"src": "20436:637:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "21332:481:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21351:456:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21460:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "21472:4:1"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "21478:15:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21468:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21468:26:1"
															},
															"variableNames": [
																{
																	"name": "from",
																	"nodeType": "YulIdentifier",
																	"src": "21460:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21607:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "21624:9:1"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "21635:15:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21620:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21620:31:1"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "21607:9:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21732:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "21748:9:1"
																			},
																			{
																				"name": "from",
																				"nodeType": "YulIdentifier",
																				"src": "21759:4:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21745:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21745:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "21769:9:1"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "21780:15:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21766:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21766:30:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "21742:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21742:55:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "21732:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 142,
														"isOffset": false,
														"isSlot": false,
														"src": "21478:15:1",
														"valueSize": 1
													},
													{
														"declaration": 142,
														"isOffset": false,
														"isSlot": false,
														"src": "21635:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1188,
														"isOffset": false,
														"isSlot": false,
														"src": "21780:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1190,
														"isOffset": false,
														"isSlot": false,
														"src": "21460:4:1",
														"valueSize": 1
													},
													{
														"declaration": 1190,
														"isOffset": false,
														"isSlot": false,
														"src": "21472:4:1",
														"valueSize": 1
													},
													{
														"declaration": 1190,
														"isOffset": false,
														"isSlot": false,
														"src": "21759:4:1",
														"valueSize": 1
													},
													{
														"declaration": 1192,
														"isOffset": false,
														"isSlot": false,
														"src": "21607:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1192,
														"isOffset": false,
														"isSlot": false,
														"src": "21624:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1192,
														"isOffset": false,
														"isSlot": false,
														"src": "21748:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1192,
														"isOffset": false,
														"isSlot": false,
														"src": "21769:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1195,
														"isOffset": false,
														"isSlot": false,
														"src": "21732:6:1",
														"valueSize": 1
													}
												],
												"id": 1197,
												"nodeType": "InlineAssembly",
												"src": "21342:465:1"
											}
										]
									},
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "21079:97:1",
										"text": " @dev Returns whether the `approvedAddress` is equals to `from` or `msgSender`."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isOwnerOrApproved",
									"nameLocation": "21190:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "21226:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "21218:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21218:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21259:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "21251:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21251:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "21281:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "21273:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21273:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21208:88:1"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "21324:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "21319:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21319:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21318:13:1"
									},
									"scope": 1700,
									"src": "21181:632:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1843
									],
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "22174:2620:1",
										"statements": [
											{
												"assignments": [
													1211
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "22192:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1343,
														"src": "22184:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1210,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22184:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1215,
												"initialValue": {
													"arguments": [
														{
															"id": 1213,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "22233:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1212,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "22214:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22214:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22184:57:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1220,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "22272:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22264:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1218,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "22264:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22264:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22256:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1216,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22256:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22256:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1223,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "22297:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22256:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "22252:86:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1225,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "22310:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22310:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1227,
													"nodeType": "RevertStatement",
													"src": "22303:35:1"
												}
											},
											{
												"assignments": [
													1230,
													1232
												],
												"declarations": [
													{
														"constant": false,
														"id": 1230,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "22358:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1343,
														"src": "22350:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1229,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22350:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1232,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "22387:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1343,
														"src": "22379:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1231,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "22379:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1236,
												"initialValue": {
													"arguments": [
														{
															"id": 1234,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "22426:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1233,
														"name": "_getApprovedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "22406:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22406:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22349:85:1"
											},
											{
												"condition": {
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "22530:63:1",
													"subExpression": {
														"arguments": [
															{
																"id": 1238,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "22550:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1239,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "22567:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1240,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1689,
																	"src": "22573:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22573:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1237,
															"name": "_isOwnerOrApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "22531:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22531:62:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1254,
												"nodeType": "IfStatement",
												"src": "22526:173:1",
												"trueBody": {
													"condition": {
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "22611:44:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 1245,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "22629:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1246,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1689,
																		"src": "22635:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22635:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1244,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "22612:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22612:43:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1253,
													"nodeType": "IfStatement",
													"src": "22607:92:1",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1250,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "22664:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22664:35:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1252,
														"nodeType": "RevertStatement",
														"src": "22657:42:1"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1255,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "22714:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22728:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22720:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1256,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22720:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22720:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22714:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1264,
												"nodeType": "IfStatement",
												"src": "22710:52:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1261,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "22739:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22739:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1263,
													"nodeType": "RevertStatement",
													"src": "22732:30:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1266,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "22795:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "22801:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1268,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "22805:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22814:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1265,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "22773:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22773:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "22773:43:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "22888:181:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22921:138:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "23022:19:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23043:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "23015:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23015:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23015:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "22905:15:1"
															},
															"nodeType": "YulIf",
															"src": "22902:157:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1232,
														"isOffset": false,
														"isSlot": false,
														"src": "22905:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1230,
														"isOffset": false,
														"isSlot": false,
														"src": "23022:19:1",
														"valueSize": 1
													}
												],
												"id": 1272,
												"nodeType": "InlineAssembly",
												"src": "22879:190:1"
											},
											{
												"id": 1329,
												"nodeType": "UncheckedBlock",
												"src": "23334:1359:1",
												"statements": [
													{
														"expression": {
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "23427:26:1",
															"subExpression": {
																"baseExpression": {
																	"id": 1273,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "23429:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1275,
																"indexExpression": {
																	"id": 1274,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "23448:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23429:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1277,
														"nodeType": "ExpressionStatement",
														"src": "23427:26:1"
													},
													{
														"expression": {
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "23495:24:1",
															"subExpression": {
																"baseExpression": {
																	"id": 1278,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "23497:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1280,
																"indexExpression": {
																	"id": 1279,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "23516:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23497:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1282,
														"nodeType": "ExpressionStatement",
														"src": "23495:24:1"
													},
													{
														"expression": {
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1283,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "23783:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1285,
																"indexExpression": {
																	"id": 1284,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "23801:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23783:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1287,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "23848:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1288,
																			"name": "BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 123,
																			"src": "23868:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1290,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1202,
																					"src": "23910:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1291,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1204,
																					"src": "23916:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1292,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1211,
																					"src": "23920:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1289,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1640,
																				"src": "23895:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23895:45:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23868:72:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1286,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "23812:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23812:142:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23783:171:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1297,
														"nodeType": "ExpressionStatement",
														"src": "23783:171:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1298,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "24071:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1299,
																	"name": "BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "24093:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24071:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24121:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24071:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1328,
														"nodeType": "IfStatement",
														"src": "24067:616:1",
														"trueBody": {
															"id": 1327,
															"nodeType": "Block",
															"src": "24124:559:1",
															"statements": [
																{
																	"assignments": [
																		1304
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1304,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "24150:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1327,
																			"src": "24142:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1303,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24142:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1308,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1305,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1206,
																			"src": "24164:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24174:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24164:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24142:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1309,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 157,
																				"src": "24295:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1311,
																			"indexExpression": {
																				"id": 1310,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1304,
																				"src": "24313:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "24295:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24329:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24295:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1326,
																	"nodeType": "IfStatement",
																	"src": "24291:378:1",
																	"trueBody": {
																		"id": 1325,
																		"nodeType": "Block",
																		"src": "24332:337:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1314,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1304,
																						"src": "24416:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1315,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 147,
																						"src": "24431:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "24416:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1324,
																				"nodeType": "IfStatement",
																				"src": "24412:239:1",
																				"trueBody": {
																					"id": 1323,
																					"nodeType": "Block",
																					"src": "24446:205:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 1321,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1317,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 157,
																										"src": "24576:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1319,
																									"indexExpression": {
																										"id": 1318,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1304,
																										"src": "24594:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "24576:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1320,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1211,
																									"src": "24609:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "24576:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1322,
																							"nodeType": "ExpressionStatement",
																							"src": "24576:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1331,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "24717:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1332,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "24723:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1333,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "24727:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1330,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "24708:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24708:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "EmitStatement",
												"src": "24703:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1337,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "24766:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1338,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "24772:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1339,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "24776:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24785:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1336,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "24745:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24745:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "24745:42:1"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "21819:231:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "22064:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1208,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22165:8:1"
									},
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22094:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "22086:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22086:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22116:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "22108:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22136:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "22128:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22128:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22076:73:1"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22174:0:1"
									},
									"scope": 1700,
									"src": "22055:2739:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "24916:38:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1351,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "24932:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24941:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1350,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1356,
															1508
														],
														"referencedDeclaration": 1508,
														"src": "24926:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24926:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "24926:21:1"
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "24800:62:1",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "24876:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24890:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "24882:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24881:17:1"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24916:0:1"
									},
									"scope": 1700,
									"src": "24867:87:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "25240:2928:1",
										"statements": [
											{
												"assignments": [
													1365
												],
												"declarations": [
													{
														"constant": false,
														"id": 1365,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "25258:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1507,
														"src": "25250:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1364,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25250:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1369,
												"initialValue": {
													"arguments": [
														{
															"id": 1367,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "25299:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1366,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "25280:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25280:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25250:57:1"
											},
											{
												"assignments": [
													1371
												],
												"declarations": [
													{
														"constant": false,
														"id": 1371,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "25326:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 1507,
														"src": "25318:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1370,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25318:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1379,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1376,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "25349:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25341:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1374,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "25341:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25341:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "25333:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1372,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25333:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25333:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25318:52:1"
											},
											{
												"assignments": [
													1381,
													1383
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "25390:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1507,
														"src": "25382:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1380,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25382:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1383,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "25419:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1507,
														"src": "25411:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1382,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25411:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1387,
												"initialValue": {
													"arguments": [
														{
															"id": 1385,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "25458:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1384,
														"name": "_getApprovedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "25438:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25438:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25381:85:1"
											},
											{
												"condition": {
													"id": 1388,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1361,
													"src": "25481:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1408,
												"nodeType": "IfStatement",
												"src": "25477:306:1",
												"trueBody": {
													"id": 1407,
													"nodeType": "Block",
													"src": "25496:287:1",
													"statements": [
														{
															"condition": {
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "25599:63:1",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1390,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1383,
																			"src": "25619:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1391,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "25636:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1392,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1689,
																				"src": "25642:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25642:19:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1389,
																		"name": "_isOwnerOrApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "25600:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25600:62:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1406,
															"nodeType": "IfStatement",
															"src": "25595:177:1",
															"trueBody": {
																"condition": {
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "25684:44:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1397,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1371,
																				"src": "25702:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1398,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1689,
																					"src": "25708:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "25708:19:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1396,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 781,
																			"src": "25685:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25685:43:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1405,
																"nodeType": "IfStatement",
																"src": "25680:92:1",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1402,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1727,
																			"src": "25737:33:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25737:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1404,
																	"nodeType": "RevertStatement",
																	"src": "25730:42:1"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1410,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "25815:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25829:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25821:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1411,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25821:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25821:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1415,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "25833:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25842:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1409,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "25793:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25793:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "25793:51:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "25916:181:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25949:138:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "26050:19:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26071:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "26043:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26043:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26043:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "25933:15:1"
															},
															"nodeType": "YulIf",
															"src": "25930:157:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1383,
														"isOffset": false,
														"isSlot": false,
														"src": "25933:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1381,
														"isOffset": false,
														"isSlot": false,
														"src": "26050:19:1",
														"valueSize": 1
													}
												],
												"id": 1419,
												"nodeType": "InlineAssembly",
												"src": "25907:190:1"
											},
											{
												"id": 1483,
												"nodeType": "UncheckedBlock",
												"src": "26364:1540:1",
												"statements": [
													{
														"expression": {
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1420,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "26675:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1422,
																"indexExpression": {
																	"id": 1421,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "26694:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "26675:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26704:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1424,
																				"name": "BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "26709:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26704:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1426,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "26703:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26733:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26703:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26675:59:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1430,
														"nodeType": "ExpressionStatement",
														"src": "26675:59:1"
													},
													{
														"expression": {
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1431,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "26965:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1433,
																"indexExpression": {
																	"id": 1432,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "26983:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "26965:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1435,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "27030:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1438,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1436,
																						"name": "BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 115,
																						"src": "27053:14:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1437,
																						"name": "BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 123,
																						"src": "27070:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27053:41:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1439,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "27052:43:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1441,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1371,
																					"src": "27113:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1444,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27127:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1443,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "27119:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1442,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "27119:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1445,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27119:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1446,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "27131:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1440,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1640,
																				"src": "27098:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27098:53:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "27052:99:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1434,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "26994:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26994:171:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26965:200:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1451,
														"nodeType": "ExpressionStatement",
														"src": "26965:200:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1452,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "27282:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1453,
																	"name": "BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "27304:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27282:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27332:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27282:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1482,
														"nodeType": "IfStatement",
														"src": "27278:616:1",
														"trueBody": {
															"id": 1481,
															"nodeType": "Block",
															"src": "27335:559:1",
															"statements": [
																{
																	"assignments": [
																		1458
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1458,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "27361:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1481,
																			"src": "27353:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1457,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "27353:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1462,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1459,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1359,
																			"src": "27375:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27385:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "27375:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "27353:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1463,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 157,
																				"src": "27506:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1465,
																			"indexExpression": {
																				"id": 1464,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1458,
																				"src": "27524:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27506:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27540:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27506:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1480,
																	"nodeType": "IfStatement",
																	"src": "27502:378:1",
																	"trueBody": {
																		"id": 1479,
																		"nodeType": "Block",
																		"src": "27543:337:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1470,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1468,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1458,
																						"src": "27627:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1469,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 147,
																						"src": "27642:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27627:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1478,
																				"nodeType": "IfStatement",
																				"src": "27623:239:1",
																				"trueBody": {
																					"id": 1477,
																					"nodeType": "Block",
																					"src": "27657:205:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 1475,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1471,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 157,
																										"src": "27787:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1473,
																									"indexExpression": {
																										"id": 1472,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1458,
																										"src": "27805:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "27787:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1474,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1365,
																									"src": "27820:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "27787:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1476,
																							"nodeType": "ExpressionStatement",
																							"src": "27787:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1485,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "27928:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27942:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27934:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1486,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27934:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27934:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1490,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "27946:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1484,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "27919:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27919:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "EmitStatement",
												"src": "27914:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1494,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "27985:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27999:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27991:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1495,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27991:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27991:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1499,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "28003:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28012:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1493,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "27964:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27964:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "27964:50:1"
											},
											{
												"id": 1506,
												"nodeType": "UncheckedBlock",
												"src": "28113:49:1",
												"statements": [
													{
														"expression": {
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "28137:14:1",
															"subExpression": {
																"id": 1503,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "28137:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1505,
														"nodeType": "ExpressionStatement",
														"src": "28137:14:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "24960:206:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "25180:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25194:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "25186:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25186:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "25208:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "25203:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25203:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25185:37:1"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25240:0:1"
									},
									"scope": 1700,
									"src": "25171:2997:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "28813:533:1",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1543,
															"nodeType": "Block",
															"src": "28962:96:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1535,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "28983:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1537,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1513,
																							"src": "29018:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1536,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 79,
																						"src": "28993:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$79_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1538,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28993:28:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$79",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 78,
																				"src": "28993:45:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "28993:54:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "28983:64:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1521,
																	"id": 1542,
																	"nodeType": "Return",
																	"src": "28976:71:1"
																}
															]
														},
														"errorName": "",
														"id": 1544,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1534,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1533,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "28945:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1544,
																	"src": "28938:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1532,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "28938:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "28924:37:1"
														},
														"src": "28916:142:1"
													},
													{
														"block": {
															"id": 1559,
															"nodeType": "Block",
															"src": "29087:253:1",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1548,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1546,
																				"src": "29105:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "29105:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29122:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "29105:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1557,
																		"nodeType": "Block",
																		"src": "29211:119:1",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "29238:78:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "29271:2:1",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "29275:6:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "29267:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "29267:15:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "29290:6:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "29284:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "29284:13:1"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "29260:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "29260:38:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "29260:38:1"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 1546,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "29275:6:1",
																						"valueSize": 1
																					},
																					{
																						"declaration": 1546,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "29290:6:1",
																						"valueSize": 1
																					}
																				],
																				"id": 1556,
																				"nodeType": "InlineAssembly",
																				"src": "29229:87:1"
																			}
																		]
																	},
																	"id": 1558,
																	"nodeType": "IfStatement",
																	"src": "29101:229:1",
																	"trueBody": {
																		"id": 1555,
																		"nodeType": "Block",
																		"src": "29125:80:1",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1552,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1733,
																						"src": "29150:38:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1553,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29150:40:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1554,
																				"nodeType": "RevertStatement",
																				"src": "29143:47:1"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 1560,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1547,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1546,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "29079:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1560,
																	"src": "29066:19:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1545,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "29066:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "29065:21:1"
														},
														"src": "29059:281:1"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1526,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1689,
																"src": "28873:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28873:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1528,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "28894:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1529,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "28900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1530,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "28909:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1523,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "28852:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1522,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "28827:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$79_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28827:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$79",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 78,
														"src": "28827:45:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28827:88:1",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1561,
												"nodeType": "TryStatement",
												"src": "28823:517:1"
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "28174:470:1",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "28658:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28706:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "28698:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28698:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28728:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "28720:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28720:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28748:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "28740:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28740:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "28778:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "28765:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1516,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28765:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28688:101:1"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "28807:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28807:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28806:6:1"
									},
									"scope": 1700,
									"src": "28649:697:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "29508:445:1",
										"statements": [
											{
												"assignments": [
													1572
												],
												"declarations": [
													{
														"constant": false,
														"id": 1572,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "29526:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1606,
														"src": "29518:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1571,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29518:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1576,
												"initialValue": {
													"baseExpression": {
														"id": 1573,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "29535:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1575,
													"indexExpression": {
														"id": 1574,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "29553:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29535:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29518:41:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1577,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "29573:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29583:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29573:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1583,
												"nodeType": "IfStatement",
												"src": "29569:61:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1580,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "29593:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29593:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1582,
													"nodeType": "RevertStatement",
													"src": "29586:44:1"
												}
											},
											{
												"assignments": [
													1585
												],
												"declarations": [
													{
														"constant": false,
														"id": 1585,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "29648:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1606,
														"src": "29640:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1584,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29640:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1586,
												"nodeType": "VariableDeclarationStatement",
												"src": "29640:23:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "29752:52:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29766:28:1",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "29785:9:1"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "29766:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1568,
														"isOffset": false,
														"isSlot": false,
														"src": "29785:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1585,
														"isOffset": false,
														"isSlot": false,
														"src": "29766:15:1",
														"valueSize": 1
													}
												],
												"id": 1587,
												"nodeType": "InlineAssembly",
												"src": "29743:61:1"
											},
											{
												"expression": {
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1588,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "29813:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1589,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "29823:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1590,
																		"name": "BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "29832:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29823:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1592,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "29822:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1593,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1585,
																		"src": "29866:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1594,
																		"name": "BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 126,
																		"src": "29885:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29866:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1596,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "29865:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29822:81:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29813:90:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "29813:90:1"
											},
											{
												"expression": {
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1600,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "29913:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1602,
														"indexExpression": {
															"id": 1601,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "29931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29913:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1603,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "29940:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29913:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1605,
												"nodeType": "ExpressionStatement",
												"src": "29913:33:1"
											}
										]
									},
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "29352:84:1",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "29450:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "29474:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "29466:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29466:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "29488:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "29481:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1567,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "29481:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29465:33:1"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29508:0:1"
									},
									"scope": 1700,
									"src": "29441:512:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1639,
										"nodeType": "Block",
										"src": "30239:162:1",
										"statements": [
											{
												"assignments": [
													1620
												],
												"declarations": [
													{
														"constant": false,
														"id": 1620,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "30256:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 1639,
														"src": "30249:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1619,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "30249:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1627,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1623,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "30275:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1624,
																"name": "BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "30298:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30275:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "30268:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1621,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "30268:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30268:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30249:67:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1631,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1610,
																		"src": "30352:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1632,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "30358:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1633,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1620,
																		"src": "30362:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1630,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "30341:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30341:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30333:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1628,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "30333:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30333:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1636,
														"name": "BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "30377:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30333:61:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1618,
												"id": 1638,
												"nodeType": "Return",
												"src": "30326:68:1"
											}
										]
									},
									"documentation": {
										"id": 1608,
										"nodeType": "StructuredDocumentation",
										"src": "29959:135:1",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "30108:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30140:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "30132:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30132:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30162:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "30154:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30154:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "30182:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "30174:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30174:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30122:85:1"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "30230:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30229:9:1"
									},
									"scope": 1700,
									"src": "30099:302:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "31102:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "30407:549:1",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "30970:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30998:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "30990:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30990:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31020:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "31012:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31012:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "31039:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "31032:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1646,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "31032:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30980:82:1"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "31094:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1649,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "31094:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31093:8:1"
									},
									"scope": 1700,
									"src": "30961:143:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "31894:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "31110:627:1",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred.\n This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "31751:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31790:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "31782:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31782:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31812:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "31804:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "31832:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "31824:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "31862:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "31854:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31854:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31772:104:1"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31894:0:1"
									},
									"scope": 1700,
									"src": "31742:154:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "32688:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "31902:630:1",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred.\n This includes minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "32546:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32584:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "32576:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32576:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32606:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "32598:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32598:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "32626:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "32618:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32618:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "32656:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "32648:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32648:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32566:104:1"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32688:0:1"
									},
									"scope": 1700,
									"src": "32537:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "32943:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1685,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "32960:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "32960:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1684,
												"id": 1687,
												"nodeType": "Return",
												"src": "32953:17:1"
											}
										]
									},
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "32696:173:1",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "32883:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32900:2:1"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "32934:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32934:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:9:1"
									},
									"scope": 1700,
									"src": "32874:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "33154:1844:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "33173:1819:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33524:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33541:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "33535:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33535:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33548:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33531:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33531:21:1"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "33524:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33631:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "33637:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33624:17:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33624:17:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "33729:14:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "33740:3:1"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "33733:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34620:144:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "34679:18:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34690:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34695:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "34686:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34686:11:1"
																		},
																		"variableNames": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "34679:3:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34722:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "34731:2:1",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "34739:4:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "34745:2:1",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "34735:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "34735:13:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "34727:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "34727:22:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "34714:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34714:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34714:36:1"
																	}
																]
															},
															"condition": {
																"name": "temp",
																"nodeType": "YulIdentifier",
																"src": "34509:4:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "34514:105:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "34584:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "34596:4:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34602:2:1",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "34592:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34592:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "34584:4:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "34086:422:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "34176:17:1",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "34188:5:1"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "34180:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "34300:18:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34311:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34316:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "34307:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34307:11:1"
																		},
																		"variableNames": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "34300:3:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34428:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "34437:2:1",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "34445:4:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "34451:2:1",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "34441:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "34441:13:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "34433:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "34433:22:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "34420:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34420:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34420:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "34473:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "34485:4:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34491:2:1",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "34481:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34481:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "34473:4:1"
																			}
																		]
																	}
																]
															},
															"src": "34082:682:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34778:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "34796:3:1"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34801:3:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "34792:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "34792:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "34782:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "34898:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34909:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34914:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "34905:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "34905:12:1"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "34898:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34970:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "34975:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34963:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "34963:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34963:19:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "33524:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "33637:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "33740:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "34300:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "34311:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "34428:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "34679:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "34690:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "34722:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "34801:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "34898:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "34909:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "34970:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1692,
														"isOffset": false,
														"isSlot": false,
														"src": "34188:5:1",
														"valueSize": 1
													}
												],
												"id": 1697,
												"nodeType": "InlineAssembly",
												"src": "33164:1828:1"
											}
										]
									},
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "32983:90:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "33087:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33105:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "33097:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33096:15:1"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "ptr",
												"nameLocation": "33149:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "33135:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1694,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "33135:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33134:19:1"
									},
									"scope": 1700,
									"src": "33078:1920:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1701,
							"src": "885:34115:1",
							"usedErrors": [
								1706,
								1709,
								1712,
								1715,
								1718,
								1721,
								1724,
								1727,
								1730,
								1733,
								1736,
								1739,
								1742,
								1745
							]
						}
					],
					"src": "84:34917:1"
				},
				"id": 1
			},
			"erc721a/contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							1909
						]
					},
					"id": 1910,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1702,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1703,
								"nodeType": "StructuredDocumentation",
								"src": "109:59:2",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 1909,
							"linearizedBaseContracts": [
								1909
							],
							"name": "IERC721A",
							"nameLocation": "179:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "194:76:2",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 1706,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "281:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:2:2"
									},
									"src": "275:42:2"
								},
								{
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "323:44:2",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 1709,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "378:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:2"
									},
									"src": "372:41:2"
								},
								{
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "419:66:2",
										"text": " The caller cannot approve to their own address."
									},
									"errorSelector": "b06307db",
									"id": 1712,
									"name": "ApproveToCaller",
									"nameLocation": "496:15:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:2"
									},
									"src": "490:24:2"
								},
								{
									"documentation": {
										"id": 1713,
										"nodeType": "StructuredDocumentation",
										"src": "520:65:2",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 1715,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "596:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:2:2"
									},
									"src": "590:35:2"
								},
								{
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "631:51:2",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 1718,
									"name": "MintToZeroAddress",
									"nameLocation": "693:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:2:2"
									},
									"src": "687:26:2"
								},
								{
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "719:72:2",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 1721,
									"name": "MintZeroQuantity",
									"nameLocation": "802:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:2:2"
									},
									"src": "796:25:2"
								},
								{
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "827:44:2",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 1724,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "882:29:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:2:2"
									},
									"src": "876:38:2"
								},
								{
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "920:76:2",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 1727,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "1007:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:2:2"
									},
									"src": "1001:42:2"
								},
								{
									"documentation": {
										"id": 1728,
										"nodeType": "StructuredDocumentation",
										"src": "1049:53:2",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 1730,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1113:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:2:2"
									},
									"src": "1107:35:2"
								},
								{
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "1148:109:2",
										"text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 1733,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1268:38:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:2:2"
									},
									"src": "1262:47:2"
								},
								{
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "1315:55:2",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 1736,
									"name": "TransferToZeroAddress",
									"nameLocation": "1381:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1402:2:2"
									},
									"src": "1375:30:2"
								},
								{
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "1411:44:2",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 1739,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1466:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:2:2"
									},
									"src": "1460:36:2"
								},
								{
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "1502:79:2",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 1742,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1592:31:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1623:2:2"
									},
									"src": "1586:40:2"
								},
								{
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "1632:83:2",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 1745,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1726:35:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1761:2:2"
									},
									"src": "1720:44:2"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1754,
									"members": [
										{
											"constant": false,
											"id": 1747,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1847:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 1754,
											"src": "1839:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1746,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1839:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1749,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1960:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 1754,
											"src": "1953:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1748,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1953:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1751,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2035:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1754,
											"src": "2030:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1750,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2030:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1753,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2150:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 1754,
											"src": "2143:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1752,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2143:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1777:14:2",
									"nodeType": "StructDefinition",
									"scope": 1909,
									"src": "1770:396:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "2172:193:2",
										"text": " @dev Returns the total amount of tokens stored by the contract.\n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1760,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2379:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2390:2:2"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "2416:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2416:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:9:2"
									},
									"scope": 1909,
									"src": "2370:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "2534:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2888:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2913:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "2906:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1762,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2906:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2905:20:2"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "2949:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2949:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:6:2"
									},
									"scope": 1909,
									"src": "2879:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "3064:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1777,
									"name": "Transfer",
									"nameLocation": "3163:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3188:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "3172:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3210:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "3194:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3230:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "3214:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:67:2"
									},
									"src": "3157:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "3245:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1786,
									"name": "Approval",
									"nameLocation": "3350:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3375:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "3359:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3398:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "3382:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3424:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "3408:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3358:74:2"
									},
									"src": "3344:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "3439:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1795,
									"name": "ApprovalForAll",
									"nameLocation": "3567:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3598:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "3582:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3621:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "3605:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3605:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3636:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "3631:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3631:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:64:2"
									},
									"src": "3561:85:2"
								},
								{
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "3652:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3742:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3760:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "3752:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:15:2"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3798:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "3790:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:17:2"
									},
									"scope": 1909,
									"src": "3733:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "3813:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1811,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "3958:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3974:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "3966:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3966:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3965:17:2"
									},
									"returnParameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "4006:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:15:2"
									},
									"scope": 1909,
									"src": "3949:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1812,
										"nodeType": "StructuredDocumentation",
										"src": "4027:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4597:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4631:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "4623:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4653:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "4645:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "4665:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4705:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "4690:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1819,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4690:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4613:102:2"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4724:0:2"
									},
									"scope": 1909,
									"src": "4588:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "4731:690:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1833,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5435:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5469:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "5461:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5491:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "5483:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5483:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5511:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "5503:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5451:73:2"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5533:0:2"
									},
									"scope": 1909,
									"src": "5426:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "5540:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6058:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6088:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "6080:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6080:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6110:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "6102:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6130:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "6122:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6122:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6070:73:2"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6152:0:2"
									},
									"scope": 1909,
									"src": "6049:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "6159:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6625:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6641:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "6633:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6633:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6653:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "6645:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6645:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6632:29:2"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6670:0:2"
									},
									"scope": 1909,
									"src": "6616:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1852,
										"nodeType": "StructuredDocumentation",
										"src": "6677:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1859,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7000:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7026:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "7018:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7018:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7041:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "7036:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7036:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7017:34:2"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7060:0:2"
									},
									"scope": 1909,
									"src": "6991:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "7067:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1867,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7220:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7240:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "7232:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7231:17:2"
									},
									"returnParameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7280:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "7272:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:18:2"
									},
									"scope": 1909,
									"src": "7211:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1868,
										"nodeType": "StructuredDocumentation",
										"src": "7296:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1877,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7448:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "7465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7488:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "7480:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7480:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7464:33:2"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "7521:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1874,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7521:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7520:6:2"
									},
									"scope": 1909,
									"src": "7439:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "7640:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1883,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7712:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7716:2:2"
									},
									"returnParameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "7742:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1880,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7742:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7741:15:2"
									},
									"scope": 1909,
									"src": "7703:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1884,
										"nodeType": "StructuredDocumentation",
										"src": "7763:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1889,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7837:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7843:2:2"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "7869:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1886,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7869:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7868:15:2"
									},
									"scope": 1909,
									"src": "7828:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "7890:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1897,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "7994:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8011:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "8003:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8003:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8002:17:2"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "8043:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1894,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8043:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8042:15:2"
									},
									"scope": 1909,
									"src": "7985:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "8168:203:2",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n as defined in the ERC2309 standard. See `_mintERC2309` for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 1908,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8382:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8418:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "8402:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8402:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8439:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "8431:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8466:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "8450:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8450:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8488:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "8472:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8472:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8401:90:2"
									},
									"src": "8376:116:2"
								}
							],
							"scope": 1910,
							"src": "169:8325:2",
							"usedErrors": [
								1706,
								1709,
								1712,
								1715,
								1718,
								1721,
								1724,
								1727,
								1730,
								1733,
								1736,
								1739,
								1742,
								1745
							]
						}
					],
					"src": "84:8411:2"
				},
				"id": 2
			},
			"erc721a/contracts/extensions/ERC721AQueryable.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/extensions/ERC721AQueryable.sol",
					"exportedSymbols": {
						"ERC721A": [
							1700
						],
						"ERC721AQueryable": [
							2284
						],
						"ERC721A__IERC721Receiver": [
							79
						],
						"IERC721A": [
							1909
						],
						"IERC721AQueryable": [
							2349
						]
					},
					"id": 2285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1911,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:3"
						},
						{
							"absolutePath": "erc721a/contracts/extensions/IERC721AQueryable.sol",
							"file": "./IERC721AQueryable.sol",
							"id": 1912,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2285,
							"sourceUnit": 2350,
							"src": "109:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc721a/contracts/ERC721A.sol",
							"file": "../ERC721A.sol",
							"id": 1913,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2285,
							"sourceUnit": 1701,
							"src": "143:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1915,
										"name": "ERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1700,
										"src": "302:7:3"
									},
									"id": 1916,
									"nodeType": "InheritanceSpecifier",
									"src": "302:7:3"
								},
								{
									"baseName": {
										"id": 1917,
										"name": "IERC721AQueryable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2349,
										"src": "311:17:3"
									},
									"id": 1918,
									"nodeType": "InheritanceSpecifier",
									"src": "311:17:3"
								}
							],
							"canonicalName": "ERC721AQueryable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1914,
								"nodeType": "StructuredDocumentation",
								"src": "169:94:3",
								"text": " @title ERC721A Queryable\n @dev ERC721A subclass with convenience query functions."
							},
							"fullyImplemented": false,
							"id": 2284,
							"linearizedBaseContracts": [
								2284,
								2349,
								1700,
								1909
							],
							"name": "ERC721AQueryable",
							"nameLocation": "282:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2315
									],
									"body": {
										"id": 1961,
										"nodeType": "Block",
										"src": "1191:311:3",
										"statements": [
											{
												"assignments": [
													1930
												],
												"declarations": [
													{
														"constant": false,
														"id": 1930,
														"mutability": "mutable",
														"name": "ownership",
														"nameLocation": "1223:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 1961,
														"src": "1201:31:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 1929,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1928,
																"name": "TokenOwnership",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1754,
																"src": "1201:14:3"
															},
															"referencedDeclaration": 1754,
															"src": "1201:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1754_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1931,
												"nodeType": "VariableDeclarationStatement",
												"src": "1201:31:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1932,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "1246:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1933,
																"name": "_startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "1256:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1256:15:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1246:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1936,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "1275:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1937,
																"name": "_nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "1286:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1286:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1275:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1246:54:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1944,
												"nodeType": "IfStatement",
												"src": "1242:101:3",
												"trueBody": {
													"id": 1943,
													"nodeType": "Block",
													"src": "1302:41:3",
													"statements": [
														{
															"expression": {
																"id": 1941,
																"name": "ownership",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1930,
																"src": "1323:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																	"typeString": "struct IERC721A.TokenOwnership memory"
																}
															},
															"functionReturnParameters": 1927,
															"id": 1942,
															"nodeType": "Return",
															"src": "1316:16:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1945,
														"name": "ownership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "1352:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1947,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "1377:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1946,
															"name": "_ownershipAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "1364:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1754_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
															}
														},
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1364:21:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"src": "1352:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"id": 1950,
												"nodeType": "ExpressionStatement",
												"src": "1352:33:3"
											},
											{
												"condition": {
													"expression": {
														"id": 1951,
														"name": "ownership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "1399:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "burned",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1751,
													"src": "1399:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1956,
												"nodeType": "IfStatement",
												"src": "1395:63:3",
												"trueBody": {
													"id": 1955,
													"nodeType": "Block",
													"src": "1417:41:3",
													"statements": [
														{
															"expression": {
																"id": 1953,
																"name": "ownership",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1930,
																"src": "1438:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																	"typeString": "struct IERC721A.TokenOwnership memory"
																}
															},
															"functionReturnParameters": 1927,
															"id": 1954,
															"nodeType": "Return",
															"src": "1431:16:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1958,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "1487:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1957,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "1474:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1754_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 1927,
												"id": 1960,
												"nodeType": "Return",
												"src": "1467:28:3"
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "335:752:3",
										"text": " @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n If the `tokenId` is out of bounds:\n   - `addr` = `address(0)`\n   - `startTimestamp` = `0`\n   - `burned` = `false`\n   - `extraData` = `0`\n If the `tokenId` is burned:\n   - `addr` = `<Address of owner before token was burned>`\n   - `startTimestamp` = `<Timestamp when token was burned>`\n   - `burned = `true`\n   - `extraData` = `<Extra data when token was burned>`\n Otherwise:\n   - `addr` = `<Address of owner>`\n   - `startTimestamp` = `<Timestamp of start of ownership>`\n   - `burned = `false`\n   - `extraData` = `<Extra data at start of ownership>`"
									},
									"functionSelector": "c23dc68f",
									"id": 1962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipOf",
									"nameLocation": "1101:19:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1923,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1150:8:3"
									},
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1129:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "1121:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1120:17:3"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "1168:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1924,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1754,
														"src": "1168:14:3"
													},
													"referencedDeclaration": 1754,
													"src": "1168:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1754_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:23:3"
									},
									"scope": 2284,
									"src": "1092:410:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2326
									],
									"body": {
										"id": 2015,
										"nodeType": "Block",
										"src": "1769:345:3",
										"statements": [
											{
												"id": 2014,
												"nodeType": "UncheckedBlock",
												"src": "1779:329:3",
												"statements": [
													{
														"assignments": [
															1975
														],
														"declarations": [
															{
																"constant": false,
																"id": 1975,
																"mutability": "mutable",
																"name": "tokenIdsLength",
																"nameLocation": "1811:14:3",
																"nodeType": "VariableDeclaration",
																"scope": 2014,
																"src": "1803:22:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1974,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1803:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1978,
														"initialValue": {
															"expression": {
																"id": 1976,
																"name": "tokenIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "1828:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1828:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1803:40:3"
													},
													{
														"assignments": [
															1983
														],
														"declarations": [
															{
																"constant": false,
																"id": 1983,
																"mutability": "mutable",
																"name": "ownerships",
																"nameLocation": "1881:10:3",
																"nodeType": "VariableDeclaration",
																"scope": 2014,
																"src": "1857:34:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$1754_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct IERC721A.TokenOwnership[]"
																},
																"typeName": {
																	"baseType": {
																		"id": 1981,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1980,
																			"name": "TokenOwnership",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1754,
																			"src": "1857:14:3"
																		},
																		"referencedDeclaration": 1754,
																		"src": "1857:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$1754_storage_ptr",
																			"typeString": "struct IERC721A.TokenOwnership"
																		}
																	},
																	"id": 1982,
																	"nodeType": "ArrayTypeName",
																	"src": "1857:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$1754_storage_$dyn_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership[]"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1990,
														"initialValue": {
															"arguments": [
																{
																	"id": 1988,
																	"name": "tokenIdsLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1975,
																	"src": "1915:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1894:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenOwnership_$1754_memory_ptr_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 1985,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1984,
																			"name": "TokenOwnership",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1754,
																			"src": "1898:14:3"
																		},
																		"referencedDeclaration": 1754,
																		"src": "1898:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$1754_storage_ptr",
																			"typeString": "struct IERC721A.TokenOwnership"
																		}
																	},
																	"id": 1986,
																	"nodeType": "ArrayTypeName",
																	"src": "1898:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$1754_storage_$dyn_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership[]"
																	}
																}
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1894:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$1754_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory[] memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1857:73:3"
													},
													{
														"body": {
															"id": 2010,
															"nodeType": "Block",
															"src": "1986:81:3",
															"statements": [
																{
																	"expression": {
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2000,
																				"name": "ownerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1983,
																				"src": "2004:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$1754_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership memory[] memory"
																				}
																			},
																			"id": 2002,
																			"indexExpression": {
																				"id": 2001,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1992,
																				"src": "2015:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "2004:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 2004,
																						"name": "tokenIds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1966,
																						"src": "2040:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 2006,
																					"indexExpression": {
																						"id": 2005,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1992,
																						"src": "2049:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2040:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2003,
																				"name": "explicitOwnershipOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1962,
																				"src": "2020:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1754_memory_ptr_$",
																					"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
																				}
																			},
																			"id": 2007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2020:32:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"src": "2004:48:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																			"typeString": "struct IERC721A.TokenOwnership memory"
																		}
																	},
																	"id": 2009,
																	"nodeType": "ExpressionStatement",
																	"src": "2004:48:3"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1994,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "1960:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1995,
																"name": "tokenIdsLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1975,
																"src": "1965:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1960:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2011,
														"initializationExpression": {
															"assignments": [
																1992
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1992,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "1957:1:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 2011,
																	"src": "1949:9:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1991,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1949:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1993,
															"nodeType": "VariableDeclarationStatement",
															"src": "1949:9:3"
														},
														"loopExpression": {
															"expression": {
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "1981:3:3",
																"subExpression": {
																	"id": 1997,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "1983:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1999,
															"nodeType": "ExpressionStatement",
															"src": "1981:3:3"
														},
														"nodeType": "ForStatement",
														"src": "1944:123:3"
													},
													{
														"expression": {
															"id": 2012,
															"name": "ownerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1983,
															"src": "2087:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$1754_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory[] memory"
															}
														},
														"functionReturnParameters": 1973,
														"id": 2013,
														"nodeType": "Return",
														"src": "2080:17:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "1508:142:3",
										"text": " @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n See {ERC721AQueryable-explicitOwnershipOf}"
									},
									"functionSelector": "5bbb2177",
									"id": 2016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipsOf",
									"nameLocation": "1664:20:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1968,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1726:8:3"
									},
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "1702:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1685:25:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1964,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1685:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1965,
													"nodeType": "ArrayTypeName",
													"src": "1685:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1684:27:3"
									},
									"returnParameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1744:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$1754_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership[]"
												},
												"typeName": {
													"baseType": {
														"id": 1970,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1969,
															"name": "TokenOwnership",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1754,
															"src": "1744:14:3"
														},
														"referencedDeclaration": 1754,
														"src": "1744:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1754_storage_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														}
													},
													"id": 1971,
													"nodeType": "ArrayTypeName",
													"src": "1744:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$1754_storage_$dyn_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:25:3"
									},
									"scope": 2284,
									"src": "1655:459:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2339
									],
									"body": {
										"id": 2191,
										"nodeType": "Block",
										"src": "2639:2297:3",
										"statements": [
											{
												"id": 2190,
												"nodeType": "UncheckedBlock",
												"src": "2649:2281:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2030,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "2677:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2031,
																"name": "stop",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "2686:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2677:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2036,
														"nodeType": "IfStatement",
														"src": "2673:45:3",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2033,
																	"name": "InvalidQueryRange",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2306,
																	"src": "2699:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2699:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2035,
															"nodeType": "RevertStatement",
															"src": "2692:26:3"
														}
													},
													{
														"assignments": [
															2038
														],
														"declarations": [
															{
																"constant": false,
																"id": 2038,
																"mutability": "mutable",
																"name": "tokenIdsIdx",
																"nameLocation": "2740:11:3",
																"nodeType": "VariableDeclaration",
																"scope": 2190,
																"src": "2732:19:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2037,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2732:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2039,
														"nodeType": "VariableDeclarationStatement",
														"src": "2732:19:3"
													},
													{
														"assignments": [
															2041
														],
														"declarations": [
															{
																"constant": false,
																"id": 2041,
																"mutability": "mutable",
																"name": "stopLimit",
																"nameLocation": "2773:9:3",
																"nodeType": "VariableDeclaration",
																"scope": 2190,
																"src": "2765:17:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2040,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2765:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2044,
														"initialValue": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2042,
																"name": "_nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "2785:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2785:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2765:34:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2045,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "2875:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2046,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2883:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2883:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2875:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2055,
														"nodeType": "IfStatement",
														"src": "2871:85:3",
														"trueBody": {
															"id": 2054,
															"nodeType": "Block",
															"src": "2900:56:3",
															"statements": [
																{
																	"expression": {
																		"id": 2052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2049,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2021,
																			"src": "2918:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2050,
																				"name": "_startTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 201,
																				"src": "2926:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 2051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2926:15:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2918:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2053,
																	"nodeType": "ExpressionStatement",
																	"src": "2918:23:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2056,
																"name": "stop",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "3023:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2057,
																"name": "stopLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2041,
																"src": "3030:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3023:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2064,
														"nodeType": "IfStatement",
														"src": "3019:71:3",
														"trueBody": {
															"id": 2063,
															"nodeType": "Block",
															"src": "3041:49:3",
															"statements": [
																{
																	"expression": {
																		"id": 2061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2059,
																			"name": "stop",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2023,
																			"src": "3059:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 2060,
																			"name": "stopLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2041,
																			"src": "3066:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3059:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2062,
																	"nodeType": "ExpressionStatement",
																	"src": "3059:16:3"
																}
															]
														}
													},
													{
														"assignments": [
															2066
														],
														"declarations": [
															{
																"constant": false,
																"id": 2066,
																"mutability": "mutable",
																"name": "tokenIdsMaxLength",
																"nameLocation": "3111:17:3",
																"nodeType": "VariableDeclaration",
																"scope": 2190,
																"src": "3103:25:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2065,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3103:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2070,
														"initialValue": {
															"arguments": [
																{
																	"id": 2068,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2019,
																	"src": "3141:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2067,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "3131:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3131:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3103:44:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2071,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "3314:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2072,
																"name": "stop",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "3322:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3314:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 2094,
															"nodeType": "Block",
															"src": "3527:54:3",
															"statements": [
																{
																	"expression": {
																		"id": 2092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2090,
																			"name": "tokenIdsMaxLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2066,
																			"src": "3545:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "30",
																			"id": 2091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3565:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3545:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2093,
																	"nodeType": "ExpressionStatement",
																	"src": "3545:21:3"
																}
															]
														},
														"id": 2095,
														"nodeType": "IfStatement",
														"src": "3310:271:3",
														"trueBody": {
															"id": 2089,
															"nodeType": "Block",
															"src": "3328:193:3",
															"statements": [
																{
																	"assignments": [
																		2075
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2075,
																			"mutability": "mutable",
																			"name": "rangeLength",
																			"nameLocation": "3354:11:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 2089,
																			"src": "3346:19:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2074,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3346:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2079,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2076,
																			"name": "stop",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2023,
																			"src": "3368:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2077,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2021,
																			"src": "3375:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3368:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3346:34:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2080,
																			"name": "rangeLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "3402:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2081,
																			"name": "tokenIdsMaxLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2066,
																			"src": "3416:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3402:31:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2088,
																	"nodeType": "IfStatement",
																	"src": "3398:109:3",
																	"trueBody": {
																		"id": 2087,
																		"nodeType": "Block",
																		"src": "3435:72:3",
																		"statements": [
																			{
																				"expression": {
																					"id": 2085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2083,
																						"name": "tokenIdsMaxLength",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2066,
																						"src": "3457:17:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2084,
																						"name": "rangeLength",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2075,
																						"src": "3477:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3457:31:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2086,
																				"nodeType": "ExpressionStatement",
																				"src": "3457:31:3"
																			}
																		]
																	}
																}
															]
														}
													},
													{
														"assignments": [
															2100
														],
														"declarations": [
															{
																"constant": false,
																"id": 2100,
																"mutability": "mutable",
																"name": "tokenIds",
																"nameLocation": "3611:8:3",
																"nodeType": "VariableDeclaration",
																"scope": 2190,
																"src": "3594:25:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[]"
																},
																"typeName": {
																	"baseType": {
																		"id": 2098,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3594:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2099,
																	"nodeType": "ArrayTypeName",
																	"src": "3594:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2106,
														"initialValue": {
															"arguments": [
																{
																	"id": 2104,
																	"name": "tokenIdsMaxLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2066,
																	"src": "3636:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "3622:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2101,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3626:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2102,
																	"nodeType": "ArrayTypeName",
																	"src": "3626:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3622:32:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3594:60:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2107,
																"name": "tokenIdsMaxLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2066,
																"src": "3672:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3693:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3672:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2113,
														"nodeType": "IfStatement",
														"src": "3668:76:3",
														"trueBody": {
															"id": 2112,
															"nodeType": "Block",
															"src": "3696:48:3",
															"statements": [
																{
																	"expression": {
																		"id": 2110,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2100,
																		"src": "3721:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"functionReturnParameters": 2029,
																	"id": 2111,
																	"nodeType": "Return",
																	"src": "3714:15:3"
																}
															]
														}
													},
													{
														"assignments": [
															2116
														],
														"declarations": [
															{
																"constant": false,
																"id": 2116,
																"mutability": "mutable",
																"name": "ownership",
																"nameLocation": "3907:9:3",
																"nodeType": "VariableDeclaration",
																"scope": 2190,
																"src": "3885:31:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2115,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2114,
																		"name": "TokenOwnership",
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1754,
																		"src": "3885:14:3"
																	},
																	"referencedDeclaration": 1754,
																	"src": "3885:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1754_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2120,
														"initialValue": {
															"arguments": [
																{
																	"id": 2118,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2021,
																	"src": "3939:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2117,
																"name": "explicitOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "3919:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1754_memory_ptr_$",
																	"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
																}
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3919:26:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3885:60:3"
													},
													{
														"assignments": [
															2122
														],
														"declarations": [
															{
																"constant": false,
																"id": 2122,
																"mutability": "mutable",
																"name": "currOwnershipAddr",
																"nameLocation": "3967:17:3",
																"nodeType": "VariableDeclaration",
																"scope": 2190,
																"src": "3959:25:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 2121,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3959:7:3",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2123,
														"nodeType": "VariableDeclarationStatement",
														"src": "3959:25:3"
													},
													{
														"condition": {
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4200:17:3",
															"subExpression": {
																"expression": {
																	"id": 2124,
																	"name": "ownership",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2116,
																	"src": "4201:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																		"typeString": "struct IERC721A.TokenOwnership memory"
																	}
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "burned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1751,
																"src": "4201:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2133,
														"nodeType": "IfStatement",
														"src": "4196:90:3",
														"trueBody": {
															"id": 2132,
															"nodeType": "Block",
															"src": "4219:67:3",
															"statements": [
																{
																	"expression": {
																		"id": 2130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2127,
																			"name": "currOwnershipAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2122,
																			"src": "4237:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"id": 2128,
																				"name": "ownership",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2116,
																				"src": "4257:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership memory"
																				}
																			},
																			"id": 2129,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "addr",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1747,
																			"src": "4257:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "4237:34:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2131,
																	"nodeType": "ExpressionStatement",
																	"src": "4237:34:3"
																}
															]
														}
													},
													{
														"body": {
															"id": 2185,
															"nodeType": "Block",
															"src": "4375:391:3",
															"statements": [
																{
																	"expression": {
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2148,
																			"name": "ownership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2116,
																			"src": "4393:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 2150,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2135,
																					"src": "4418:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2149,
																				"name": "_ownershipAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 511,
																				"src": "4405:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1754_memory_ptr_$",
																					"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
																				}
																			},
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4405:15:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"src": "4393:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																			"typeString": "struct IERC721A.TokenOwnership memory"
																		}
																	},
																	"id": 2153,
																	"nodeType": "ExpressionStatement",
																	"src": "4393:27:3"
																},
																{
																	"condition": {
																		"expression": {
																			"id": 2154,
																			"name": "ownership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2116,
																			"src": "4442:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 2155,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "burned",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1751,
																		"src": "4442:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2158,
																	"nodeType": "IfStatement",
																	"src": "4438:71:3",
																	"trueBody": {
																		"id": 2157,
																		"nodeType": "Block",
																		"src": "4460:49:3",
																		"statements": [
																			{
																				"id": 2156,
																				"nodeType": "Continue",
																				"src": "4482:8:3"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2159,
																				"name": "ownership",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2116,
																				"src": "4530:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership memory"
																				}
																			},
																			"id": 2160,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "addr",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1747,
																			"src": "4530:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2163,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4556:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4548:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2161,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4548:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4548:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "4530:28:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2172,
																	"nodeType": "IfStatement",
																	"src": "4526:109:3",
																	"trueBody": {
																		"id": 2171,
																		"nodeType": "Block",
																		"src": "4560:75:3",
																		"statements": [
																			{
																				"expression": {
																					"id": 2169,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2166,
																						"name": "currOwnershipAddr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2122,
																						"src": "4582:17:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 2167,
																							"name": "ownership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2116,
																							"src": "4602:9:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 2168,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1747,
																						"src": "4602:14:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "4582:34:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2170,
																				"nodeType": "ExpressionStatement",
																				"src": "4582:34:3"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2173,
																			"name": "currOwnershipAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2122,
																			"src": "4656:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2174,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2019,
																			"src": "4677:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "4656:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2184,
																	"nodeType": "IfStatement",
																	"src": "4652:100:3",
																	"trueBody": {
																		"id": 2183,
																		"nodeType": "Block",
																		"src": "4684:68:3",
																		"statements": [
																			{
																				"expression": {
																					"id": 2181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"id": 2176,
																							"name": "tokenIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2100,
																							"src": "4706:8:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 2179,
																						"indexExpression": {
																							"id": 2178,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "4715:13:3",
																							"subExpression": {
																								"id": 2177,
																								"name": "tokenIdsIdx",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2038,
																								"src": "4715:11:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "4706:23:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2180,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2135,
																						"src": "4732:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4706:27:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2182,
																				"nodeType": "ExpressionStatement",
																				"src": "4706:27:3"
																			}
																		]
																	}
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2138,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "4323:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2139,
																	"name": "stop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2023,
																	"src": "4328:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4323:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2141,
																	"name": "tokenIdsIdx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2038,
																	"src": "4336:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2142,
																	"name": "tokenIdsMaxLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2066,
																	"src": "4351:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4336:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4323:45:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2186,
														"initializationExpression": {
															"assignments": [
																2135
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2135,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "4312:1:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 2186,
																	"src": "4304:9:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2134,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4304:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2137,
															"initialValue": {
																"id": 2136,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "4316:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4304:17:3"
														},
														"loopExpression": {
															"expression": {
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "4370:3:3",
																"subExpression": {
																	"id": 2145,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "4372:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2147,
															"nodeType": "ExpressionStatement",
															"src": "4370:3:3"
														},
														"nodeType": "ForStatement",
														"src": "4299:467:3"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4830:61:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "tokenIds",
																				"nodeType": "YulIdentifier",
																				"src": "4855:8:3"
																			},
																			{
																				"name": "tokenIdsIdx",
																				"nodeType": "YulIdentifier",
																				"src": "4865:11:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4848:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4848:29:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4848:29:3"
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2100,
																"isOffset": false,
																"isSlot": false,
																"src": "4855:8:3",
																"valueSize": 1
															},
															{
																"declaration": 2038,
																"isOffset": false,
																"isSlot": false,
																"src": "4865:11:3",
																"valueSize": 1
															}
														],
														"id": 2187,
														"nodeType": "InlineAssembly",
														"src": "4821:70:3"
													},
													{
														"expression": {
															"id": 2188,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2100,
															"src": "4911:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"functionReturnParameters": 2029,
														"id": 2189,
														"nodeType": "Return",
														"src": "4904:15:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "2120:365:3",
										"text": " @dev Returns an array of token IDs owned by `owner`,\n in the range [`start`, `stop`)\n (i.e. `start <= tokenId < stop`).\n This function allows for tokens to be queried if the collection\n grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n Requirements:\n - `start` < `stop`"
									},
									"functionSelector": "99a2557a",
									"id": 2192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwnerIn",
									"nameLocation": "2499:15:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2025,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2603:8:3"
									},
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2532:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "2524:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "2555:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "2547:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "stop",
												"nameLocation": "2578:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "2570:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2514:74:3"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "2621:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2026,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2621:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2027,
													"nodeType": "ArrayTypeName",
													"src": "2621:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2620:18:3"
									},
									"scope": 2284,
									"src": "2490:2446:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2348
									],
									"body": {
										"id": 2282,
										"nodeType": "Block",
										"src": "5461:783:3",
										"statements": [
											{
												"id": 2281,
												"nodeType": "UncheckedBlock",
												"src": "5471:767:3",
												"statements": [
													{
														"assignments": [
															2203
														],
														"declarations": [
															{
																"constant": false,
																"id": 2203,
																"mutability": "mutable",
																"name": "tokenIdsIdx",
																"nameLocation": "5503:11:3",
																"nodeType": "VariableDeclaration",
																"scope": 2281,
																"src": "5495:19:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2202,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5495:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2204,
														"nodeType": "VariableDeclarationStatement",
														"src": "5495:19:3"
													},
													{
														"assignments": [
															2206
														],
														"declarations": [
															{
																"constant": false,
																"id": 2206,
																"mutability": "mutable",
																"name": "currOwnershipAddr",
																"nameLocation": "5536:17:3",
																"nodeType": "VariableDeclaration",
																"scope": 2281,
																"src": "5528:25:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 2205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5528:7:3",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2207,
														"nodeType": "VariableDeclarationStatement",
														"src": "5528:25:3"
													},
													{
														"assignments": [
															2209
														],
														"declarations": [
															{
																"constant": false,
																"id": 2209,
																"mutability": "mutable",
																"name": "tokenIdsLength",
																"nameLocation": "5575:14:3",
																"nodeType": "VariableDeclaration",
																"scope": 2281,
																"src": "5567:22:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2208,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5567:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2213,
														"initialValue": {
															"arguments": [
																{
																	"id": 2211,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2195,
																	"src": "5602:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2210,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "5592:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5592:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5567:41:3"
													},
													{
														"assignments": [
															2218
														],
														"declarations": [
															{
																"constant": false,
																"id": 2218,
																"mutability": "mutable",
																"name": "tokenIds",
																"nameLocation": "5639:8:3",
																"nodeType": "VariableDeclaration",
																"scope": 2281,
																"src": "5622:25:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[]"
																},
																"typeName": {
																	"baseType": {
																		"id": 2216,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5622:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2217,
																	"nodeType": "ArrayTypeName",
																	"src": "5622:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2224,
														"initialValue": {
															"arguments": [
																{
																	"id": 2222,
																	"name": "tokenIdsLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "5664:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5650:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2219,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5654:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2220,
																	"nodeType": "ArrayTypeName",
																	"src": "5654:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5650:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5622:57:3"
													},
													{
														"assignments": [
															2227
														],
														"declarations": [
															{
																"constant": false,
																"id": 2227,
																"mutability": "mutable",
																"name": "ownership",
																"nameLocation": "5715:9:3",
																"nodeType": "VariableDeclaration",
																"scope": 2281,
																"src": "5693:31:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2226,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2225,
																		"name": "TokenOwnership",
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1754,
																		"src": "5693:14:3"
																	},
																	"referencedDeclaration": 1754,
																	"src": "5693:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1754_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2228,
														"nodeType": "VariableDeclarationStatement",
														"src": "5693:31:3"
													},
													{
														"body": {
															"id": 2277,
															"nodeType": "Block",
															"src": "5808:391:3",
															"statements": [
																{
																	"expression": {
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2240,
																			"name": "ownership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2227,
																			"src": "5826:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 2242,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2230,
																					"src": "5851:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2241,
																				"name": "_ownershipAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 511,
																				"src": "5838:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1754_memory_ptr_$",
																					"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
																				}
																			},
																			"id": 2243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5838:15:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"src": "5826:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																			"typeString": "struct IERC721A.TokenOwnership memory"
																		}
																	},
																	"id": 2245,
																	"nodeType": "ExpressionStatement",
																	"src": "5826:27:3"
																},
																{
																	"condition": {
																		"expression": {
																			"id": 2246,
																			"name": "ownership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2227,
																			"src": "5875:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 2247,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "burned",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1751,
																		"src": "5875:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2250,
																	"nodeType": "IfStatement",
																	"src": "5871:71:3",
																	"trueBody": {
																		"id": 2249,
																		"nodeType": "Block",
																		"src": "5893:49:3",
																		"statements": [
																			{
																				"id": 2248,
																				"nodeType": "Continue",
																				"src": "5915:8:3"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2251,
																				"name": "ownership",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2227,
																				"src": "5963:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership memory"
																				}
																			},
																			"id": 2252,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "addr",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1747,
																			"src": "5963:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2255,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5989:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5981:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2253,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5981:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5981:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5963:28:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2264,
																	"nodeType": "IfStatement",
																	"src": "5959:109:3",
																	"trueBody": {
																		"id": 2263,
																		"nodeType": "Block",
																		"src": "5993:75:3",
																		"statements": [
																			{
																				"expression": {
																					"id": 2261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2258,
																						"name": "currOwnershipAddr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2206,
																						"src": "6015:17:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 2259,
																							"name": "ownership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2227,
																							"src": "6035:9:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 2260,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1747,
																						"src": "6035:14:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "6015:34:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2262,
																				"nodeType": "ExpressionStatement",
																				"src": "6015:34:3"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2265,
																			"name": "currOwnershipAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2206,
																			"src": "6089:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2266,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2195,
																			"src": "6110:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6089:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2276,
																	"nodeType": "IfStatement",
																	"src": "6085:100:3",
																	"trueBody": {
																		"id": 2275,
																		"nodeType": "Block",
																		"src": "6117:68:3",
																		"statements": [
																			{
																				"expression": {
																					"id": 2273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"id": 2268,
																							"name": "tokenIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2218,
																							"src": "6139:8:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 2271,
																						"indexExpression": {
																							"id": 2270,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "6148:13:3",
																							"subExpression": {
																								"id": 2269,
																								"name": "tokenIdsIdx",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2203,
																								"src": "6148:11:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "6139:23:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2272,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2230,
																						"src": "6165:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6139:27:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2274,
																				"nodeType": "ExpressionStatement",
																				"src": "6139:27:3"
																			}
																		]
																	}
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2234,
																"name": "tokenIdsIdx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2203,
																"src": "5772:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2235,
																"name": "tokenIdsLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "5787:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5772:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2278,
														"initializationExpression": {
															"assignments": [
																2230
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2230,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "5751:1:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 2278,
																	"src": "5743:9:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2229,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5743:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2233,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2231,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "5755:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5755:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5743:27:3"
														},
														"loopExpression": {
															"expression": {
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "5803:3:3",
																"subExpression": {
																	"id": 2237,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2230,
																	"src": "5805:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2239,
															"nodeType": "ExpressionStatement",
															"src": "5803:3:3"
														},
														"nodeType": "ForStatement",
														"src": "5738:461:3"
													},
													{
														"expression": {
															"id": 2279,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2218,
															"src": "6219:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"functionReturnParameters": 2201,
														"id": 2280,
														"nodeType": "Return",
														"src": "6212:15:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2193,
										"nodeType": "StructuredDocumentation",
										"src": "4942:426:3",
										"text": " @dev Returns an array of token IDs owned by `owner`.\n This function scans the ownership mapping and is O(totalSupply) in complexity.\n It is meant to be called off-chain.\n See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n multiple smaller scans if the collection is large enough to cause\n an out-of-gas error (10K pfp collections should be fine)."
									},
									"functionSelector": "8462151c",
									"id": 2283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwner",
									"nameLocation": "5382:13:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5425:8:3"
									},
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5404:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "5396:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5396:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5395:15:3"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "5443:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2198,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5443:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2199,
													"nodeType": "ArrayTypeName",
													"src": "5443:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5442:18:3"
									},
									"scope": 2284,
									"src": "5373:871:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2285,
							"src": "264:5982:3",
							"usedErrors": [
								1706,
								1709,
								1712,
								1715,
								1718,
								1721,
								1724,
								1727,
								1730,
								1733,
								1736,
								1739,
								1742,
								1745,
								2306
							]
						}
					],
					"src": "84:6163:3"
				},
				"id": 3
			},
			"erc721a/contracts/extensions/IERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/extensions/IERC721ABurnable.sol",
					"exportedSymbols": {
						"IERC721A": [
							1909
						],
						"IERC721ABurnable": [
							2297
						]
					},
					"id": 2298,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:4"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "../IERC721A.sol",
							"id": 2287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2298,
							"sourceUnit": 1910,
							"src": "109:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2289,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1909,
										"src": "234:8:4"
									},
									"id": 2290,
									"nodeType": "InheritanceSpecifier",
									"src": "234:8:4"
								}
							],
							"canonicalName": "IERC721ABurnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2288,
								"nodeType": "StructuredDocumentation",
								"src": "136:67:4",
								"text": " @dev Interface of an ERC721ABurnable compliant contract."
							},
							"fullyImplemented": false,
							"id": 2297,
							"linearizedBaseContracts": [
								2297,
								1909
							],
							"name": "IERC721ABurnable",
							"nameLocation": "214:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2291,
										"nodeType": "StructuredDocumentation",
										"src": "249:163:4",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 2296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "426:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "439:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "431:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:17:4"
									},
									"returnParameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:0:4"
									},
									"scope": 2297,
									"src": "417:40:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2298,
							"src": "204:255:4",
							"usedErrors": [
								1706,
								1709,
								1712,
								1715,
								1718,
								1721,
								1724,
								1727,
								1730,
								1733,
								1736,
								1739,
								1742,
								1745
							]
						}
					],
					"src": "84:376:4"
				},
				"id": 4
			},
			"erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/extensions/IERC721AQueryable.sol",
					"exportedSymbols": {
						"IERC721A": [
							1909
						],
						"IERC721AQueryable": [
							2349
						]
					},
					"id": 2350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2299,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:5"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "../IERC721A.sol",
							"id": 2300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2350,
							"sourceUnit": 1910,
							"src": "109:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2302,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1909,
										"src": "236:8:5"
									},
									"id": 2303,
									"nodeType": "InheritanceSpecifier",
									"src": "236:8:5"
								}
							],
							"canonicalName": "IERC721AQueryable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2301,
								"nodeType": "StructuredDocumentation",
								"src": "136:68:5",
								"text": " @dev Interface of an ERC721AQueryable compliant contract."
							},
							"fullyImplemented": false,
							"id": 2349,
							"linearizedBaseContracts": [
								2349,
								1909
							],
							"name": "IERC721AQueryable",
							"nameLocation": "215:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2304,
										"nodeType": "StructuredDocumentation",
										"src": "251:59:5",
										"text": " Invalid query range (`start` >= `stop`)."
									},
									"errorSelector": "32c1995a",
									"id": 2306,
									"name": "InvalidQueryRange",
									"nameLocation": "321:17:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:2:5"
									},
									"src": "315:26:5"
								},
								{
									"documentation": {
										"id": 2307,
										"nodeType": "StructuredDocumentation",
										"src": "347:599:5",
										"text": " @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n If the `tokenId` is out of bounds:\n   - `addr` = `address(0)`\n   - `startTimestamp` = `0`\n   - `burned` = `false`\n If the `tokenId` is burned:\n   - `addr` = `<Address of owner before token was burned>`\n   - `startTimestamp` = `<Timestamp when token was burned>`\n   - `burned = `true`\n Otherwise:\n   - `addr` = `<Address of owner>`\n   - `startTimestamp` = `<Timestamp of start of ownership>`\n   - `burned = `false`"
									},
									"functionSelector": "c23dc68f",
									"id": 2315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipOf",
									"nameLocation": "960:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "988:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "980:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:17:5"
									},
									"returnParameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "1020:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1754_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 2312,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2311,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1754,
														"src": "1020:14:5"
													},
													"referencedDeclaration": 1754,
													"src": "1020:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1754_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:23:5"
									},
									"scope": 2349,
									"src": "951:92:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2316,
										"nodeType": "StructuredDocumentation",
										"src": "1049:142:5",
										"text": " @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n See {ERC721AQueryable-explicitOwnershipOf}"
									},
									"functionSelector": "5bbb2177",
									"id": 2326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipsOf",
									"nameLocation": "1205:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "1243:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "1226:25:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2317,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1226:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2318,
													"nodeType": "ArrayTypeName",
													"src": "1226:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:27:5"
									},
									"returnParameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "1276:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$1754_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership[]"
												},
												"typeName": {
													"baseType": {
														"id": 2322,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2321,
															"name": "TokenOwnership",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1754,
															"src": "1276:14:5"
														},
														"referencedDeclaration": 1754,
														"src": "1276:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1754_storage_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														}
													},
													"id": 2323,
													"nodeType": "ArrayTypeName",
													"src": "1276:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$1754_storage_$dyn_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:25:5"
									},
									"scope": 2349,
									"src": "1196:105:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2327,
										"nodeType": "StructuredDocumentation",
										"src": "1307:365:5",
										"text": " @dev Returns an array of token IDs owned by `owner`,\n in the range [`start`, `stop`)\n (i.e. `start <= tokenId < stop`).\n This function allows for tokens to be queried if the collection\n grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n Requirements:\n - `start` < `stop`"
									},
									"functionSelector": "99a2557a",
									"id": 2339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwnerIn",
									"nameLocation": "1686:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1719:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "1711:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1742:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "1734:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1734:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "stop",
												"nameLocation": "1765:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "1757:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1757:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1701:74:5"
									},
									"returnParameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "1799:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2335,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1799:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2336,
													"nodeType": "ArrayTypeName",
													"src": "1799:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:18:5"
									},
									"scope": 2349,
									"src": "1677:140:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "1823:426:5",
										"text": " @dev Returns an array of token IDs owned by `owner`.\n This function scans the ownership mapping and is O(totalSupply) in complexity.\n It is meant to be called off-chain.\n See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n multiple smaller scans if the collection is large enough to cause\n an out-of-gas error (10K pfp collections should be fine)."
									},
									"functionSelector": "8462151c",
									"id": 2348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwner",
									"nameLocation": "2263:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2285:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "2277:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2277:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2276:15:5"
									},
									"returnParameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "2315:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2344,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2315:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2345,
													"nodeType": "ArrayTypeName",
													"src": "2315:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2314:18:5"
									},
									"scope": 2349,
									"src": "2254:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2350,
							"src": "205:2130:5",
							"usedErrors": [
								1706,
								1709,
								1712,
								1715,
								1718,
								1721,
								1724,
								1727,
								1730,
								1733,
								1736,
								1739,
								1742,
								1745,
								2306
							]
						}
					],
					"src": "84:2252:5"
				},
				"id": 5
			}
		}
	}
}